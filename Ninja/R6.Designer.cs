//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Ninja {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("R6")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class R6 : global::System.Data.DataSet {
        
        private A6DataTable tableA6;
        
        private B6DataTable tableB6;
        
        private E1DataTable tableE1;
        
        private F6DataTable tableF6;
        
        private O6DataTable tableO6;
        
        private O7DataTable tableO7;
        
        private O8DataTable tableO8;
        
        private P6DataTable tableP6;
        
        private P7DataTable tableP7;
        
        private P8DataTable tableP8;
        
        private S6DataTable tableS6;
        
        private sqlite_sequenceDataTable tablesqlite_sequence;
        
        private T6DataTable tableT6;
        
        private T7DataTable tableT7;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public R6() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected R6(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["A6"] != null)) {
                    base.Tables.Add(new A6DataTable(ds.Tables["A6"]));
                }
                if ((ds.Tables["B6"] != null)) {
                    base.Tables.Add(new B6DataTable(ds.Tables["B6"]));
                }
                if ((ds.Tables["E1"] != null)) {
                    base.Tables.Add(new E1DataTable(ds.Tables["E1"]));
                }
                if ((ds.Tables["F6"] != null)) {
                    base.Tables.Add(new F6DataTable(ds.Tables["F6"]));
                }
                if ((ds.Tables["O6"] != null)) {
                    base.Tables.Add(new O6DataTable(ds.Tables["O6"]));
                }
                if ((ds.Tables["O7"] != null)) {
                    base.Tables.Add(new O7DataTable(ds.Tables["O7"]));
                }
                if ((ds.Tables["O8"] != null)) {
                    base.Tables.Add(new O8DataTable(ds.Tables["O8"]));
                }
                if ((ds.Tables["P6"] != null)) {
                    base.Tables.Add(new P6DataTable(ds.Tables["P6"]));
                }
                if ((ds.Tables["P7"] != null)) {
                    base.Tables.Add(new P7DataTable(ds.Tables["P7"]));
                }
                if ((ds.Tables["P8"] != null)) {
                    base.Tables.Add(new P8DataTable(ds.Tables["P8"]));
                }
                if ((ds.Tables["S6"] != null)) {
                    base.Tables.Add(new S6DataTable(ds.Tables["S6"]));
                }
                if ((ds.Tables["sqlite_sequence"] != null)) {
                    base.Tables.Add(new sqlite_sequenceDataTable(ds.Tables["sqlite_sequence"]));
                }
                if ((ds.Tables["T6"] != null)) {
                    base.Tables.Add(new T6DataTable(ds.Tables["T6"]));
                }
                if ((ds.Tables["T7"] != null)) {
                    base.Tables.Add(new T7DataTable(ds.Tables["T7"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public A6DataTable A6 {
            get {
                return this.tableA6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public B6DataTable B6 {
            get {
                return this.tableB6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public E1DataTable E1 {
            get {
                return this.tableE1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public F6DataTable F6 {
            get {
                return this.tableF6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public O6DataTable O6 {
            get {
                return this.tableO6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public O7DataTable O7 {
            get {
                return this.tableO7;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public O8DataTable O8 {
            get {
                return this.tableO8;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public P6DataTable P6 {
            get {
                return this.tableP6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public P7DataTable P7 {
            get {
                return this.tableP7;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public P8DataTable P8 {
            get {
                return this.tableP8;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S6DataTable S6 {
            get {
                return this.tableS6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sqlite_sequenceDataTable sqlite_sequence {
            get {
                return this.tablesqlite_sequence;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T6DataTable T6 {
            get {
                return this.tableT6;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T7DataTable T7 {
            get {
                return this.tableT7;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            R6 cln = ((R6)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["A6"] != null)) {
                    base.Tables.Add(new A6DataTable(ds.Tables["A6"]));
                }
                if ((ds.Tables["B6"] != null)) {
                    base.Tables.Add(new B6DataTable(ds.Tables["B6"]));
                }
                if ((ds.Tables["E1"] != null)) {
                    base.Tables.Add(new E1DataTable(ds.Tables["E1"]));
                }
                if ((ds.Tables["F6"] != null)) {
                    base.Tables.Add(new F6DataTable(ds.Tables["F6"]));
                }
                if ((ds.Tables["O6"] != null)) {
                    base.Tables.Add(new O6DataTable(ds.Tables["O6"]));
                }
                if ((ds.Tables["O7"] != null)) {
                    base.Tables.Add(new O7DataTable(ds.Tables["O7"]));
                }
                if ((ds.Tables["O8"] != null)) {
                    base.Tables.Add(new O8DataTable(ds.Tables["O8"]));
                }
                if ((ds.Tables["P6"] != null)) {
                    base.Tables.Add(new P6DataTable(ds.Tables["P6"]));
                }
                if ((ds.Tables["P7"] != null)) {
                    base.Tables.Add(new P7DataTable(ds.Tables["P7"]));
                }
                if ((ds.Tables["P8"] != null)) {
                    base.Tables.Add(new P8DataTable(ds.Tables["P8"]));
                }
                if ((ds.Tables["S6"] != null)) {
                    base.Tables.Add(new S6DataTable(ds.Tables["S6"]));
                }
                if ((ds.Tables["sqlite_sequence"] != null)) {
                    base.Tables.Add(new sqlite_sequenceDataTable(ds.Tables["sqlite_sequence"]));
                }
                if ((ds.Tables["T6"] != null)) {
                    base.Tables.Add(new T6DataTable(ds.Tables["T6"]));
                }
                if ((ds.Tables["T7"] != null)) {
                    base.Tables.Add(new T7DataTable(ds.Tables["T7"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableA6 = ((A6DataTable)(base.Tables["A6"]));
            if ((initTable == true)) {
                if ((this.tableA6 != null)) {
                    this.tableA6.InitVars();
                }
            }
            this.tableB6 = ((B6DataTable)(base.Tables["B6"]));
            if ((initTable == true)) {
                if ((this.tableB6 != null)) {
                    this.tableB6.InitVars();
                }
            }
            this.tableE1 = ((E1DataTable)(base.Tables["E1"]));
            if ((initTable == true)) {
                if ((this.tableE1 != null)) {
                    this.tableE1.InitVars();
                }
            }
            this.tableF6 = ((F6DataTable)(base.Tables["F6"]));
            if ((initTable == true)) {
                if ((this.tableF6 != null)) {
                    this.tableF6.InitVars();
                }
            }
            this.tableO6 = ((O6DataTable)(base.Tables["O6"]));
            if ((initTable == true)) {
                if ((this.tableO6 != null)) {
                    this.tableO6.InitVars();
                }
            }
            this.tableO7 = ((O7DataTable)(base.Tables["O7"]));
            if ((initTable == true)) {
                if ((this.tableO7 != null)) {
                    this.tableO7.InitVars();
                }
            }
            this.tableO8 = ((O8DataTable)(base.Tables["O8"]));
            if ((initTable == true)) {
                if ((this.tableO8 != null)) {
                    this.tableO8.InitVars();
                }
            }
            this.tableP6 = ((P6DataTable)(base.Tables["P6"]));
            if ((initTable == true)) {
                if ((this.tableP6 != null)) {
                    this.tableP6.InitVars();
                }
            }
            this.tableP7 = ((P7DataTable)(base.Tables["P7"]));
            if ((initTable == true)) {
                if ((this.tableP7 != null)) {
                    this.tableP7.InitVars();
                }
            }
            this.tableP8 = ((P8DataTable)(base.Tables["P8"]));
            if ((initTable == true)) {
                if ((this.tableP8 != null)) {
                    this.tableP8.InitVars();
                }
            }
            this.tableS6 = ((S6DataTable)(base.Tables["S6"]));
            if ((initTable == true)) {
                if ((this.tableS6 != null)) {
                    this.tableS6.InitVars();
                }
            }
            this.tablesqlite_sequence = ((sqlite_sequenceDataTable)(base.Tables["sqlite_sequence"]));
            if ((initTable == true)) {
                if ((this.tablesqlite_sequence != null)) {
                    this.tablesqlite_sequence.InitVars();
                }
            }
            this.tableT6 = ((T6DataTable)(base.Tables["T6"]));
            if ((initTable == true)) {
                if ((this.tableT6 != null)) {
                    this.tableT6.InitVars();
                }
            }
            this.tableT7 = ((T7DataTable)(base.Tables["T7"]));
            if ((initTable == true)) {
                if ((this.tableT7 != null)) {
                    this.tableT7.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "R6";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/R6.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableA6 = new A6DataTable();
            base.Tables.Add(this.tableA6);
            this.tableB6 = new B6DataTable();
            base.Tables.Add(this.tableB6);
            this.tableE1 = new E1DataTable();
            base.Tables.Add(this.tableE1);
            this.tableF6 = new F6DataTable();
            base.Tables.Add(this.tableF6);
            this.tableO6 = new O6DataTable();
            base.Tables.Add(this.tableO6);
            this.tableO7 = new O7DataTable();
            base.Tables.Add(this.tableO7);
            this.tableO8 = new O8DataTable();
            base.Tables.Add(this.tableO8);
            this.tableP6 = new P6DataTable();
            base.Tables.Add(this.tableP6);
            this.tableP7 = new P7DataTable();
            base.Tables.Add(this.tableP7);
            this.tableP8 = new P8DataTable();
            base.Tables.Add(this.tableP8);
            this.tableS6 = new S6DataTable();
            base.Tables.Add(this.tableS6);
            this.tablesqlite_sequence = new sqlite_sequenceDataTable();
            base.Tables.Add(this.tablesqlite_sequence);
            this.tableT6 = new T6DataTable();
            base.Tables.Add(this.tableT6);
            this.tableT7 = new T7DataTable();
            base.Tables.Add(this.tableT7);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeA6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeB6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeE1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeF6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeO6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeO7() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeO8() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeP6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeP7() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeP8() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeS6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializesqlite_sequence() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeT6() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeT7() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            R6 ds = new R6();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void A6RowChangeEventHandler(object sender, A6RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void B6RowChangeEventHandler(object sender, B6RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void E1RowChangeEventHandler(object sender, E1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void F6RowChangeEventHandler(object sender, F6RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void O6RowChangeEventHandler(object sender, O6RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void O7RowChangeEventHandler(object sender, O7RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void O8RowChangeEventHandler(object sender, O8RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void P6RowChangeEventHandler(object sender, P6RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void P7RowChangeEventHandler(object sender, P7RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void P8RowChangeEventHandler(object sender, P8RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void S6RowChangeEventHandler(object sender, S6RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void sqlite_sequenceRowChangeEventHandler(object sender, sqlite_sequenceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void T6RowChangeEventHandler(object sender, T6RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void T7RowChangeEventHandler(object sender, T7RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class A6DataTable : global::System.Data.TypedTableBase<A6Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnBFY;
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnFundName;
            
            private global::System.Data.DataColumn columnNPM;
            
            private global::System.Data.DataColumn columnNpmName;
            
            private global::System.Data.DataColumn columnAH;
            
            private global::System.Data.DataColumn columnAhName;
            
            private global::System.Data.DataColumn columnAHRC;
            
            private global::System.Data.DataColumn columnAhrcName;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnOrgName;
            
            private global::System.Data.DataColumn columnPrcOrgCode;
            
            private global::System.Data.DataColumn columnPrcOrgName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnPrgramProjectCode;
            
            private global::System.Data.DataColumn columnProgramProjectName;
            
            private global::System.Data.DataColumn columnRpioActivityCode;
            
            private global::System.Data.DataColumn columnProgramArea;
            
            private global::System.Data.DataColumn columnProgramAreaName;
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnBocName;
            
            private global::System.Data.DataColumn columnFOC;
            
            private global::System.Data.DataColumn columnFocName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public A6DataTable() {
                this.TableName = "A6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal A6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected A6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BFYColumn {
                get {
                    return this.columnBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundNameColumn {
                get {
                    return this.columnFundName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NPMColumn {
                get {
                    return this.columnNPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NpmNameColumn {
                get {
                    return this.columnNpmName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AHColumn {
                get {
                    return this.columnAH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AhNameColumn {
                get {
                    return this.columnAhName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AHRCColumn {
                get {
                    return this.columnAHRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AhrcNameColumn {
                get {
                    return this.columnAhrcName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgNameColumn {
                get {
                    return this.columnOrgName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrcOrgCodeColumn {
                get {
                    return this.columnPrcOrgCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrcOrgNameColumn {
                get {
                    return this.columnPrcOrgName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrgramProjectCodeColumn {
                get {
                    return this.columnPrgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectNameColumn {
                get {
                    return this.columnProgramProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RpioActivityCodeColumn {
                get {
                    return this.columnRpioActivityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaColumn {
                get {
                    return this.columnProgramArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaNameColumn {
                get {
                    return this.columnProgramAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BocNameColumn {
                get {
                    return this.columnBocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FOCColumn {
                get {
                    return this.columnFOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FocNameColumn {
                get {
                    return this.columnFocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public A6Row this[int index] {
                get {
                    return ((A6Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event A6RowChangeEventHandler A6RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event A6RowChangeEventHandler A6RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event A6RowChangeEventHandler A6RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event A6RowChangeEventHandler A6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddA6Row(A6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public A6Row AddA6Row(
                        long Id, 
                        string BFY, 
                        string RPIO, 
                        string Fund, 
                        string FundName, 
                        string NPM, 
                        string NpmName, 
                        string AH, 
                        string AhName, 
                        string AHRC, 
                        string AhrcName, 
                        string Org, 
                        string OrgName, 
                        string PrcOrgCode, 
                        string PrcOrgName, 
                        string Code, 
                        string PrgramProjectCode, 
                        string ProgramProjectName, 
                        string RpioActivityCode, 
                        string ProgramArea, 
                        string ProgramAreaName, 
                        string BOC, 
                        string BocName, 
                        string FOC, 
                        string FocName) {
                A6Row rowA6Row = ((A6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        BFY,
                        RPIO,
                        Fund,
                        FundName,
                        NPM,
                        NpmName,
                        AH,
                        AhName,
                        AHRC,
                        AhrcName,
                        Org,
                        OrgName,
                        PrcOrgCode,
                        PrcOrgName,
                        Code,
                        PrgramProjectCode,
                        ProgramProjectName,
                        RpioActivityCode,
                        ProgramArea,
                        ProgramAreaName,
                        BOC,
                        BocName,
                        FOC,
                        FocName};
                rowA6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowA6Row);
                return rowA6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public A6Row FindById(long Id) {
                return ((A6Row)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                A6DataTable cln = ((A6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new A6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnBFY = base.Columns["BFY"];
                this.columnRPIO = base.Columns["RPIO"];
                this.columnFund = base.Columns["Fund"];
                this.columnFundName = base.Columns["FundName"];
                this.columnNPM = base.Columns["NPM"];
                this.columnNpmName = base.Columns["NpmName"];
                this.columnAH = base.Columns["AH"];
                this.columnAhName = base.Columns["AhName"];
                this.columnAHRC = base.Columns["AHRC"];
                this.columnAhrcName = base.Columns["AhrcName"];
                this.columnOrg = base.Columns["Org"];
                this.columnOrgName = base.Columns["OrgName"];
                this.columnPrcOrgCode = base.Columns["PrcOrgCode"];
                this.columnPrcOrgName = base.Columns["PrcOrgName"];
                this.columnCode = base.Columns["Code"];
                this.columnPrgramProjectCode = base.Columns["PrgramProjectCode"];
                this.columnProgramProjectName = base.Columns["ProgramProjectName"];
                this.columnRpioActivityCode = base.Columns["RpioActivityCode"];
                this.columnProgramArea = base.Columns["ProgramArea"];
                this.columnProgramAreaName = base.Columns["ProgramAreaName"];
                this.columnBOC = base.Columns["BOC"];
                this.columnBocName = base.Columns["BocName"];
                this.columnFOC = base.Columns["FOC"];
                this.columnFocName = base.Columns["FocName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnBFY = new global::System.Data.DataColumn("BFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFY);
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnFundName = new global::System.Data.DataColumn("FundName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFundName);
                this.columnNPM = new global::System.Data.DataColumn("NPM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPM);
                this.columnNpmName = new global::System.Data.DataColumn("NpmName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNpmName);
                this.columnAH = new global::System.Data.DataColumn("AH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAH);
                this.columnAhName = new global::System.Data.DataColumn("AhName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAhName);
                this.columnAHRC = new global::System.Data.DataColumn("AHRC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAHRC);
                this.columnAhrcName = new global::System.Data.DataColumn("AhrcName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAhrcName);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnOrgName = new global::System.Data.DataColumn("OrgName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgName);
                this.columnPrcOrgCode = new global::System.Data.DataColumn("PrcOrgCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrcOrgCode);
                this.columnPrcOrgName = new global::System.Data.DataColumn("PrcOrgName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrcOrgName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnPrgramProjectCode = new global::System.Data.DataColumn("PrgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrgramProjectCode);
                this.columnProgramProjectName = new global::System.Data.DataColumn("ProgramProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectName);
                this.columnRpioActivityCode = new global::System.Data.DataColumn("RpioActivityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRpioActivityCode);
                this.columnProgramArea = new global::System.Data.DataColumn("ProgramArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramArea);
                this.columnProgramAreaName = new global::System.Data.DataColumn("ProgramAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramAreaName);
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnBocName = new global::System.Data.DataColumn("BocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBocName);
                this.columnFOC = new global::System.Data.DataColumn("FOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOC);
                this.columnFocName = new global::System.Data.DataColumn("FocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFocName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public A6Row NewA6Row() {
                return ((A6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new A6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(A6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.A6RowChanged != null)) {
                    this.A6RowChanged(this, new A6RowChangeEvent(((A6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.A6RowChanging != null)) {
                    this.A6RowChanging(this, new A6RowChangeEvent(((A6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.A6RowDeleted != null)) {
                    this.A6RowDeleted(this, new A6RowChangeEvent(((A6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.A6RowDeleting != null)) {
                    this.A6RowDeleting(this, new A6RowChangeEvent(((A6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveA6Row(A6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "A6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class B6DataTable : global::System.Data.TypedTableBase<B6Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnControlNumber;
            
            private global::System.Data.DataColumn columnDivsionName;
            
            private global::System.Data.DataColumn columnFiscalYear;
            
            private global::System.Data.DataColumn columnDivisionId;
            
            private global::System.Data.DataColumn columnAwards;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnOverTime;
            
            private global::System.Data.DataColumn columnTimeOffAwards;
            
            private global::System.Data.DataColumn columnTraining;
            
            private global::System.Data.DataColumn columnPurpose;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public B6DataTable() {
                this.TableName = "B6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal B6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected B6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ControlNumberColumn {
                get {
                    return this.columnControlNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DivsionNameColumn {
                get {
                    return this.columnDivsionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FiscalYearColumn {
                get {
                    return this.columnFiscalYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DivisionIdColumn {
                get {
                    return this.columnDivisionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AwardsColumn {
                get {
                    return this.columnAwards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OverTimeColumn {
                get {
                    return this.columnOverTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TimeOffAwardsColumn {
                get {
                    return this.columnTimeOffAwards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TrainingColumn {
                get {
                    return this.columnTraining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public B6Row this[int index] {
                get {
                    return ((B6Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event B6RowChangeEventHandler B6RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event B6RowChangeEventHandler B6RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event B6RowChangeEventHandler B6RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event B6RowChangeEventHandler B6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddB6Row(B6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public B6Row AddB6Row(long Id, string ControlNumber, string DivsionName, string FiscalYear, string DivisionId, decimal Awards, string Org, decimal OverTime, double TimeOffAwards, string Training, string Purpose) {
                B6Row rowB6Row = ((B6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        ControlNumber,
                        DivsionName,
                        FiscalYear,
                        DivisionId,
                        Awards,
                        Org,
                        OverTime,
                        TimeOffAwards,
                        Training,
                        Purpose};
                rowB6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowB6Row);
                return rowB6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public B6Row FindById(long Id) {
                return ((B6Row)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                B6DataTable cln = ((B6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new B6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnControlNumber = base.Columns["ControlNumber"];
                this.columnDivsionName = base.Columns["DivsionName"];
                this.columnFiscalYear = base.Columns["FiscalYear"];
                this.columnDivisionId = base.Columns["DivisionId"];
                this.columnAwards = base.Columns["Awards"];
                this.columnOrg = base.Columns["Org"];
                this.columnOverTime = base.Columns["OverTime"];
                this.columnTimeOffAwards = base.Columns["TimeOffAwards"];
                this.columnTraining = base.Columns["Training"];
                this.columnPurpose = base.Columns["Purpose"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnControlNumber = new global::System.Data.DataColumn("ControlNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControlNumber);
                this.columnDivsionName = new global::System.Data.DataColumn("DivsionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivsionName);
                this.columnFiscalYear = new global::System.Data.DataColumn("FiscalYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYear);
                this.columnDivisionId = new global::System.Data.DataColumn("DivisionId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisionId);
                this.columnAwards = new global::System.Data.DataColumn("Awards", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAwards);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnOverTime = new global::System.Data.DataColumn("OverTime", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTime);
                this.columnTimeOffAwards = new global::System.Data.DataColumn("TimeOffAwards", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOffAwards);
                this.columnTraining = new global::System.Data.DataColumn("Training", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTraining);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public B6Row NewB6Row() {
                return ((B6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new B6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(B6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.B6RowChanged != null)) {
                    this.B6RowChanged(this, new B6RowChangeEvent(((B6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.B6RowChanging != null)) {
                    this.B6RowChanging(this, new B6RowChangeEvent(((B6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.B6RowDeleted != null)) {
                    this.B6RowDeleted(this, new B6RowChangeEvent(((B6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.B6RowDeleting != null)) {
                    this.B6RowDeleting(this, new B6RowChangeEvent(((B6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveB6Row(B6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "B6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class E1DataTable : global::System.Data.TypedTableBase<E1Row> {
            
            private global::System.Data.DataColumn columnEmployId;
            
            private global::System.Data.DataColumn columnHrOrgCode;
            
            private global::System.Data.DataColumn columnHrOrgCodeName;
            
            private global::System.Data.DataColumn columnWorkCode;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnLeaveType;
            
            private global::System.Data.DataColumn columnHoursCurrent;
            
            private global::System.Data.DataColumn columnHoursTotal;
            
            private global::System.Data.DataColumn columnHoursProjected;
            
            private global::System.Data.DataColumn columnHoursUseLose;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public E1DataTable() {
                this.TableName = "E1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal E1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected E1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmployIdColumn {
                get {
                    return this.columnEmployId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HrOrgCodeColumn {
                get {
                    return this.columnHrOrgCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HrOrgCodeNameColumn {
                get {
                    return this.columnHrOrgCodeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WorkCodeColumn {
                get {
                    return this.columnWorkCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LeaveTypeColumn {
                get {
                    return this.columnLeaveType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HoursCurrentColumn {
                get {
                    return this.columnHoursCurrent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HoursTotalColumn {
                get {
                    return this.columnHoursTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HoursProjectedColumn {
                get {
                    return this.columnHoursProjected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HoursUseLoseColumn {
                get {
                    return this.columnHoursUseLose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public E1Row this[int index] {
                get {
                    return ((E1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event E1RowChangeEventHandler E1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event E1RowChangeEventHandler E1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event E1RowChangeEventHandler E1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event E1RowChangeEventHandler E1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddE1Row(E1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public E1Row AddE1Row(string EmployId, string HrOrgCode, string HrOrgCodeName, string WorkCode, string FirstName, string LastName, string LeaveType, double HoursCurrent, double HoursTotal, double HoursProjected, double HoursUseLose) {
                E1Row rowE1Row = ((E1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployId,
                        HrOrgCode,
                        HrOrgCodeName,
                        WorkCode,
                        FirstName,
                        LastName,
                        LeaveType,
                        HoursCurrent,
                        HoursTotal,
                        HoursProjected,
                        HoursUseLose};
                rowE1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowE1Row);
                return rowE1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                E1DataTable cln = ((E1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new E1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnEmployId = base.Columns["EmployId"];
                this.columnHrOrgCode = base.Columns["HrOrgCode"];
                this.columnHrOrgCodeName = base.Columns["HrOrgCodeName"];
                this.columnWorkCode = base.Columns["WorkCode"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnLeaveType = base.Columns["LeaveType"];
                this.columnHoursCurrent = base.Columns["HoursCurrent"];
                this.columnHoursTotal = base.Columns["HoursTotal"];
                this.columnHoursProjected = base.Columns["HoursProjected"];
                this.columnHoursUseLose = base.Columns["HoursUseLose"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnEmployId = new global::System.Data.DataColumn("EmployId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployId);
                this.columnHrOrgCode = new global::System.Data.DataColumn("HrOrgCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrOrgCode);
                this.columnHrOrgCodeName = new global::System.Data.DataColumn("HrOrgCodeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrOrgCodeName);
                this.columnWorkCode = new global::System.Data.DataColumn("WorkCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkCode);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnLeaveType = new global::System.Data.DataColumn("LeaveType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaveType);
                this.columnHoursCurrent = new global::System.Data.DataColumn("HoursCurrent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursCurrent);
                this.columnHoursTotal = new global::System.Data.DataColumn("HoursTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursTotal);
                this.columnHoursProjected = new global::System.Data.DataColumn("HoursProjected", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursProjected);
                this.columnHoursUseLose = new global::System.Data.DataColumn("HoursUseLose", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursUseLose);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public E1Row NewE1Row() {
                return ((E1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new E1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(E1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.E1RowChanged != null)) {
                    this.E1RowChanged(this, new E1RowChangeEvent(((E1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.E1RowChanging != null)) {
                    this.E1RowChanging(this, new E1RowChangeEvent(((E1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.E1RowDeleted != null)) {
                    this.E1RowDeleted(this, new E1RowChangeEvent(((E1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.E1RowDeleting != null)) {
                    this.E1RowDeleting(this, new E1RowChangeEvent(((E1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveE1Row(E1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "E1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class F6DataTable : global::System.Data.TypedTableBase<F6Row> {
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnBocName;
            
            private global::System.Data.DataColumn columnFOC;
            
            private global::System.Data.DataColumn columnFocName;
            
            private global::System.Data.DataColumn columnId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public F6DataTable() {
                this.TableName = "F6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal F6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected F6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BocNameColumn {
                get {
                    return this.columnBocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FOCColumn {
                get {
                    return this.columnFOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FocNameColumn {
                get {
                    return this.columnFocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public F6Row this[int index] {
                get {
                    return ((F6Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event F6RowChangeEventHandler F6RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event F6RowChangeEventHandler F6RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event F6RowChangeEventHandler F6RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event F6RowChangeEventHandler F6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddF6Row(F6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public F6Row AddF6Row(string BOC, string BocName, string FOC, string FocName, long Id) {
                F6Row rowF6Row = ((F6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOC,
                        BocName,
                        FOC,
                        FocName,
                        Id};
                rowF6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowF6Row);
                return rowF6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public F6Row FindById(long Id) {
                return ((F6Row)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                F6DataTable cln = ((F6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new F6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnBOC = base.Columns["BOC"];
                this.columnBocName = base.Columns["BocName"];
                this.columnFOC = base.Columns["FOC"];
                this.columnFocName = base.Columns["FocName"];
                this.columnId = base.Columns["Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnBocName = new global::System.Data.DataColumn("BocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBocName);
                this.columnFOC = new global::System.Data.DataColumn("FOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOC);
                this.columnFocName = new global::System.Data.DataColumn("FocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFocName);
                this.columnId = new global::System.Data.DataColumn("Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public F6Row NewF6Row() {
                return ((F6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new F6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(F6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.F6RowChanged != null)) {
                    this.F6RowChanged(this, new F6RowChangeEvent(((F6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.F6RowChanging != null)) {
                    this.F6RowChanging(this, new F6RowChangeEvent(((F6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.F6RowDeleted != null)) {
                    this.F6RowDeleted(this, new F6RowChangeEvent(((F6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.F6RowDeleting != null)) {
                    this.F6RowDeleting(this, new F6RowChangeEvent(((F6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveF6Row(F6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "F6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class O6DataTable : global::System.Data.TypedTableBase<O6Row> {
            
            private global::System.Data.DataColumn columnBudgetLevel;
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnBFY;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnNPM;
            
            private global::System.Data.DataColumn columnNpmName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnProgramProjectCode;
            
            private global::System.Data.DataColumn columnProgramProjectName;
            
            private global::System.Data.DataColumn columnProgramArea;
            
            private global::System.Data.DataColumn columnProgramAreaName;
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnAuthority;
            
            private global::System.Data.DataColumn columnCarryOver;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnOpenCommitment;
            
            private global::System.Data.DataColumn columnObligation;
            
            private global::System.Data.DataColumn columnAvailable;
            
            private global::System.Data.DataColumn columnULO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O6DataTable() {
                this.TableName = "O6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal O6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected O6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BudgetLevelColumn {
                get {
                    return this.columnBudgetLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BFYColumn {
                get {
                    return this.columnBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NPMColumn {
                get {
                    return this.columnNPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NpmNameColumn {
                get {
                    return this.columnNpmName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectCodeColumn {
                get {
                    return this.columnProgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectNameColumn {
                get {
                    return this.columnProgramProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaColumn {
                get {
                    return this.columnProgramArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaNameColumn {
                get {
                    return this.columnProgramAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AuthorityColumn {
                get {
                    return this.columnAuthority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CarryOverColumn {
                get {
                    return this.columnCarryOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OpenCommitmentColumn {
                get {
                    return this.columnOpenCommitment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObligationColumn {
                get {
                    return this.columnObligation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AvailableColumn {
                get {
                    return this.columnAvailable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ULOColumn {
                get {
                    return this.columnULO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O6Row this[int index] {
                get {
                    return ((O6Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O6RowChangeEventHandler O6RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O6RowChangeEventHandler O6RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O6RowChangeEventHandler O6RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O6RowChangeEventHandler O6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddO6Row(O6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O6Row AddO6Row(
                        string BudgetLevel, 
                        string RPIO, 
                        string BFY, 
                        string Fund, 
                        string Org, 
                        string RC, 
                        string NPM, 
                        string NpmName, 
                        string Code, 
                        string ProgramProjectCode, 
                        string ProgramProjectName, 
                        string ProgramArea, 
                        string ProgramAreaName, 
                        string BOC, 
                        decimal Authority, 
                        decimal CarryOver, 
                        decimal Amount, 
                        decimal OpenCommitment, 
                        decimal Obligation, 
                        decimal Available, 
                        decimal ULO) {
                O6Row rowO6Row = ((O6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BudgetLevel,
                        RPIO,
                        BFY,
                        Fund,
                        Org,
                        RC,
                        NPM,
                        NpmName,
                        Code,
                        ProgramProjectCode,
                        ProgramProjectName,
                        ProgramArea,
                        ProgramAreaName,
                        BOC,
                        Authority,
                        CarryOver,
                        Amount,
                        OpenCommitment,
                        Obligation,
                        Available,
                        ULO};
                rowO6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowO6Row);
                return rowO6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                O6DataTable cln = ((O6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new O6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnBudgetLevel = base.Columns["BudgetLevel"];
                this.columnRPIO = base.Columns["RPIO"];
                this.columnBFY = base.Columns["BFY"];
                this.columnFund = base.Columns["Fund"];
                this.columnOrg = base.Columns["Org"];
                this.columnRC = base.Columns["RC"];
                this.columnNPM = base.Columns["NPM"];
                this.columnNpmName = base.Columns["NpmName"];
                this.columnCode = base.Columns["Code"];
                this.columnProgramProjectCode = base.Columns["ProgramProjectCode"];
                this.columnProgramProjectName = base.Columns["ProgramProjectName"];
                this.columnProgramArea = base.Columns["ProgramArea"];
                this.columnProgramAreaName = base.Columns["ProgramAreaName"];
                this.columnBOC = base.Columns["BOC"];
                this.columnAuthority = base.Columns["Authority"];
                this.columnCarryOver = base.Columns["CarryOver"];
                this.columnAmount = base.Columns["Amount"];
                this.columnOpenCommitment = base.Columns["OpenCommitment"];
                this.columnObligation = base.Columns["Obligation"];
                this.columnAvailable = base.Columns["Available"];
                this.columnULO = base.Columns["ULO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnBudgetLevel = new global::System.Data.DataColumn("BudgetLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetLevel);
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnBFY = new global::System.Data.DataColumn("BFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFY);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnNPM = new global::System.Data.DataColumn("NPM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPM);
                this.columnNpmName = new global::System.Data.DataColumn("NpmName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNpmName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnProgramProjectCode = new global::System.Data.DataColumn("ProgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectCode);
                this.columnProgramProjectName = new global::System.Data.DataColumn("ProgramProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectName);
                this.columnProgramArea = new global::System.Data.DataColumn("ProgramArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramArea);
                this.columnProgramAreaName = new global::System.Data.DataColumn("ProgramAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramAreaName);
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnAuthority = new global::System.Data.DataColumn("Authority", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthority);
                this.columnCarryOver = new global::System.Data.DataColumn("CarryOver", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarryOver);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnOpenCommitment = new global::System.Data.DataColumn("OpenCommitment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpenCommitment);
                this.columnObligation = new global::System.Data.DataColumn("Obligation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObligation);
                this.columnAvailable = new global::System.Data.DataColumn("Available", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvailable);
                this.columnULO = new global::System.Data.DataColumn("ULO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnULO);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O6Row NewO6Row() {
                return ((O6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new O6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(O6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.O6RowChanged != null)) {
                    this.O6RowChanged(this, new O6RowChangeEvent(((O6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.O6RowChanging != null)) {
                    this.O6RowChanging(this, new O6RowChangeEvent(((O6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.O6RowDeleted != null)) {
                    this.O6RowDeleted(this, new O6RowChangeEvent(((O6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.O6RowDeleting != null)) {
                    this.O6RowDeleting(this, new O6RowChangeEvent(((O6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveO6Row(O6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "O6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class O7DataTable : global::System.Data.TypedTableBase<O7Row> {
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnNpmCode;
            
            private global::System.Data.DataColumn columnBFY;
            
            private global::System.Data.DataColumn columnSystem;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnDivision;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnSubProject;
            
            private global::System.Data.DataColumn columnProgramProjectCode;
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnFOC;
            
            private global::System.Data.DataColumn columnFocName;
            
            private global::System.Data.DataColumn columnPurchaseRequest;
            
            private global::System.Data.DataColumn columnDocPrefix;
            
            private global::System.Data.DataColumn columnDocType;
            
            private global::System.Data.DataColumn columnDCN;
            
            private global::System.Data.DataColumn columnSiteProjectCode;
            
            private global::System.Data.DataColumn columnSiteProjectName;
            
            private global::System.Data.DataColumn columnGrantNumber;
            
            private global::System.Data.DataColumn columnCommitment;
            
            private global::System.Data.DataColumn columnObligation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O7DataTable() {
                this.TableName = "O7";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal O7DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected O7DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NpmCodeColumn {
                get {
                    return this.columnNpmCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BFYColumn {
                get {
                    return this.columnBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SystemColumn {
                get {
                    return this.columnSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DivisionColumn {
                get {
                    return this.columnDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubProjectColumn {
                get {
                    return this.columnSubProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectCodeColumn {
                get {
                    return this.columnProgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FOCColumn {
                get {
                    return this.columnFOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FocNameColumn {
                get {
                    return this.columnFocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PurchaseRequestColumn {
                get {
                    return this.columnPurchaseRequest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DocPrefixColumn {
                get {
                    return this.columnDocPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DocTypeColumn {
                get {
                    return this.columnDocType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DCNColumn {
                get {
                    return this.columnDCN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SiteProjectCodeColumn {
                get {
                    return this.columnSiteProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SiteProjectNameColumn {
                get {
                    return this.columnSiteProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GrantNumberColumn {
                get {
                    return this.columnGrantNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CommitmentColumn {
                get {
                    return this.columnCommitment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObligationColumn {
                get {
                    return this.columnObligation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O7Row this[int index] {
                get {
                    return ((O7Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O7RowChangeEventHandler O7RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O7RowChangeEventHandler O7RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O7RowChangeEventHandler O7RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O7RowChangeEventHandler O7RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddO7Row(O7Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O7Row AddO7Row(
                        string RPIO, 
                        string Fund, 
                        string NpmCode, 
                        string BFY, 
                        string System, 
                        string RC, 
                        string Division, 
                        string Code, 
                        string SubProject, 
                        string ProgramProjectCode, 
                        string BOC, 
                        string FOC, 
                        string FocName, 
                        string PurchaseRequest, 
                        string DocPrefix, 
                        string DocType, 
                        string DCN, 
                        string SiteProjectCode, 
                        string SiteProjectName, 
                        string GrantNumber, 
                        decimal Commitment, 
                        decimal Obligation) {
                O7Row rowO7Row = ((O7Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RPIO,
                        Fund,
                        NpmCode,
                        BFY,
                        System,
                        RC,
                        Division,
                        Code,
                        SubProject,
                        ProgramProjectCode,
                        BOC,
                        FOC,
                        FocName,
                        PurchaseRequest,
                        DocPrefix,
                        DocType,
                        DCN,
                        SiteProjectCode,
                        SiteProjectName,
                        GrantNumber,
                        Commitment,
                        Obligation};
                rowO7Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowO7Row);
                return rowO7Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                O7DataTable cln = ((O7DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new O7DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRPIO = base.Columns["RPIO"];
                this.columnFund = base.Columns["Fund"];
                this.columnNpmCode = base.Columns["NpmCode"];
                this.columnBFY = base.Columns["BFY"];
                this.columnSystem = base.Columns["System"];
                this.columnRC = base.Columns["RC"];
                this.columnDivision = base.Columns["Division"];
                this.columnCode = base.Columns["Code"];
                this.columnSubProject = base.Columns["SubProject"];
                this.columnProgramProjectCode = base.Columns["ProgramProjectCode"];
                this.columnBOC = base.Columns["BOC"];
                this.columnFOC = base.Columns["FOC"];
                this.columnFocName = base.Columns["FocName"];
                this.columnPurchaseRequest = base.Columns["PurchaseRequest"];
                this.columnDocPrefix = base.Columns["DocPrefix"];
                this.columnDocType = base.Columns["DocType"];
                this.columnDCN = base.Columns["DCN"];
                this.columnSiteProjectCode = base.Columns["SiteProjectCode"];
                this.columnSiteProjectName = base.Columns["SiteProjectName"];
                this.columnGrantNumber = base.Columns["GrantNumber"];
                this.columnCommitment = base.Columns["Commitment"];
                this.columnObligation = base.Columns["Obligation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnNpmCode = new global::System.Data.DataColumn("NpmCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNpmCode);
                this.columnBFY = new global::System.Data.DataColumn("BFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFY);
                this.columnSystem = new global::System.Data.DataColumn("System", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystem);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnDivision = new global::System.Data.DataColumn("Division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivision);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnSubProject = new global::System.Data.DataColumn("SubProject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubProject);
                this.columnProgramProjectCode = new global::System.Data.DataColumn("ProgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectCode);
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnFOC = new global::System.Data.DataColumn("FOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOC);
                this.columnFocName = new global::System.Data.DataColumn("FocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFocName);
                this.columnPurchaseRequest = new global::System.Data.DataColumn("PurchaseRequest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseRequest);
                this.columnDocPrefix = new global::System.Data.DataColumn("DocPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocPrefix);
                this.columnDocType = new global::System.Data.DataColumn("DocType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocType);
                this.columnDCN = new global::System.Data.DataColumn("DCN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCN);
                this.columnSiteProjectCode = new global::System.Data.DataColumn("SiteProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteProjectCode);
                this.columnSiteProjectName = new global::System.Data.DataColumn("SiteProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteProjectName);
                this.columnGrantNumber = new global::System.Data.DataColumn("GrantNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrantNumber);
                this.columnCommitment = new global::System.Data.DataColumn("Commitment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommitment);
                this.columnObligation = new global::System.Data.DataColumn("Obligation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObligation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O7Row NewO7Row() {
                return ((O7Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new O7Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(O7Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.O7RowChanged != null)) {
                    this.O7RowChanged(this, new O7RowChangeEvent(((O7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.O7RowChanging != null)) {
                    this.O7RowChanging(this, new O7RowChangeEvent(((O7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.O7RowDeleted != null)) {
                    this.O7RowDeleted(this, new O7RowChangeEvent(((O7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.O7RowDeleting != null)) {
                    this.O7RowDeleting(this, new O7RowChangeEvent(((O7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveO7Row(O7Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "O7DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class O8DataTable : global::System.Data.TypedTableBase<O8Row> {
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnBFY;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnProgramProjectCode;
            
            private global::System.Data.DataColumn columnProgramProjectName;
            
            private global::System.Data.DataColumn columnHrOrgCode;
            
            private global::System.Data.DataColumn columnWorkCode;
            
            private global::System.Data.DataColumn columnWorkCodeName;
            
            private global::System.Data.DataColumn columnCurrentPay;
            
            private global::System.Data.DataColumn columnCurrentHours;
            
            private global::System.Data.DataColumn columnTotalPay;
            
            private global::System.Data.DataColumn columnTotalHours;
            
            private global::System.Data.DataColumn columnTotalBenefits;
            
            private global::System.Data.DataColumn columnTotalOvertimePay;
            
            private global::System.Data.DataColumn columnTotalOvertimeHours;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O8DataTable() {
                this.TableName = "O8";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal O8DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected O8DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BFYColumn {
                get {
                    return this.columnBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectCodeColumn {
                get {
                    return this.columnProgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectNameColumn {
                get {
                    return this.columnProgramProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HrOrgCodeColumn {
                get {
                    return this.columnHrOrgCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WorkCodeColumn {
                get {
                    return this.columnWorkCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WorkCodeNameColumn {
                get {
                    return this.columnWorkCodeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CurrentPayColumn {
                get {
                    return this.columnCurrentPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CurrentHoursColumn {
                get {
                    return this.columnCurrentHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalPayColumn {
                get {
                    return this.columnTotalPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalHoursColumn {
                get {
                    return this.columnTotalHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalBenefitsColumn {
                get {
                    return this.columnTotalBenefits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalOvertimePayColumn {
                get {
                    return this.columnTotalOvertimePay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalOvertimeHoursColumn {
                get {
                    return this.columnTotalOvertimeHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O8Row this[int index] {
                get {
                    return ((O8Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O8RowChangeEventHandler O8RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O8RowChangeEventHandler O8RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O8RowChangeEventHandler O8RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event O8RowChangeEventHandler O8RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddO8Row(O8Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O8Row AddO8Row(
                        string RPIO, 
                        string BFY, 
                        string Fund, 
                        string Org, 
                        string RC, 
                        string Code, 
                        string ProgramProjectCode, 
                        string ProgramProjectName, 
                        string HrOrgCode, 
                        string WorkCode, 
                        string WorkCodeName, 
                        decimal CurrentPay, 
                        double CurrentHours, 
                        decimal TotalPay, 
                        double TotalHours, 
                        decimal TotalBenefits, 
                        double TotalOvertimePay, 
                        double TotalOvertimeHours) {
                O8Row rowO8Row = ((O8Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RPIO,
                        BFY,
                        Fund,
                        Org,
                        RC,
                        Code,
                        ProgramProjectCode,
                        ProgramProjectName,
                        HrOrgCode,
                        WorkCode,
                        WorkCodeName,
                        CurrentPay,
                        CurrentHours,
                        TotalPay,
                        TotalHours,
                        TotalBenefits,
                        TotalOvertimePay,
                        TotalOvertimeHours};
                rowO8Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowO8Row);
                return rowO8Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                O8DataTable cln = ((O8DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new O8DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRPIO = base.Columns["RPIO"];
                this.columnBFY = base.Columns["BFY"];
                this.columnFund = base.Columns["Fund"];
                this.columnOrg = base.Columns["Org"];
                this.columnRC = base.Columns["RC"];
                this.columnCode = base.Columns["Code"];
                this.columnProgramProjectCode = base.Columns["ProgramProjectCode"];
                this.columnProgramProjectName = base.Columns["ProgramProjectName"];
                this.columnHrOrgCode = base.Columns["HrOrgCode"];
                this.columnWorkCode = base.Columns["WorkCode"];
                this.columnWorkCodeName = base.Columns["WorkCodeName"];
                this.columnCurrentPay = base.Columns["CurrentPay"];
                this.columnCurrentHours = base.Columns["CurrentHours"];
                this.columnTotalPay = base.Columns["TotalPay"];
                this.columnTotalHours = base.Columns["TotalHours"];
                this.columnTotalBenefits = base.Columns["TotalBenefits"];
                this.columnTotalOvertimePay = base.Columns["TotalOvertimePay"];
                this.columnTotalOvertimeHours = base.Columns["TotalOvertimeHours"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnBFY = new global::System.Data.DataColumn("BFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFY);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnProgramProjectCode = new global::System.Data.DataColumn("ProgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectCode);
                this.columnProgramProjectName = new global::System.Data.DataColumn("ProgramProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectName);
                this.columnHrOrgCode = new global::System.Data.DataColumn("HrOrgCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrOrgCode);
                this.columnWorkCode = new global::System.Data.DataColumn("WorkCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkCode);
                this.columnWorkCodeName = new global::System.Data.DataColumn("WorkCodeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkCodeName);
                this.columnCurrentPay = new global::System.Data.DataColumn("CurrentPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentPay);
                this.columnCurrentHours = new global::System.Data.DataColumn("CurrentHours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentHours);
                this.columnTotalPay = new global::System.Data.DataColumn("TotalPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPay);
                this.columnTotalHours = new global::System.Data.DataColumn("TotalHours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHours);
                this.columnTotalBenefits = new global::System.Data.DataColumn("TotalBenefits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBenefits);
                this.columnTotalOvertimePay = new global::System.Data.DataColumn("TotalOvertimePay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalOvertimePay);
                this.columnTotalOvertimeHours = new global::System.Data.DataColumn("TotalOvertimeHours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalOvertimeHours);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O8Row NewO8Row() {
                return ((O8Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new O8Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(O8Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.O8RowChanged != null)) {
                    this.O8RowChanged(this, new O8RowChangeEvent(((O8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.O8RowChanging != null)) {
                    this.O8RowChanging(this, new O8RowChangeEvent(((O8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.O8RowDeleted != null)) {
                    this.O8RowDeleted(this, new O8RowChangeEvent(((O8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.O8RowDeleting != null)) {
                    this.O8RowDeleting(this, new O8RowChangeEvent(((O8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveO8Row(O8Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "O8DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class P6DataTable : global::System.Data.TypedTableBase<P6Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnBudgetLevel;
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnBFY;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnFundName;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnBocName;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnDivisionName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnSubProject;
            
            private global::System.Data.DataColumn columnNPM;
            
            private global::System.Data.DataColumn columnNpmCode;
            
            private global::System.Data.DataColumn columnProgramProjectName;
            
            private global::System.Data.DataColumn columnProgramProjectCode;
            
            private global::System.Data.DataColumn columnProgramArea;
            
            private global::System.Data.DataColumn columnProgramAreaName;
            
            private global::System.Data.DataColumn columnGoal;
            
            private global::System.Data.DataColumn columnGoalName;
            
            private global::System.Data.DataColumn columnObjective;
            
            private global::System.Data.DataColumn columnObjectiveName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P6DataTable() {
                this.TableName = "P6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal P6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected P6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BudgetLevelColumn {
                get {
                    return this.columnBudgetLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BFYColumn {
                get {
                    return this.columnBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundNameColumn {
                get {
                    return this.columnFundName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BocNameColumn {
                get {
                    return this.columnBocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DivisionNameColumn {
                get {
                    return this.columnDivisionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubProjectColumn {
                get {
                    return this.columnSubProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NPMColumn {
                get {
                    return this.columnNPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NpmCodeColumn {
                get {
                    return this.columnNpmCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectNameColumn {
                get {
                    return this.columnProgramProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectCodeColumn {
                get {
                    return this.columnProgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaColumn {
                get {
                    return this.columnProgramArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaNameColumn {
                get {
                    return this.columnProgramAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GoalColumn {
                get {
                    return this.columnGoal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GoalNameColumn {
                get {
                    return this.columnGoalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObjectiveColumn {
                get {
                    return this.columnObjective;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObjectiveNameColumn {
                get {
                    return this.columnObjectiveName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P6Row this[int index] {
                get {
                    return ((P6Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P6RowChangeEventHandler P6RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P6RowChangeEventHandler P6RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P6RowChangeEventHandler P6RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P6RowChangeEventHandler P6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddP6Row(P6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P6Row AddP6Row(
                        long Id, 
                        string BudgetLevel, 
                        string RPIO, 
                        string BFY, 
                        string Fund, 
                        string FundName, 
                        string Org, 
                        string BOC, 
                        string BocName, 
                        string RC, 
                        string DivisionName, 
                        string Code, 
                        decimal Amount, 
                        string SubProject, 
                        string NPM, 
                        string NpmCode, 
                        string ProgramProjectName, 
                        string ProgramProjectCode, 
                        string ProgramArea, 
                        string ProgramAreaName, 
                        string Goal, 
                        string GoalName, 
                        string Objective, 
                        string ObjectiveName) {
                P6Row rowP6Row = ((P6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        BudgetLevel,
                        RPIO,
                        BFY,
                        Fund,
                        FundName,
                        Org,
                        BOC,
                        BocName,
                        RC,
                        DivisionName,
                        Code,
                        Amount,
                        SubProject,
                        NPM,
                        NpmCode,
                        ProgramProjectName,
                        ProgramProjectCode,
                        ProgramArea,
                        ProgramAreaName,
                        Goal,
                        GoalName,
                        Objective,
                        ObjectiveName};
                rowP6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowP6Row);
                return rowP6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P6Row FindById(long Id) {
                return ((P6Row)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                P6DataTable cln = ((P6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new P6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnBudgetLevel = base.Columns["BudgetLevel"];
                this.columnRPIO = base.Columns["RPIO"];
                this.columnBFY = base.Columns["BFY"];
                this.columnFund = base.Columns["Fund"];
                this.columnFundName = base.Columns["FundName"];
                this.columnOrg = base.Columns["Org"];
                this.columnBOC = base.Columns["BOC"];
                this.columnBocName = base.Columns["BocName"];
                this.columnRC = base.Columns["RC"];
                this.columnDivisionName = base.Columns["DivisionName"];
                this.columnCode = base.Columns["Code"];
                this.columnAmount = base.Columns["Amount"];
                this.columnSubProject = base.Columns["SubProject"];
                this.columnNPM = base.Columns["NPM"];
                this.columnNpmCode = base.Columns["NpmCode"];
                this.columnProgramProjectName = base.Columns["ProgramProjectName"];
                this.columnProgramProjectCode = base.Columns["ProgramProjectCode"];
                this.columnProgramArea = base.Columns["ProgramArea"];
                this.columnProgramAreaName = base.Columns["ProgramAreaName"];
                this.columnGoal = base.Columns["Goal"];
                this.columnGoalName = base.Columns["GoalName"];
                this.columnObjective = base.Columns["Objective"];
                this.columnObjectiveName = base.Columns["ObjectiveName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnBudgetLevel = new global::System.Data.DataColumn("BudgetLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetLevel);
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnBFY = new global::System.Data.DataColumn("BFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFY);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnFundName = new global::System.Data.DataColumn("FundName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFundName);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnBocName = new global::System.Data.DataColumn("BocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBocName);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnDivisionName = new global::System.Data.DataColumn("DivisionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisionName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnSubProject = new global::System.Data.DataColumn("SubProject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubProject);
                this.columnNPM = new global::System.Data.DataColumn("NPM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPM);
                this.columnNpmCode = new global::System.Data.DataColumn("NpmCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNpmCode);
                this.columnProgramProjectName = new global::System.Data.DataColumn("ProgramProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectName);
                this.columnProgramProjectCode = new global::System.Data.DataColumn("ProgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectCode);
                this.columnProgramArea = new global::System.Data.DataColumn("ProgramArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramArea);
                this.columnProgramAreaName = new global::System.Data.DataColumn("ProgramAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramAreaName);
                this.columnGoal = new global::System.Data.DataColumn("Goal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoal);
                this.columnGoalName = new global::System.Data.DataColumn("GoalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalName);
                this.columnObjective = new global::System.Data.DataColumn("Objective", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjective);
                this.columnObjectiveName = new global::System.Data.DataColumn("ObjectiveName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectiveName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnAmount.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P6Row NewP6Row() {
                return ((P6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new P6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(P6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.P6RowChanged != null)) {
                    this.P6RowChanged(this, new P6RowChangeEvent(((P6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.P6RowChanging != null)) {
                    this.P6RowChanging(this, new P6RowChangeEvent(((P6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.P6RowDeleted != null)) {
                    this.P6RowDeleted(this, new P6RowChangeEvent(((P6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.P6RowDeleting != null)) {
                    this.P6RowDeleting(this, new P6RowChangeEvent(((P6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveP6Row(P6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "P6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class P7DataTable : global::System.Data.TypedTableBase<P7Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnBudgetLevel;
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnBFY;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnFundName;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnBocName;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnDivisionName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnSubProject;
            
            private global::System.Data.DataColumn columnNPM;
            
            private global::System.Data.DataColumn columnNpmCode;
            
            private global::System.Data.DataColumn columnProgramProjectName;
            
            private global::System.Data.DataColumn columnProgramProjectCode;
            
            private global::System.Data.DataColumn columnProgramArea;
            
            private global::System.Data.DataColumn columnProgramAreaName;
            
            private global::System.Data.DataColumn columnGoal;
            
            private global::System.Data.DataColumn columnGoalName;
            
            private global::System.Data.DataColumn columnObjective;
            
            private global::System.Data.DataColumn columnObjectiveName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P7DataTable() {
                this.TableName = "P7";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal P7DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected P7DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BudgetLevelColumn {
                get {
                    return this.columnBudgetLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BFYColumn {
                get {
                    return this.columnBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundNameColumn {
                get {
                    return this.columnFundName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BocNameColumn {
                get {
                    return this.columnBocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DivisionNameColumn {
                get {
                    return this.columnDivisionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubProjectColumn {
                get {
                    return this.columnSubProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NPMColumn {
                get {
                    return this.columnNPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NpmCodeColumn {
                get {
                    return this.columnNpmCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectNameColumn {
                get {
                    return this.columnProgramProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectCodeColumn {
                get {
                    return this.columnProgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaColumn {
                get {
                    return this.columnProgramArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaNameColumn {
                get {
                    return this.columnProgramAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GoalColumn {
                get {
                    return this.columnGoal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GoalNameColumn {
                get {
                    return this.columnGoalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObjectiveColumn {
                get {
                    return this.columnObjective;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObjectiveNameColumn {
                get {
                    return this.columnObjectiveName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P7Row this[int index] {
                get {
                    return ((P7Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P7RowChangeEventHandler P7RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P7RowChangeEventHandler P7RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P7RowChangeEventHandler P7RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P7RowChangeEventHandler P7RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddP7Row(P7Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P7Row AddP7Row(
                        long Id, 
                        string BudgetLevel, 
                        string RPIO, 
                        string BFY, 
                        string Fund, 
                        string FundName, 
                        string Org, 
                        string BOC, 
                        string BocName, 
                        string RC, 
                        string DivisionName, 
                        string Code, 
                        decimal Amount, 
                        string SubProject, 
                        string NPM, 
                        string NpmCode, 
                        string ProgramProjectName, 
                        string ProgramProjectCode, 
                        string ProgramArea, 
                        string ProgramAreaName, 
                        string Goal, 
                        string GoalName, 
                        string Objective, 
                        string ObjectiveName) {
                P7Row rowP7Row = ((P7Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        BudgetLevel,
                        RPIO,
                        BFY,
                        Fund,
                        FundName,
                        Org,
                        BOC,
                        BocName,
                        RC,
                        DivisionName,
                        Code,
                        Amount,
                        SubProject,
                        NPM,
                        NpmCode,
                        ProgramProjectName,
                        ProgramProjectCode,
                        ProgramArea,
                        ProgramAreaName,
                        Goal,
                        GoalName,
                        Objective,
                        ObjectiveName};
                rowP7Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowP7Row);
                return rowP7Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                P7DataTable cln = ((P7DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new P7DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnBudgetLevel = base.Columns["BudgetLevel"];
                this.columnRPIO = base.Columns["RPIO"];
                this.columnBFY = base.Columns["BFY"];
                this.columnFund = base.Columns["Fund"];
                this.columnFundName = base.Columns["FundName"];
                this.columnOrg = base.Columns["Org"];
                this.columnBOC = base.Columns["BOC"];
                this.columnBocName = base.Columns["BocName"];
                this.columnRC = base.Columns["RC"];
                this.columnDivisionName = base.Columns["DivisionName"];
                this.columnCode = base.Columns["Code"];
                this.columnAmount = base.Columns["Amount"];
                this.columnSubProject = base.Columns["SubProject"];
                this.columnNPM = base.Columns["NPM"];
                this.columnNpmCode = base.Columns["NpmCode"];
                this.columnProgramProjectName = base.Columns["ProgramProjectName"];
                this.columnProgramProjectCode = base.Columns["ProgramProjectCode"];
                this.columnProgramArea = base.Columns["ProgramArea"];
                this.columnProgramAreaName = base.Columns["ProgramAreaName"];
                this.columnGoal = base.Columns["Goal"];
                this.columnGoalName = base.Columns["GoalName"];
                this.columnObjective = base.Columns["Objective"];
                this.columnObjectiveName = base.Columns["ObjectiveName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnBudgetLevel = new global::System.Data.DataColumn("BudgetLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetLevel);
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnBFY = new global::System.Data.DataColumn("BFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFY);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnFundName = new global::System.Data.DataColumn("FundName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFundName);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnBocName = new global::System.Data.DataColumn("BocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBocName);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnDivisionName = new global::System.Data.DataColumn("DivisionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisionName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnSubProject = new global::System.Data.DataColumn("SubProject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubProject);
                this.columnNPM = new global::System.Data.DataColumn("NPM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPM);
                this.columnNpmCode = new global::System.Data.DataColumn("NpmCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNpmCode);
                this.columnProgramProjectName = new global::System.Data.DataColumn("ProgramProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectName);
                this.columnProgramProjectCode = new global::System.Data.DataColumn("ProgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectCode);
                this.columnProgramArea = new global::System.Data.DataColumn("ProgramArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramArea);
                this.columnProgramAreaName = new global::System.Data.DataColumn("ProgramAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramAreaName);
                this.columnGoal = new global::System.Data.DataColumn("Goal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoal);
                this.columnGoalName = new global::System.Data.DataColumn("GoalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalName);
                this.columnObjective = new global::System.Data.DataColumn("Objective", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjective);
                this.columnObjectiveName = new global::System.Data.DataColumn("ObjectiveName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectiveName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, false));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnAmount.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P7Row NewP7Row() {
                return ((P7Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new P7Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(P7Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.P7RowChanged != null)) {
                    this.P7RowChanged(this, new P7RowChangeEvent(((P7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.P7RowChanging != null)) {
                    this.P7RowChanging(this, new P7RowChangeEvent(((P7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.P7RowDeleted != null)) {
                    this.P7RowDeleted(this, new P7RowChangeEvent(((P7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.P7RowDeleting != null)) {
                    this.P7RowDeleting(this, new P7RowChangeEvent(((P7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveP7Row(P7Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "P7DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class P8DataTable : global::System.Data.TypedTableBase<P8Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnBudgetLevel;
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnBFY;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnFundName;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnBocName;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnDivisionName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnSubProject;
            
            private global::System.Data.DataColumn columnNPM;
            
            private global::System.Data.DataColumn columnNpmCode;
            
            private global::System.Data.DataColumn columnProgramProjectName;
            
            private global::System.Data.DataColumn columnProgramProjectCode;
            
            private global::System.Data.DataColumn columnProgramArea;
            
            private global::System.Data.DataColumn columnProgramAreaName;
            
            private global::System.Data.DataColumn columnGoal;
            
            private global::System.Data.DataColumn columnGoalName;
            
            private global::System.Data.DataColumn columnObjective;
            
            private global::System.Data.DataColumn columnObjectiveName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P8DataTable() {
                this.TableName = "P8";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal P8DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected P8DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BudgetLevelColumn {
                get {
                    return this.columnBudgetLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BFYColumn {
                get {
                    return this.columnBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundNameColumn {
                get {
                    return this.columnFundName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BocNameColumn {
                get {
                    return this.columnBocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DivisionNameColumn {
                get {
                    return this.columnDivisionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubProjectColumn {
                get {
                    return this.columnSubProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NPMColumn {
                get {
                    return this.columnNPM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NpmCodeColumn {
                get {
                    return this.columnNpmCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectNameColumn {
                get {
                    return this.columnProgramProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectCodeColumn {
                get {
                    return this.columnProgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaColumn {
                get {
                    return this.columnProgramArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramAreaNameColumn {
                get {
                    return this.columnProgramAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GoalColumn {
                get {
                    return this.columnGoal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GoalNameColumn {
                get {
                    return this.columnGoalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObjectiveColumn {
                get {
                    return this.columnObjective;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObjectiveNameColumn {
                get {
                    return this.columnObjectiveName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P8Row this[int index] {
                get {
                    return ((P8Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P8RowChangeEventHandler P8RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P8RowChangeEventHandler P8RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P8RowChangeEventHandler P8RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event P8RowChangeEventHandler P8RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddP8Row(P8Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P8Row AddP8Row(
                        long Id, 
                        string BudgetLevel, 
                        string RPIO, 
                        string BFY, 
                        string Fund, 
                        string FundName, 
                        string Org, 
                        string BOC, 
                        string BocName, 
                        string RC, 
                        string DivisionName, 
                        string Code, 
                        decimal Amount, 
                        string SubProject, 
                        string NPM, 
                        string NpmCode, 
                        string ProgramProjectName, 
                        string ProgramProjectCode, 
                        string ProgramArea, 
                        string ProgramAreaName, 
                        string Goal, 
                        string GoalName, 
                        string Objective, 
                        string ObjectiveName) {
                P8Row rowP8Row = ((P8Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        BudgetLevel,
                        RPIO,
                        BFY,
                        Fund,
                        FundName,
                        Org,
                        BOC,
                        BocName,
                        RC,
                        DivisionName,
                        Code,
                        Amount,
                        SubProject,
                        NPM,
                        NpmCode,
                        ProgramProjectName,
                        ProgramProjectCode,
                        ProgramArea,
                        ProgramAreaName,
                        Goal,
                        GoalName,
                        Objective,
                        ObjectiveName};
                rowP8Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowP8Row);
                return rowP8Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                P8DataTable cln = ((P8DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new P8DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnBudgetLevel = base.Columns["BudgetLevel"];
                this.columnRPIO = base.Columns["RPIO"];
                this.columnBFY = base.Columns["BFY"];
                this.columnFund = base.Columns["Fund"];
                this.columnFundName = base.Columns["FundName"];
                this.columnOrg = base.Columns["Org"];
                this.columnBOC = base.Columns["BOC"];
                this.columnBocName = base.Columns["BocName"];
                this.columnRC = base.Columns["RC"];
                this.columnDivisionName = base.Columns["DivisionName"];
                this.columnCode = base.Columns["Code"];
                this.columnAmount = base.Columns["Amount"];
                this.columnSubProject = base.Columns["SubProject"];
                this.columnNPM = base.Columns["NPM"];
                this.columnNpmCode = base.Columns["NpmCode"];
                this.columnProgramProjectName = base.Columns["ProgramProjectName"];
                this.columnProgramProjectCode = base.Columns["ProgramProjectCode"];
                this.columnProgramArea = base.Columns["ProgramArea"];
                this.columnProgramAreaName = base.Columns["ProgramAreaName"];
                this.columnGoal = base.Columns["Goal"];
                this.columnGoalName = base.Columns["GoalName"];
                this.columnObjective = base.Columns["Objective"];
                this.columnObjectiveName = base.Columns["ObjectiveName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnBudgetLevel = new global::System.Data.DataColumn("BudgetLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetLevel);
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnBFY = new global::System.Data.DataColumn("BFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFY);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnFundName = new global::System.Data.DataColumn("FundName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFundName);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnBocName = new global::System.Data.DataColumn("BocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBocName);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnDivisionName = new global::System.Data.DataColumn("DivisionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivisionName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnSubProject = new global::System.Data.DataColumn("SubProject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubProject);
                this.columnNPM = new global::System.Data.DataColumn("NPM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNPM);
                this.columnNpmCode = new global::System.Data.DataColumn("NpmCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNpmCode);
                this.columnProgramProjectName = new global::System.Data.DataColumn("ProgramProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectName);
                this.columnProgramProjectCode = new global::System.Data.DataColumn("ProgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectCode);
                this.columnProgramArea = new global::System.Data.DataColumn("ProgramArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramArea);
                this.columnProgramAreaName = new global::System.Data.DataColumn("ProgramAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramAreaName);
                this.columnGoal = new global::System.Data.DataColumn("Goal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoal);
                this.columnGoalName = new global::System.Data.DataColumn("GoalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalName);
                this.columnObjective = new global::System.Data.DataColumn("Objective", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjective);
                this.columnObjectiveName = new global::System.Data.DataColumn("ObjectiveName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectiveName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, false));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnAmount.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P8Row NewP8Row() {
                return ((P8Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new P8Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(P8Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.P8RowChanged != null)) {
                    this.P8RowChanged(this, new P8RowChangeEvent(((P8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.P8RowChanging != null)) {
                    this.P8RowChanging(this, new P8RowChangeEvent(((P8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.P8RowDeleted != null)) {
                    this.P8RowDeleted(this, new P8RowChangeEvent(((P8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.P8RowDeleting != null)) {
                    this.P8RowDeleting(this, new P8RowChangeEvent(((P8Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveP8Row(P8Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "P8DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S6DataTable : global::System.Data.TypedTableBase<S6Row> {
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnSiteProjectCode;
            
            private global::System.Data.DataColumn columnSiteProjectName;
            
            private global::System.Data.DataColumn columnSiteId;
            
            private global::System.Data.DataColumn columnSiteName;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnCongressionalDistrict;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public S6DataTable() {
                this.TableName = "S6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal S6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected S6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SiteProjectCodeColumn {
                get {
                    return this.columnSiteProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SiteProjectNameColumn {
                get {
                    return this.columnSiteProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SiteNameColumn {
                get {
                    return this.columnSiteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CongressionalDistrictColumn {
                get {
                    return this.columnCongressionalDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public S6Row this[int index] {
                get {
                    return ((S6Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event S6RowChangeEventHandler S6RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event S6RowChangeEventHandler S6RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event S6RowChangeEventHandler S6RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event S6RowChangeEventHandler S6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddS6Row(S6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public S6Row AddS6Row(string RPIO, string State, string SiteProjectCode, string SiteProjectName, string SiteId, string SiteName, string City, string CongressionalDistrict) {
                S6Row rowS6Row = ((S6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RPIO,
                        State,
                        SiteProjectCode,
                        SiteProjectName,
                        SiteId,
                        SiteName,
                        City,
                        CongressionalDistrict};
                rowS6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowS6Row);
                return rowS6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                S6DataTable cln = ((S6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRPIO = base.Columns["RPIO"];
                this.columnState = base.Columns["State"];
                this.columnSiteProjectCode = base.Columns["SiteProjectCode"];
                this.columnSiteProjectName = base.Columns["SiteProjectName"];
                this.columnSiteId = base.Columns["SiteId"];
                this.columnSiteName = base.Columns["SiteName"];
                this.columnCity = base.Columns["City"];
                this.columnCongressionalDistrict = base.Columns["CongressionalDistrict"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnSiteProjectCode = new global::System.Data.DataColumn("SiteProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteProjectCode);
                this.columnSiteProjectName = new global::System.Data.DataColumn("SiteProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteProjectName);
                this.columnSiteId = new global::System.Data.DataColumn("SiteId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteId);
                this.columnSiteName = new global::System.Data.DataColumn("SiteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteName);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCongressionalDistrict = new global::System.Data.DataColumn("CongressionalDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCongressionalDistrict);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public S6Row NewS6Row() {
                return ((S6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(S6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S6RowChanged != null)) {
                    this.S6RowChanged(this, new S6RowChangeEvent(((S6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S6RowChanging != null)) {
                    this.S6RowChanging(this, new S6RowChangeEvent(((S6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S6RowDeleted != null)) {
                    this.S6RowDeleted(this, new S6RowChangeEvent(((S6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S6RowDeleting != null)) {
                    this.S6RowDeleting(this, new S6RowChangeEvent(((S6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveS6Row(S6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sqlite_sequenceDataTable : global::System.Data.TypedTableBase<sqlite_sequenceRow> {
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnseq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public sqlite_sequenceDataTable() {
                this.TableName = "sqlite_sequence";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal sqlite_sequenceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected sqlite_sequenceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn seqColumn {
                get {
                    return this.columnseq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public sqlite_sequenceRow this[int index] {
                get {
                    return ((sqlite_sequenceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event sqlite_sequenceRowChangeEventHandler sqlite_sequenceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event sqlite_sequenceRowChangeEventHandler sqlite_sequenceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event sqlite_sequenceRowChangeEventHandler sqlite_sequenceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event sqlite_sequenceRowChangeEventHandler sqlite_sequenceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Addsqlite_sequenceRow(sqlite_sequenceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public sqlite_sequenceRow Addsqlite_sequenceRow(string name, long seq) {
                sqlite_sequenceRow rowsqlite_sequenceRow = ((sqlite_sequenceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        name,
                        seq};
                rowsqlite_sequenceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsqlite_sequenceRow);
                return rowsqlite_sequenceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                sqlite_sequenceDataTable cln = ((sqlite_sequenceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sqlite_sequenceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnname = base.Columns["name"];
                this.columnseq = base.Columns["seq"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnseq = new global::System.Data.DataColumn("seq", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseq);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public sqlite_sequenceRow Newsqlite_sequenceRow() {
                return ((sqlite_sequenceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sqlite_sequenceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(sqlite_sequenceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sqlite_sequenceRowChanged != null)) {
                    this.sqlite_sequenceRowChanged(this, new sqlite_sequenceRowChangeEvent(((sqlite_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sqlite_sequenceRowChanging != null)) {
                    this.sqlite_sequenceRowChanging(this, new sqlite_sequenceRowChangeEvent(((sqlite_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sqlite_sequenceRowDeleted != null)) {
                    this.sqlite_sequenceRowDeleted(this, new sqlite_sequenceRowChangeEvent(((sqlite_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sqlite_sequenceRowDeleting != null)) {
                    this.sqlite_sequenceRowDeleting(this, new sqlite_sequenceRowChangeEvent(((sqlite_sequenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Removesqlite_sequenceRow(sqlite_sequenceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sqlite_sequenceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T6DataTable : global::System.Data.TypedTableBase<T6Row> {
            
            private global::System.Data.DataColumn columnBudgetLevel;
            
            private global::System.Data.DataColumn columnDocType;
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnBFY;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnTCN;
            
            private global::System.Data.DataColumn columnQtr;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnProgramProjectCode;
            
            private global::System.Data.DataColumn columnProgramProjectName;
            
            private global::System.Data.DataColumn columnNpmCode;
            
            private global::System.Data.DataColumn columnFromTo;
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T6DataTable() {
                this.TableName = "T6";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal T6DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected T6DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BudgetLevelColumn {
                get {
                    return this.columnBudgetLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DocTypeColumn {
                get {
                    return this.columnDocType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BFYColumn {
                get {
                    return this.columnBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TCNColumn {
                get {
                    return this.columnTCN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn QtrColumn {
                get {
                    return this.columnQtr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectCodeColumn {
                get {
                    return this.columnProgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectNameColumn {
                get {
                    return this.columnProgramProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NpmCodeColumn {
                get {
                    return this.columnNpmCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FromToColumn {
                get {
                    return this.columnFromTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T6Row this[int index] {
                get {
                    return ((T6Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event T6RowChangeEventHandler T6RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event T6RowChangeEventHandler T6RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event T6RowChangeEventHandler T6RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event T6RowChangeEventHandler T6RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddT6Row(T6Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T6Row AddT6Row(
                        string BudgetLevel, 
                        string DocType, 
                        string RPIO, 
                        string Org, 
                        string BFY, 
                        string Fund, 
                        string RC, 
                        string TCN, 
                        string Qtr, 
                        string Date, 
                        string Code, 
                        string ProgramProjectCode, 
                        string ProgramProjectName, 
                        string NpmCode, 
                        string FromTo, 
                        string BOC, 
                        decimal Amount) {
                T6Row rowT6Row = ((T6Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BudgetLevel,
                        DocType,
                        RPIO,
                        Org,
                        BFY,
                        Fund,
                        RC,
                        TCN,
                        Qtr,
                        Date,
                        Code,
                        ProgramProjectCode,
                        ProgramProjectName,
                        NpmCode,
                        FromTo,
                        BOC,
                        Amount};
                rowT6Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowT6Row);
                return rowT6Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T6DataTable cln = ((T6DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T6DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnBudgetLevel = base.Columns["BudgetLevel"];
                this.columnDocType = base.Columns["DocType"];
                this.columnRPIO = base.Columns["RPIO"];
                this.columnOrg = base.Columns["Org"];
                this.columnBFY = base.Columns["BFY"];
                this.columnFund = base.Columns["Fund"];
                this.columnRC = base.Columns["RC"];
                this.columnTCN = base.Columns["TCN"];
                this.columnQtr = base.Columns["Qtr"];
                this.columnDate = base.Columns["Date"];
                this.columnCode = base.Columns["Code"];
                this.columnProgramProjectCode = base.Columns["ProgramProjectCode"];
                this.columnProgramProjectName = base.Columns["ProgramProjectName"];
                this.columnNpmCode = base.Columns["NpmCode"];
                this.columnFromTo = base.Columns["FromTo"];
                this.columnBOC = base.Columns["BOC"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnBudgetLevel = new global::System.Data.DataColumn("BudgetLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetLevel);
                this.columnDocType = new global::System.Data.DataColumn("DocType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocType);
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnBFY = new global::System.Data.DataColumn("BFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFY);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnTCN = new global::System.Data.DataColumn("TCN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCN);
                this.columnQtr = new global::System.Data.DataColumn("Qtr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtr);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnProgramProjectCode = new global::System.Data.DataColumn("ProgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectCode);
                this.columnProgramProjectName = new global::System.Data.DataColumn("ProgramProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectName);
                this.columnNpmCode = new global::System.Data.DataColumn("NpmCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNpmCode);
                this.columnFromTo = new global::System.Data.DataColumn("FromTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromTo);
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T6Row NewT6Row() {
                return ((T6Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T6Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T6Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T6RowChanged != null)) {
                    this.T6RowChanged(this, new T6RowChangeEvent(((T6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T6RowChanging != null)) {
                    this.T6RowChanging(this, new T6RowChangeEvent(((T6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T6RowDeleted != null)) {
                    this.T6RowDeleted(this, new T6RowChangeEvent(((T6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T6RowDeleting != null)) {
                    this.T6RowDeleting(this, new T6RowChangeEvent(((T6Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveT6Row(T6Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T6DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T7DataTable : global::System.Data.TypedTableBase<T7Row> {
            
            private global::System.Data.DataColumn columnBudgetLevel;
            
            private global::System.Data.DataColumn columnDocType;
            
            private global::System.Data.DataColumn columnRPIO;
            
            private global::System.Data.DataColumn columnAH;
            
            private global::System.Data.DataColumn columnBBFY;
            
            private global::System.Data.DataColumn columnFund;
            
            private global::System.Data.DataColumn columnOrg;
            
            private global::System.Data.DataColumn columnRC;
            
            private global::System.Data.DataColumn columnTransferControlNumber;
            
            private global::System.Data.DataColumn columnQuarter;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnPurpose;
            
            private global::System.Data.DataColumn _columnFrom_To;
            
            private global::System.Data.DataColumn columnProgramProjectCode;
            
            private global::System.Data.DataColumn columnProgramProjectName;
            
            private global::System.Data.DataColumn columnNpmCode;
            
            private global::System.Data.DataColumn columnBOC;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T7DataTable() {
                this.TableName = "T7";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal T7DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected T7DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BudgetLevelColumn {
                get {
                    return this.columnBudgetLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DocTypeColumn {
                get {
                    return this.columnDocType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RPIOColumn {
                get {
                    return this.columnRPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AHColumn {
                get {
                    return this.columnAH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BBFYColumn {
                get {
                    return this.columnBBFY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FundColumn {
                get {
                    return this.columnFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrgColumn {
                get {
                    return this.columnOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RCColumn {
                get {
                    return this.columnRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TransferControlNumberColumn {
                get {
                    return this.columnTransferControlNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn QuarterColumn {
                get {
                    return this.columnQuarter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PurposeColumn {
                get {
                    return this.columnPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn _From_ToColumn {
                get {
                    return this._columnFrom_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectCodeColumn {
                get {
                    return this.columnProgramProjectCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgramProjectNameColumn {
                get {
                    return this.columnProgramProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NpmCodeColumn {
                get {
                    return this.columnNpmCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BOCColumn {
                get {
                    return this.columnBOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T7Row this[int index] {
                get {
                    return ((T7Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event T7RowChangeEventHandler T7RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event T7RowChangeEventHandler T7RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event T7RowChangeEventHandler T7RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event T7RowChangeEventHandler T7RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddT7Row(T7Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T7Row AddT7Row(
                        string BudgetLevel, 
                        string DocType, 
                        string RPIO, 
                        string AH, 
                        string BBFY, 
                        string Fund, 
                        string Org, 
                        string RC, 
                        string TransferControlNumber, 
                        string Quarter, 
                        string Date, 
                        string Purpose, 
                        string _From_To, 
                        string ProgramProjectCode, 
                        string ProgramProjectName, 
                        string NpmCode, 
                        string BOC, 
                        decimal Amount) {
                T7Row rowT7Row = ((T7Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BudgetLevel,
                        DocType,
                        RPIO,
                        AH,
                        BBFY,
                        Fund,
                        Org,
                        RC,
                        TransferControlNumber,
                        Quarter,
                        Date,
                        Purpose,
                        _From_To,
                        ProgramProjectCode,
                        ProgramProjectName,
                        NpmCode,
                        BOC,
                        Amount};
                rowT7Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowT7Row);
                return rowT7Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T7DataTable cln = ((T7DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T7DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnBudgetLevel = base.Columns["BudgetLevel"];
                this.columnDocType = base.Columns["DocType"];
                this.columnRPIO = base.Columns["RPIO"];
                this.columnAH = base.Columns["AH"];
                this.columnBBFY = base.Columns["BBFY"];
                this.columnFund = base.Columns["Fund"];
                this.columnOrg = base.Columns["Org"];
                this.columnRC = base.Columns["RC"];
                this.columnTransferControlNumber = base.Columns["TransferControlNumber"];
                this.columnQuarter = base.Columns["Quarter"];
                this.columnDate = base.Columns["Date"];
                this.columnPurpose = base.Columns["Purpose"];
                this._columnFrom_To = base.Columns["From/To"];
                this.columnProgramProjectCode = base.Columns["ProgramProjectCode"];
                this.columnProgramProjectName = base.Columns["ProgramProjectName"];
                this.columnNpmCode = base.Columns["NpmCode"];
                this.columnBOC = base.Columns["BOC"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnBudgetLevel = new global::System.Data.DataColumn("BudgetLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBudgetLevel);
                this.columnDocType = new global::System.Data.DataColumn("DocType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocType);
                this.columnRPIO = new global::System.Data.DataColumn("RPIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPIO);
                this.columnAH = new global::System.Data.DataColumn("AH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAH);
                this.columnBBFY = new global::System.Data.DataColumn("BBFY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBBFY);
                this.columnFund = new global::System.Data.DataColumn("Fund", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund);
                this.columnOrg = new global::System.Data.DataColumn("Org", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrg);
                this.columnRC = new global::System.Data.DataColumn("RC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRC);
                this.columnTransferControlNumber = new global::System.Data.DataColumn("TransferControlNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferControlNumber);
                this.columnQuarter = new global::System.Data.DataColumn("Quarter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuarter);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnPurpose = new global::System.Data.DataColumn("Purpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this._columnFrom_To = new global::System.Data.DataColumn("From/To", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnFrom_To.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnFrom_To");
                this._columnFrom_To.ExtendedProperties.Add("Generator_UserColumnName", "From/To");
                base.Columns.Add(this._columnFrom_To);
                this.columnProgramProjectCode = new global::System.Data.DataColumn("ProgramProjectCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectCode);
                this.columnProgramProjectName = new global::System.Data.DataColumn("ProgramProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramProjectName);
                this.columnNpmCode = new global::System.Data.DataColumn("NpmCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNpmCode);
                this.columnBOC = new global::System.Data.DataColumn("BOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOC);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T7Row NewT7Row() {
                return ((T7Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T7Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T7Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T7RowChanged != null)) {
                    this.T7RowChanged(this, new T7RowChangeEvent(((T7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T7RowChanging != null)) {
                    this.T7RowChanging(this, new T7RowChangeEvent(((T7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T7RowDeleted != null)) {
                    this.T7RowDeleted(this, new T7RowChangeEvent(((T7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T7RowDeleting != null)) {
                    this.T7RowDeleting(this, new T7RowChangeEvent(((T7Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveT7Row(T7Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                R6 ds = new R6();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T7DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class A6Row : global::System.Data.DataRow {
            
            private A6DataTable tableA6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal A6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableA6 = ((A6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Id {
                get {
                    return ((long)(this[this.tableA6.IdColumn]));
                }
                set {
                    this[this.tableA6.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BFY {
                get {
                    try {
                        return ((string)(this[this.tableA6.BFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFY\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.BFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableA6.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableA6.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FundName {
                get {
                    try {
                        return ((string)(this[this.tableA6.FundNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FundName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.FundNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NPM {
                get {
                    try {
                        return ((string)(this[this.tableA6.NPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NPM\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.NPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NpmName {
                get {
                    try {
                        return ((string)(this[this.tableA6.NpmNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NpmName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.NpmNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AH {
                get {
                    try {
                        return ((string)(this[this.tableA6.AHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AH\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.AHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AhName {
                get {
                    try {
                        return ((string)(this[this.tableA6.AhNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AhName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.AhNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AHRC {
                get {
                    try {
                        return ((string)(this[this.tableA6.AHRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AHRC\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.AHRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AhrcName {
                get {
                    try {
                        return ((string)(this[this.tableA6.AhrcNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AhrcName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.AhrcNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableA6.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OrgName {
                get {
                    try {
                        return ((string)(this[this.tableA6.OrgNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.OrgNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PrcOrgCode {
                get {
                    try {
                        return ((string)(this[this.tableA6.PrcOrgCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrcOrgCode\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.PrcOrgCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PrcOrgName {
                get {
                    try {
                        return ((string)(this[this.tableA6.PrcOrgNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrcOrgName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.PrcOrgNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableA6.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PrgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableA6.PrgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrgramProjectCode\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.PrgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectName {
                get {
                    try {
                        return ((string)(this[this.tableA6.ProgramProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.ProgramProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RpioActivityCode {
                get {
                    try {
                        return ((string)(this[this.tableA6.RpioActivityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RpioActivityCode\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.RpioActivityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramArea {
                get {
                    try {
                        return ((string)(this[this.tableA6.ProgramAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramArea\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.ProgramAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramAreaName {
                get {
                    try {
                        return ((string)(this[this.tableA6.ProgramAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramAreaName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.ProgramAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableA6.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BocName {
                get {
                    try {
                        return ((string)(this[this.tableA6.BocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BocName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.BocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FOC {
                get {
                    try {
                        return ((string)(this[this.tableA6.FOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOC\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.FOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FocName {
                get {
                    try {
                        return ((string)(this[this.tableA6.FocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FocName\' in table \'A6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableA6.FocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBFYNull() {
                return this.IsNull(this.tableA6.BFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBFYNull() {
                this[this.tableA6.BFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableA6.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableA6.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableA6.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableA6.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNameNull() {
                return this.IsNull(this.tableA6.FundNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNameNull() {
                this[this.tableA6.FundNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNPMNull() {
                return this.IsNull(this.tableA6.NPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNPMNull() {
                this[this.tableA6.NPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNpmNameNull() {
                return this.IsNull(this.tableA6.NpmNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNpmNameNull() {
                this[this.tableA6.NpmNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAHNull() {
                return this.IsNull(this.tableA6.AHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAHNull() {
                this[this.tableA6.AHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAhNameNull() {
                return this.IsNull(this.tableA6.AhNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAhNameNull() {
                this[this.tableA6.AhNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAHRCNull() {
                return this.IsNull(this.tableA6.AHRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAHRCNull() {
                this[this.tableA6.AHRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAhrcNameNull() {
                return this.IsNull(this.tableA6.AhrcNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAhrcNameNull() {
                this[this.tableA6.AhrcNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableA6.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableA6.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNameNull() {
                return this.IsNull(this.tableA6.OrgNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNameNull() {
                this[this.tableA6.OrgNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrcOrgCodeNull() {
                return this.IsNull(this.tableA6.PrcOrgCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrcOrgCodeNull() {
                this[this.tableA6.PrcOrgCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrcOrgNameNull() {
                return this.IsNull(this.tableA6.PrcOrgNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrcOrgNameNull() {
                this[this.tableA6.PrcOrgNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableA6.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tableA6.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrgramProjectCodeNull() {
                return this.IsNull(this.tableA6.PrgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrgramProjectCodeNull() {
                this[this.tableA6.PrgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectNameNull() {
                return this.IsNull(this.tableA6.ProgramProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectNameNull() {
                this[this.tableA6.ProgramProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRpioActivityCodeNull() {
                return this.IsNull(this.tableA6.RpioActivityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRpioActivityCodeNull() {
                this[this.tableA6.RpioActivityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNull() {
                return this.IsNull(this.tableA6.ProgramAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNull() {
                this[this.tableA6.ProgramAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNameNull() {
                return this.IsNull(this.tableA6.ProgramAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNameNull() {
                this[this.tableA6.ProgramAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableA6.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableA6.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBocNameNull() {
                return this.IsNull(this.tableA6.BocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBocNameNull() {
                this[this.tableA6.BocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFOCNull() {
                return this.IsNull(this.tableA6.FOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFOCNull() {
                this[this.tableA6.FOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFocNameNull() {
                return this.IsNull(this.tableA6.FocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFocNameNull() {
                this[this.tableA6.FocNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class B6Row : global::System.Data.DataRow {
            
            private B6DataTable tableB6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal B6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableB6 = ((B6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Id {
                get {
                    return ((long)(this[this.tableB6.IdColumn]));
                }
                set {
                    this[this.tableB6.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ControlNumber {
                get {
                    try {
                        return ((string)(this[this.tableB6.ControlNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ControlNumber\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.ControlNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DivsionName {
                get {
                    try {
                        return ((string)(this[this.tableB6.DivsionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DivsionName\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.DivsionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FiscalYear {
                get {
                    try {
                        return ((string)(this[this.tableB6.FiscalYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FiscalYear\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.FiscalYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DivisionId {
                get {
                    try {
                        return ((string)(this[this.tableB6.DivisionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DivisionId\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.DivisionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Awards {
                get {
                    try {
                        return ((decimal)(this[this.tableB6.AwardsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Awards\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.AwardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableB6.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OverTime {
                get {
                    try {
                        return ((decimal)(this[this.tableB6.OverTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverTime\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.OverTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double TimeOffAwards {
                get {
                    try {
                        return ((double)(this[this.tableB6.TimeOffAwardsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOffAwards\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.TimeOffAwardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Training {
                get {
                    try {
                        return ((string)(this[this.tableB6.TrainingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Training\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.TrainingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableB6.PurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purpose\' in table \'B6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableB6.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsControlNumberNull() {
                return this.IsNull(this.tableB6.ControlNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetControlNumberNull() {
                this[this.tableB6.ControlNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDivsionNameNull() {
                return this.IsNull(this.tableB6.DivsionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDivsionNameNull() {
                this[this.tableB6.DivsionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFiscalYearNull() {
                return this.IsNull(this.tableB6.FiscalYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFiscalYearNull() {
                this[this.tableB6.FiscalYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDivisionIdNull() {
                return this.IsNull(this.tableB6.DivisionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDivisionIdNull() {
                this[this.tableB6.DivisionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAwardsNull() {
                return this.IsNull(this.tableB6.AwardsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAwardsNull() {
                this[this.tableB6.AwardsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableB6.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableB6.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOverTimeNull() {
                return this.IsNull(this.tableB6.OverTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOverTimeNull() {
                this[this.tableB6.OverTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTimeOffAwardsNull() {
                return this.IsNull(this.tableB6.TimeOffAwardsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTimeOffAwardsNull() {
                this[this.tableB6.TimeOffAwardsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTrainingNull() {
                return this.IsNull(this.tableB6.TrainingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTrainingNull() {
                this[this.tableB6.TrainingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurposeNull() {
                return this.IsNull(this.tableB6.PurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurposeNull() {
                this[this.tableB6.PurposeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class E1Row : global::System.Data.DataRow {
            
            private E1DataTable tableE1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal E1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableE1 = ((E1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EmployId {
                get {
                    try {
                        return ((string)(this[this.tableE1.EmployIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployId\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.EmployIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HrOrgCode {
                get {
                    try {
                        return ((string)(this[this.tableE1.HrOrgCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HrOrgCode\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.HrOrgCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HrOrgCodeName {
                get {
                    try {
                        return ((string)(this[this.tableE1.HrOrgCodeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HrOrgCodeName\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.HrOrgCodeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WorkCode {
                get {
                    try {
                        return ((string)(this[this.tableE1.WorkCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkCode\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.WorkCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableE1.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableE1.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LeaveType {
                get {
                    try {
                        return ((string)(this[this.tableE1.LeaveTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaveType\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.LeaveTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double HoursCurrent {
                get {
                    try {
                        return ((double)(this[this.tableE1.HoursCurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoursCurrent\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.HoursCurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double HoursTotal {
                get {
                    try {
                        return ((double)(this[this.tableE1.HoursTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoursTotal\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.HoursTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double HoursProjected {
                get {
                    try {
                        return ((double)(this[this.tableE1.HoursProjectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoursProjected\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.HoursProjectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double HoursUseLose {
                get {
                    try {
                        return ((double)(this[this.tableE1.HoursUseLoseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoursUseLose\' in table \'E1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableE1.HoursUseLoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEmployIdNull() {
                return this.IsNull(this.tableE1.EmployIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEmployIdNull() {
                this[this.tableE1.EmployIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHrOrgCodeNull() {
                return this.IsNull(this.tableE1.HrOrgCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHrOrgCodeNull() {
                this[this.tableE1.HrOrgCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHrOrgCodeNameNull() {
                return this.IsNull(this.tableE1.HrOrgCodeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHrOrgCodeNameNull() {
                this[this.tableE1.HrOrgCodeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWorkCodeNull() {
                return this.IsNull(this.tableE1.WorkCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWorkCodeNull() {
                this[this.tableE1.WorkCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableE1.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFirstNameNull() {
                this[this.tableE1.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableE1.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLastNameNull() {
                this[this.tableE1.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLeaveTypeNull() {
                return this.IsNull(this.tableE1.LeaveTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLeaveTypeNull() {
                this[this.tableE1.LeaveTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHoursCurrentNull() {
                return this.IsNull(this.tableE1.HoursCurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHoursCurrentNull() {
                this[this.tableE1.HoursCurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHoursTotalNull() {
                return this.IsNull(this.tableE1.HoursTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHoursTotalNull() {
                this[this.tableE1.HoursTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHoursProjectedNull() {
                return this.IsNull(this.tableE1.HoursProjectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHoursProjectedNull() {
                this[this.tableE1.HoursProjectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHoursUseLoseNull() {
                return this.IsNull(this.tableE1.HoursUseLoseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHoursUseLoseNull() {
                this[this.tableE1.HoursUseLoseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class F6Row : global::System.Data.DataRow {
            
            private F6DataTable tableF6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal F6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableF6 = ((F6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableF6.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'F6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF6.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BocName {
                get {
                    try {
                        return ((string)(this[this.tableF6.BocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BocName\' in table \'F6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF6.BocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FOC {
                get {
                    try {
                        return ((string)(this[this.tableF6.FOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOC\' in table \'F6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF6.FOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FocName {
                get {
                    try {
                        return ((string)(this[this.tableF6.FocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FocName\' in table \'F6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableF6.FocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Id {
                get {
                    return ((long)(this[this.tableF6.IdColumn]));
                }
                set {
                    this[this.tableF6.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableF6.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableF6.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBocNameNull() {
                return this.IsNull(this.tableF6.BocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBocNameNull() {
                this[this.tableF6.BocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFOCNull() {
                return this.IsNull(this.tableF6.FOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFOCNull() {
                this[this.tableF6.FOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFocNameNull() {
                return this.IsNull(this.tableF6.FocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFocNameNull() {
                this[this.tableF6.FocNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class O6Row : global::System.Data.DataRow {
            
            private O6DataTable tableO6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal O6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableO6 = ((O6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BudgetLevel {
                get {
                    try {
                        return ((string)(this[this.tableO6.BudgetLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BudgetLevel\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.BudgetLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableO6.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BFY {
                get {
                    try {
                        return ((string)(this[this.tableO6.BFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFY\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.BFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableO6.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableO6.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableO6.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NPM {
                get {
                    try {
                        return ((string)(this[this.tableO6.NPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NPM\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.NPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NpmName {
                get {
                    try {
                        return ((string)(this[this.tableO6.NpmNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NpmName\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.NpmNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableO6.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableO6.ProgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectCode\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.ProgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectName {
                get {
                    try {
                        return ((string)(this[this.tableO6.ProgramProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectName\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.ProgramProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramArea {
                get {
                    try {
                        return ((string)(this[this.tableO6.ProgramAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramArea\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.ProgramAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramAreaName {
                get {
                    try {
                        return ((string)(this[this.tableO6.ProgramAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramAreaName\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.ProgramAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableO6.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Authority {
                get {
                    try {
                        return ((decimal)(this[this.tableO6.AuthorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Authority\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.AuthorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal CarryOver {
                get {
                    try {
                        return ((decimal)(this[this.tableO6.CarryOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarryOver\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.CarryOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableO6.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OpenCommitment {
                get {
                    try {
                        return ((decimal)(this[this.tableO6.OpenCommitmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpenCommitment\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.OpenCommitmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Obligation {
                get {
                    try {
                        return ((decimal)(this[this.tableO6.ObligationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Obligation\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.ObligationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Available {
                get {
                    try {
                        return ((decimal)(this[this.tableO6.AvailableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Available\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.AvailableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal ULO {
                get {
                    try {
                        return ((decimal)(this[this.tableO6.ULOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ULO\' in table \'O6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO6.ULOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBudgetLevelNull() {
                return this.IsNull(this.tableO6.BudgetLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBudgetLevelNull() {
                this[this.tableO6.BudgetLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableO6.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableO6.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBFYNull() {
                return this.IsNull(this.tableO6.BFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBFYNull() {
                this[this.tableO6.BFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableO6.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableO6.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableO6.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableO6.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRCNull() {
                return this.IsNull(this.tableO6.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRCNull() {
                this[this.tableO6.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNPMNull() {
                return this.IsNull(this.tableO6.NPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNPMNull() {
                this[this.tableO6.NPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNpmNameNull() {
                return this.IsNull(this.tableO6.NpmNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNpmNameNull() {
                this[this.tableO6.NpmNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableO6.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tableO6.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectCodeNull() {
                return this.IsNull(this.tableO6.ProgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectCodeNull() {
                this[this.tableO6.ProgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectNameNull() {
                return this.IsNull(this.tableO6.ProgramProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectNameNull() {
                this[this.tableO6.ProgramProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNull() {
                return this.IsNull(this.tableO6.ProgramAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNull() {
                this[this.tableO6.ProgramAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNameNull() {
                return this.IsNull(this.tableO6.ProgramAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNameNull() {
                this[this.tableO6.ProgramAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableO6.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableO6.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAuthorityNull() {
                return this.IsNull(this.tableO6.AuthorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAuthorityNull() {
                this[this.tableO6.AuthorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCarryOverNull() {
                return this.IsNull(this.tableO6.CarryOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCarryOverNull() {
                this[this.tableO6.CarryOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableO6.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAmountNull() {
                this[this.tableO6.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOpenCommitmentNull() {
                return this.IsNull(this.tableO6.OpenCommitmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOpenCommitmentNull() {
                this[this.tableO6.OpenCommitmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObligationNull() {
                return this.IsNull(this.tableO6.ObligationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObligationNull() {
                this[this.tableO6.ObligationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAvailableNull() {
                return this.IsNull(this.tableO6.AvailableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAvailableNull() {
                this[this.tableO6.AvailableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsULONull() {
                return this.IsNull(this.tableO6.ULOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetULONull() {
                this[this.tableO6.ULOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class O7Row : global::System.Data.DataRow {
            
            private O7DataTable tableO7;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal O7Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableO7 = ((O7DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableO7.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableO7.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NpmCode {
                get {
                    try {
                        return ((string)(this[this.tableO7.NpmCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NpmCode\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.NpmCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BFY {
                get {
                    try {
                        return ((string)(this[this.tableO7.BFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFY\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.BFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string System {
                get {
                    try {
                        return ((string)(this[this.tableO7.SystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'System\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.SystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableO7.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Division {
                get {
                    try {
                        return ((string)(this[this.tableO7.DivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Division\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.DivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableO7.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubProject {
                get {
                    try {
                        return ((string)(this[this.tableO7.SubProjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubProject\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.SubProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableO7.ProgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectCode\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.ProgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableO7.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FOC {
                get {
                    try {
                        return ((string)(this[this.tableO7.FOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOC\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.FOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FocName {
                get {
                    try {
                        return ((string)(this[this.tableO7.FocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FocName\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.FocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PurchaseRequest {
                get {
                    try {
                        return ((string)(this[this.tableO7.PurchaseRequestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseRequest\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.PurchaseRequestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DocPrefix {
                get {
                    try {
                        return ((string)(this[this.tableO7.DocPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocPrefix\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.DocPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DocType {
                get {
                    try {
                        return ((string)(this[this.tableO7.DocTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocType\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.DocTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DCN {
                get {
                    try {
                        return ((string)(this[this.tableO7.DCNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCN\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.DCNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SiteProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableO7.SiteProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteProjectCode\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.SiteProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SiteProjectName {
                get {
                    try {
                        return ((string)(this[this.tableO7.SiteProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteProjectName\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.SiteProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GrantNumber {
                get {
                    try {
                        return ((string)(this[this.tableO7.GrantNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrantNumber\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.GrantNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Commitment {
                get {
                    try {
                        return ((decimal)(this[this.tableO7.CommitmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Commitment\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.CommitmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Obligation {
                get {
                    try {
                        return ((decimal)(this[this.tableO7.ObligationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Obligation\' in table \'O7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO7.ObligationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableO7.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableO7.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableO7.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableO7.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNpmCodeNull() {
                return this.IsNull(this.tableO7.NpmCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNpmCodeNull() {
                this[this.tableO7.NpmCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBFYNull() {
                return this.IsNull(this.tableO7.BFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBFYNull() {
                this[this.tableO7.BFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSystemNull() {
                return this.IsNull(this.tableO7.SystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSystemNull() {
                this[this.tableO7.SystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRCNull() {
                return this.IsNull(this.tableO7.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRCNull() {
                this[this.tableO7.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDivisionNull() {
                return this.IsNull(this.tableO7.DivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDivisionNull() {
                this[this.tableO7.DivisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableO7.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tableO7.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubProjectNull() {
                return this.IsNull(this.tableO7.SubProjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubProjectNull() {
                this[this.tableO7.SubProjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectCodeNull() {
                return this.IsNull(this.tableO7.ProgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectCodeNull() {
                this[this.tableO7.ProgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableO7.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableO7.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFOCNull() {
                return this.IsNull(this.tableO7.FOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFOCNull() {
                this[this.tableO7.FOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFocNameNull() {
                return this.IsNull(this.tableO7.FocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFocNameNull() {
                this[this.tableO7.FocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurchaseRequestNull() {
                return this.IsNull(this.tableO7.PurchaseRequestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurchaseRequestNull() {
                this[this.tableO7.PurchaseRequestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDocPrefixNull() {
                return this.IsNull(this.tableO7.DocPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDocPrefixNull() {
                this[this.tableO7.DocPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDocTypeNull() {
                return this.IsNull(this.tableO7.DocTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDocTypeNull() {
                this[this.tableO7.DocTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDCNNull() {
                return this.IsNull(this.tableO7.DCNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDCNNull() {
                this[this.tableO7.DCNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSiteProjectCodeNull() {
                return this.IsNull(this.tableO7.SiteProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSiteProjectCodeNull() {
                this[this.tableO7.SiteProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSiteProjectNameNull() {
                return this.IsNull(this.tableO7.SiteProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSiteProjectNameNull() {
                this[this.tableO7.SiteProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGrantNumberNull() {
                return this.IsNull(this.tableO7.GrantNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGrantNumberNull() {
                this[this.tableO7.GrantNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCommitmentNull() {
                return this.IsNull(this.tableO7.CommitmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCommitmentNull() {
                this[this.tableO7.CommitmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObligationNull() {
                return this.IsNull(this.tableO7.ObligationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObligationNull() {
                this[this.tableO7.ObligationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class O8Row : global::System.Data.DataRow {
            
            private O8DataTable tableO8;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal O8Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableO8 = ((O8DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableO8.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BFY {
                get {
                    try {
                        return ((string)(this[this.tableO8.BFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFY\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.BFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableO8.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableO8.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableO8.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableO8.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableO8.ProgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectCode\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.ProgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectName {
                get {
                    try {
                        return ((string)(this[this.tableO8.ProgramProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectName\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.ProgramProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HrOrgCode {
                get {
                    try {
                        return ((string)(this[this.tableO8.HrOrgCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HrOrgCode\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.HrOrgCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WorkCode {
                get {
                    try {
                        return ((string)(this[this.tableO8.WorkCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkCode\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.WorkCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WorkCodeName {
                get {
                    try {
                        return ((string)(this[this.tableO8.WorkCodeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkCodeName\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.WorkCodeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal CurrentPay {
                get {
                    try {
                        return ((decimal)(this[this.tableO8.CurrentPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentPay\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.CurrentPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double CurrentHours {
                get {
                    try {
                        return ((double)(this[this.tableO8.CurrentHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentHours\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.CurrentHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalPay {
                get {
                    try {
                        return ((decimal)(this[this.tableO8.TotalPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPay\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.TotalPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double TotalHours {
                get {
                    try {
                        return ((double)(this[this.tableO8.TotalHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHours\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.TotalHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalBenefits {
                get {
                    try {
                        return ((decimal)(this[this.tableO8.TotalBenefitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBenefits\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.TotalBenefitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double TotalOvertimePay {
                get {
                    try {
                        return ((double)(this[this.tableO8.TotalOvertimePayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalOvertimePay\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.TotalOvertimePayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double TotalOvertimeHours {
                get {
                    try {
                        return ((double)(this[this.tableO8.TotalOvertimeHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalOvertimeHours\' in table \'O8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableO8.TotalOvertimeHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableO8.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableO8.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBFYNull() {
                return this.IsNull(this.tableO8.BFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBFYNull() {
                this[this.tableO8.BFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableO8.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableO8.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableO8.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableO8.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRCNull() {
                return this.IsNull(this.tableO8.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRCNull() {
                this[this.tableO8.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableO8.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tableO8.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectCodeNull() {
                return this.IsNull(this.tableO8.ProgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectCodeNull() {
                this[this.tableO8.ProgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectNameNull() {
                return this.IsNull(this.tableO8.ProgramProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectNameNull() {
                this[this.tableO8.ProgramProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHrOrgCodeNull() {
                return this.IsNull(this.tableO8.HrOrgCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHrOrgCodeNull() {
                this[this.tableO8.HrOrgCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWorkCodeNull() {
                return this.IsNull(this.tableO8.WorkCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWorkCodeNull() {
                this[this.tableO8.WorkCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWorkCodeNameNull() {
                return this.IsNull(this.tableO8.WorkCodeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWorkCodeNameNull() {
                this[this.tableO8.WorkCodeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCurrentPayNull() {
                return this.IsNull(this.tableO8.CurrentPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCurrentPayNull() {
                this[this.tableO8.CurrentPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCurrentHoursNull() {
                return this.IsNull(this.tableO8.CurrentHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCurrentHoursNull() {
                this[this.tableO8.CurrentHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalPayNull() {
                return this.IsNull(this.tableO8.TotalPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalPayNull() {
                this[this.tableO8.TotalPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalHoursNull() {
                return this.IsNull(this.tableO8.TotalHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalHoursNull() {
                this[this.tableO8.TotalHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalBenefitsNull() {
                return this.IsNull(this.tableO8.TotalBenefitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalBenefitsNull() {
                this[this.tableO8.TotalBenefitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalOvertimePayNull() {
                return this.IsNull(this.tableO8.TotalOvertimePayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalOvertimePayNull() {
                this[this.tableO8.TotalOvertimePayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalOvertimeHoursNull() {
                return this.IsNull(this.tableO8.TotalOvertimeHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalOvertimeHoursNull() {
                this[this.tableO8.TotalOvertimeHoursColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class P6Row : global::System.Data.DataRow {
            
            private P6DataTable tableP6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal P6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableP6 = ((P6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Id {
                get {
                    return ((long)(this[this.tableP6.IdColumn]));
                }
                set {
                    this[this.tableP6.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BudgetLevel {
                get {
                    try {
                        return ((string)(this[this.tableP6.BudgetLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BudgetLevel\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.BudgetLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableP6.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BFY {
                get {
                    try {
                        return ((string)(this[this.tableP6.BFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFY\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.BFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableP6.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FundName {
                get {
                    try {
                        return ((string)(this[this.tableP6.FundNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FundName\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.FundNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableP6.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableP6.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BocName {
                get {
                    try {
                        return ((string)(this[this.tableP6.BocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BocName\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.BocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableP6.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DivisionName {
                get {
                    try {
                        return ((string)(this[this.tableP6.DivisionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DivisionName\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.DivisionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableP6.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableP6.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubProject {
                get {
                    try {
                        return ((string)(this[this.tableP6.SubProjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubProject\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.SubProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NPM {
                get {
                    try {
                        return ((string)(this[this.tableP6.NPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NPM\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.NPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NpmCode {
                get {
                    try {
                        return ((string)(this[this.tableP6.NpmCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NpmCode\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.NpmCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectName {
                get {
                    try {
                        return ((string)(this[this.tableP6.ProgramProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectName\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.ProgramProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableP6.ProgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectCode\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.ProgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramArea {
                get {
                    try {
                        return ((string)(this[this.tableP6.ProgramAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramArea\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.ProgramAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramAreaName {
                get {
                    try {
                        return ((string)(this[this.tableP6.ProgramAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramAreaName\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.ProgramAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Goal {
                get {
                    try {
                        return ((string)(this[this.tableP6.GoalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Goal\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.GoalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GoalName {
                get {
                    try {
                        return ((string)(this[this.tableP6.GoalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalName\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.GoalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Objective {
                get {
                    try {
                        return ((string)(this[this.tableP6.ObjectiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Objective\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.ObjectiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ObjectiveName {
                get {
                    try {
                        return ((string)(this[this.tableP6.ObjectiveNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectiveName\' in table \'P6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP6.ObjectiveNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBudgetLevelNull() {
                return this.IsNull(this.tableP6.BudgetLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBudgetLevelNull() {
                this[this.tableP6.BudgetLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableP6.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableP6.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBFYNull() {
                return this.IsNull(this.tableP6.BFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBFYNull() {
                this[this.tableP6.BFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableP6.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableP6.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNameNull() {
                return this.IsNull(this.tableP6.FundNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNameNull() {
                this[this.tableP6.FundNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableP6.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableP6.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableP6.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableP6.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBocNameNull() {
                return this.IsNull(this.tableP6.BocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBocNameNull() {
                this[this.tableP6.BocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRCNull() {
                return this.IsNull(this.tableP6.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRCNull() {
                this[this.tableP6.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDivisionNameNull() {
                return this.IsNull(this.tableP6.DivisionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDivisionNameNull() {
                this[this.tableP6.DivisionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableP6.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tableP6.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableP6.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAmountNull() {
                this[this.tableP6.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubProjectNull() {
                return this.IsNull(this.tableP6.SubProjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubProjectNull() {
                this[this.tableP6.SubProjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNPMNull() {
                return this.IsNull(this.tableP6.NPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNPMNull() {
                this[this.tableP6.NPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNpmCodeNull() {
                return this.IsNull(this.tableP6.NpmCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNpmCodeNull() {
                this[this.tableP6.NpmCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectNameNull() {
                return this.IsNull(this.tableP6.ProgramProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectNameNull() {
                this[this.tableP6.ProgramProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectCodeNull() {
                return this.IsNull(this.tableP6.ProgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectCodeNull() {
                this[this.tableP6.ProgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNull() {
                return this.IsNull(this.tableP6.ProgramAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNull() {
                this[this.tableP6.ProgramAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNameNull() {
                return this.IsNull(this.tableP6.ProgramAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNameNull() {
                this[this.tableP6.ProgramAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGoalNull() {
                return this.IsNull(this.tableP6.GoalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGoalNull() {
                this[this.tableP6.GoalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGoalNameNull() {
                return this.IsNull(this.tableP6.GoalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGoalNameNull() {
                this[this.tableP6.GoalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObjectiveNull() {
                return this.IsNull(this.tableP6.ObjectiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObjectiveNull() {
                this[this.tableP6.ObjectiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObjectiveNameNull() {
                return this.IsNull(this.tableP6.ObjectiveNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObjectiveNameNull() {
                this[this.tableP6.ObjectiveNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class P7Row : global::System.Data.DataRow {
            
            private P7DataTable tableP7;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal P7Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableP7 = ((P7DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Id {
                get {
                    return ((long)(this[this.tableP7.IdColumn]));
                }
                set {
                    this[this.tableP7.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BudgetLevel {
                get {
                    try {
                        return ((string)(this[this.tableP7.BudgetLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BudgetLevel\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.BudgetLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableP7.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BFY {
                get {
                    try {
                        return ((string)(this[this.tableP7.BFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFY\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.BFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableP7.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FundName {
                get {
                    try {
                        return ((string)(this[this.tableP7.FundNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FundName\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.FundNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableP7.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableP7.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BocName {
                get {
                    try {
                        return ((string)(this[this.tableP7.BocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BocName\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.BocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableP7.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DivisionName {
                get {
                    try {
                        return ((string)(this[this.tableP7.DivisionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DivisionName\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.DivisionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableP7.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableP7.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubProject {
                get {
                    try {
                        return ((string)(this[this.tableP7.SubProjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubProject\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.SubProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NPM {
                get {
                    try {
                        return ((string)(this[this.tableP7.NPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NPM\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.NPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NpmCode {
                get {
                    try {
                        return ((string)(this[this.tableP7.NpmCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NpmCode\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.NpmCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectName {
                get {
                    try {
                        return ((string)(this[this.tableP7.ProgramProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectName\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.ProgramProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableP7.ProgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectCode\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.ProgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramArea {
                get {
                    try {
                        return ((string)(this[this.tableP7.ProgramAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramArea\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.ProgramAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramAreaName {
                get {
                    try {
                        return ((string)(this[this.tableP7.ProgramAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramAreaName\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.ProgramAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Goal {
                get {
                    try {
                        return ((string)(this[this.tableP7.GoalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Goal\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.GoalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GoalName {
                get {
                    try {
                        return ((string)(this[this.tableP7.GoalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalName\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.GoalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Objective {
                get {
                    try {
                        return ((string)(this[this.tableP7.ObjectiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Objective\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.ObjectiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ObjectiveName {
                get {
                    try {
                        return ((string)(this[this.tableP7.ObjectiveNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectiveName\' in table \'P7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP7.ObjectiveNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBudgetLevelNull() {
                return this.IsNull(this.tableP7.BudgetLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBudgetLevelNull() {
                this[this.tableP7.BudgetLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableP7.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableP7.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBFYNull() {
                return this.IsNull(this.tableP7.BFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBFYNull() {
                this[this.tableP7.BFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableP7.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableP7.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNameNull() {
                return this.IsNull(this.tableP7.FundNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNameNull() {
                this[this.tableP7.FundNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableP7.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableP7.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableP7.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableP7.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBocNameNull() {
                return this.IsNull(this.tableP7.BocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBocNameNull() {
                this[this.tableP7.BocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRCNull() {
                return this.IsNull(this.tableP7.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRCNull() {
                this[this.tableP7.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDivisionNameNull() {
                return this.IsNull(this.tableP7.DivisionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDivisionNameNull() {
                this[this.tableP7.DivisionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableP7.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tableP7.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableP7.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAmountNull() {
                this[this.tableP7.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubProjectNull() {
                return this.IsNull(this.tableP7.SubProjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubProjectNull() {
                this[this.tableP7.SubProjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNPMNull() {
                return this.IsNull(this.tableP7.NPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNPMNull() {
                this[this.tableP7.NPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNpmCodeNull() {
                return this.IsNull(this.tableP7.NpmCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNpmCodeNull() {
                this[this.tableP7.NpmCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectNameNull() {
                return this.IsNull(this.tableP7.ProgramProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectNameNull() {
                this[this.tableP7.ProgramProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectCodeNull() {
                return this.IsNull(this.tableP7.ProgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectCodeNull() {
                this[this.tableP7.ProgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNull() {
                return this.IsNull(this.tableP7.ProgramAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNull() {
                this[this.tableP7.ProgramAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNameNull() {
                return this.IsNull(this.tableP7.ProgramAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNameNull() {
                this[this.tableP7.ProgramAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGoalNull() {
                return this.IsNull(this.tableP7.GoalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGoalNull() {
                this[this.tableP7.GoalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGoalNameNull() {
                return this.IsNull(this.tableP7.GoalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGoalNameNull() {
                this[this.tableP7.GoalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObjectiveNull() {
                return this.IsNull(this.tableP7.ObjectiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObjectiveNull() {
                this[this.tableP7.ObjectiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObjectiveNameNull() {
                return this.IsNull(this.tableP7.ObjectiveNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObjectiveNameNull() {
                this[this.tableP7.ObjectiveNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class P8Row : global::System.Data.DataRow {
            
            private P8DataTable tableP8;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal P8Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableP8 = ((P8DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long Id {
                get {
                    return ((long)(this[this.tableP8.IdColumn]));
                }
                set {
                    this[this.tableP8.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BudgetLevel {
                get {
                    try {
                        return ((string)(this[this.tableP8.BudgetLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BudgetLevel\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.BudgetLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableP8.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BFY {
                get {
                    try {
                        return ((string)(this[this.tableP8.BFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFY\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.BFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableP8.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FundName {
                get {
                    try {
                        return ((string)(this[this.tableP8.FundNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FundName\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.FundNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableP8.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableP8.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BocName {
                get {
                    try {
                        return ((string)(this[this.tableP8.BocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BocName\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.BocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableP8.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DivisionName {
                get {
                    try {
                        return ((string)(this[this.tableP8.DivisionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DivisionName\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.DivisionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableP8.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableP8.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubProject {
                get {
                    try {
                        return ((string)(this[this.tableP8.SubProjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubProject\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.SubProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NPM {
                get {
                    try {
                        return ((string)(this[this.tableP8.NPMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NPM\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.NPMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NpmCode {
                get {
                    try {
                        return ((string)(this[this.tableP8.NpmCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NpmCode\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.NpmCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectName {
                get {
                    try {
                        return ((string)(this[this.tableP8.ProgramProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectName\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.ProgramProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableP8.ProgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectCode\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.ProgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramArea {
                get {
                    try {
                        return ((string)(this[this.tableP8.ProgramAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramArea\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.ProgramAreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramAreaName {
                get {
                    try {
                        return ((string)(this[this.tableP8.ProgramAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramAreaName\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.ProgramAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Goal {
                get {
                    try {
                        return ((string)(this[this.tableP8.GoalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Goal\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.GoalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GoalName {
                get {
                    try {
                        return ((string)(this[this.tableP8.GoalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalName\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.GoalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Objective {
                get {
                    try {
                        return ((string)(this[this.tableP8.ObjectiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Objective\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.ObjectiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ObjectiveName {
                get {
                    try {
                        return ((string)(this[this.tableP8.ObjectiveNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectiveName\' in table \'P8\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableP8.ObjectiveNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBudgetLevelNull() {
                return this.IsNull(this.tableP8.BudgetLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBudgetLevelNull() {
                this[this.tableP8.BudgetLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableP8.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableP8.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBFYNull() {
                return this.IsNull(this.tableP8.BFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBFYNull() {
                this[this.tableP8.BFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableP8.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableP8.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNameNull() {
                return this.IsNull(this.tableP8.FundNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNameNull() {
                this[this.tableP8.FundNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableP8.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableP8.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableP8.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableP8.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBocNameNull() {
                return this.IsNull(this.tableP8.BocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBocNameNull() {
                this[this.tableP8.BocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRCNull() {
                return this.IsNull(this.tableP8.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRCNull() {
                this[this.tableP8.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDivisionNameNull() {
                return this.IsNull(this.tableP8.DivisionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDivisionNameNull() {
                this[this.tableP8.DivisionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableP8.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tableP8.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableP8.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAmountNull() {
                this[this.tableP8.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubProjectNull() {
                return this.IsNull(this.tableP8.SubProjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubProjectNull() {
                this[this.tableP8.SubProjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNPMNull() {
                return this.IsNull(this.tableP8.NPMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNPMNull() {
                this[this.tableP8.NPMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNpmCodeNull() {
                return this.IsNull(this.tableP8.NpmCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNpmCodeNull() {
                this[this.tableP8.NpmCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectNameNull() {
                return this.IsNull(this.tableP8.ProgramProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectNameNull() {
                this[this.tableP8.ProgramProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectCodeNull() {
                return this.IsNull(this.tableP8.ProgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectCodeNull() {
                this[this.tableP8.ProgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNull() {
                return this.IsNull(this.tableP8.ProgramAreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNull() {
                this[this.tableP8.ProgramAreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramAreaNameNull() {
                return this.IsNull(this.tableP8.ProgramAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramAreaNameNull() {
                this[this.tableP8.ProgramAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGoalNull() {
                return this.IsNull(this.tableP8.GoalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGoalNull() {
                this[this.tableP8.GoalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGoalNameNull() {
                return this.IsNull(this.tableP8.GoalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGoalNameNull() {
                this[this.tableP8.GoalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObjectiveNull() {
                return this.IsNull(this.tableP8.ObjectiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObjectiveNull() {
                this[this.tableP8.ObjectiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObjectiveNameNull() {
                return this.IsNull(this.tableP8.ObjectiveNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObjectiveNameNull() {
                this[this.tableP8.ObjectiveNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class S6Row : global::System.Data.DataRow {
            
            private S6DataTable tableS6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal S6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS6 = ((S6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableS6.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'S6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS6.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableS6.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'S6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS6.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SiteProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableS6.SiteProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteProjectCode\' in table \'S6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS6.SiteProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SiteProjectName {
                get {
                    try {
                        return ((string)(this[this.tableS6.SiteProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteProjectName\' in table \'S6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS6.SiteProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SiteId {
                get {
                    try {
                        return ((string)(this[this.tableS6.SiteIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteId\' in table \'S6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS6.SiteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SiteName {
                get {
                    try {
                        return ((string)(this[this.tableS6.SiteNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteName\' in table \'S6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS6.SiteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableS6.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'S6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS6.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CongressionalDistrict {
                get {
                    try {
                        return ((string)(this[this.tableS6.CongressionalDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CongressionalDistrict\' in table \'S6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS6.CongressionalDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableS6.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableS6.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStateNull() {
                return this.IsNull(this.tableS6.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStateNull() {
                this[this.tableS6.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSiteProjectCodeNull() {
                return this.IsNull(this.tableS6.SiteProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSiteProjectCodeNull() {
                this[this.tableS6.SiteProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSiteProjectNameNull() {
                return this.IsNull(this.tableS6.SiteProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSiteProjectNameNull() {
                this[this.tableS6.SiteProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSiteIdNull() {
                return this.IsNull(this.tableS6.SiteIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSiteIdNull() {
                this[this.tableS6.SiteIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSiteNameNull() {
                return this.IsNull(this.tableS6.SiteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSiteNameNull() {
                this[this.tableS6.SiteNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tableS6.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCityNull() {
                this[this.tableS6.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCongressionalDistrictNull() {
                return this.IsNull(this.tableS6.CongressionalDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCongressionalDistrictNull() {
                this[this.tableS6.CongressionalDistrictColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class sqlite_sequenceRow : global::System.Data.DataRow {
            
            private sqlite_sequenceDataTable tablesqlite_sequence;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal sqlite_sequenceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesqlite_sequence = ((sqlite_sequenceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablesqlite_sequence.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'sqlite_sequence\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesqlite_sequence.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long seq {
                get {
                    try {
                        return ((long)(this[this.tablesqlite_sequence.seqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'seq\' in table \'sqlite_sequence\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesqlite_sequence.seqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsnameNull() {
                return this.IsNull(this.tablesqlite_sequence.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetnameNull() {
                this[this.tablesqlite_sequence.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsseqNull() {
                return this.IsNull(this.tablesqlite_sequence.seqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetseqNull() {
                this[this.tablesqlite_sequence.seqColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T6Row : global::System.Data.DataRow {
            
            private T6DataTable tableT6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal T6Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT6 = ((T6DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BudgetLevel {
                get {
                    try {
                        return ((string)(this[this.tableT6.BudgetLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BudgetLevel\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.BudgetLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DocType {
                get {
                    try {
                        return ((string)(this[this.tableT6.DocTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocType\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.DocTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableT6.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableT6.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BFY {
                get {
                    try {
                        return ((string)(this[this.tableT6.BFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFY\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.BFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableT6.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableT6.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TCN {
                get {
                    try {
                        return ((string)(this[this.tableT6.TCNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCN\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.TCNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Qtr {
                get {
                    try {
                        return ((string)(this[this.tableT6.QtrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qtr\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.QtrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableT6.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableT6.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableT6.ProgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectCode\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.ProgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectName {
                get {
                    try {
                        return ((string)(this[this.tableT6.ProgramProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectName\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.ProgramProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NpmCode {
                get {
                    try {
                        return ((string)(this[this.tableT6.NpmCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NpmCode\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.NpmCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FromTo {
                get {
                    try {
                        return ((string)(this[this.tableT6.FromToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromTo\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.FromToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableT6.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableT6.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'T6\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT6.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBudgetLevelNull() {
                return this.IsNull(this.tableT6.BudgetLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBudgetLevelNull() {
                this[this.tableT6.BudgetLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDocTypeNull() {
                return this.IsNull(this.tableT6.DocTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDocTypeNull() {
                this[this.tableT6.DocTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableT6.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableT6.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableT6.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableT6.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBFYNull() {
                return this.IsNull(this.tableT6.BFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBFYNull() {
                this[this.tableT6.BFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableT6.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableT6.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRCNull() {
                return this.IsNull(this.tableT6.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRCNull() {
                this[this.tableT6.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTCNNull() {
                return this.IsNull(this.tableT6.TCNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTCNNull() {
                this[this.tableT6.TCNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsQtrNull() {
                return this.IsNull(this.tableT6.QtrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetQtrNull() {
                this[this.tableT6.QtrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tableT6.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateNull() {
                this[this.tableT6.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableT6.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tableT6.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectCodeNull() {
                return this.IsNull(this.tableT6.ProgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectCodeNull() {
                this[this.tableT6.ProgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectNameNull() {
                return this.IsNull(this.tableT6.ProgramProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectNameNull() {
                this[this.tableT6.ProgramProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNpmCodeNull() {
                return this.IsNull(this.tableT6.NpmCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNpmCodeNull() {
                this[this.tableT6.NpmCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFromToNull() {
                return this.IsNull(this.tableT6.FromToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFromToNull() {
                this[this.tableT6.FromToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableT6.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableT6.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableT6.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAmountNull() {
                this[this.tableT6.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T7Row : global::System.Data.DataRow {
            
            private T7DataTable tableT7;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal T7Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT7 = ((T7DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BudgetLevel {
                get {
                    try {
                        return ((string)(this[this.tableT7.BudgetLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BudgetLevel\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.BudgetLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DocType {
                get {
                    try {
                        return ((string)(this[this.tableT7.DocTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocType\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.DocTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RPIO {
                get {
                    try {
                        return ((string)(this[this.tableT7.RPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPIO\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.RPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AH {
                get {
                    try {
                        return ((string)(this[this.tableT7.AHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AH\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.AHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BBFY {
                get {
                    try {
                        return ((string)(this[this.tableT7.BBFYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BBFY\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.BBFYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Fund {
                get {
                    try {
                        return ((string)(this[this.tableT7.FundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.FundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Org {
                get {
                    try {
                        return ((string)(this[this.tableT7.OrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Org\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.OrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RC {
                get {
                    try {
                        return ((string)(this[this.tableT7.RCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RC\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.RCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TransferControlNumber {
                get {
                    try {
                        return ((string)(this[this.tableT7.TransferControlNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferControlNumber\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.TransferControlNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Quarter {
                get {
                    try {
                        return ((string)(this[this.tableT7.QuarterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quarter\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.QuarterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableT7.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Purpose {
                get {
                    try {
                        return ((string)(this[this.tableT7.PurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purpose\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.PurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string _From_To {
                get {
                    try {
                        return ((string)(this[this.tableT7._From_ToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'From/To\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7._From_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectCode {
                get {
                    try {
                        return ((string)(this[this.tableT7.ProgramProjectCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectCode\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.ProgramProjectCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProgramProjectName {
                get {
                    try {
                        return ((string)(this[this.tableT7.ProgramProjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramProjectName\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.ProgramProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NpmCode {
                get {
                    try {
                        return ((string)(this[this.tableT7.NpmCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NpmCode\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.NpmCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BOC {
                get {
                    try {
                        return ((string)(this[this.tableT7.BOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BOC\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.BOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableT7.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'T7\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT7.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBudgetLevelNull() {
                return this.IsNull(this.tableT7.BudgetLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBudgetLevelNull() {
                this[this.tableT7.BudgetLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDocTypeNull() {
                return this.IsNull(this.tableT7.DocTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDocTypeNull() {
                this[this.tableT7.DocTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRPIONull() {
                return this.IsNull(this.tableT7.RPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRPIONull() {
                this[this.tableT7.RPIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAHNull() {
                return this.IsNull(this.tableT7.AHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAHNull() {
                this[this.tableT7.AHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBBFYNull() {
                return this.IsNull(this.tableT7.BBFYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBBFYNull() {
                this[this.tableT7.BBFYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFundNull() {
                return this.IsNull(this.tableT7.FundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFundNull() {
                this[this.tableT7.FundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrgNull() {
                return this.IsNull(this.tableT7.OrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrgNull() {
                this[this.tableT7.OrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRCNull() {
                return this.IsNull(this.tableT7.RCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRCNull() {
                this[this.tableT7.RCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTransferControlNumberNull() {
                return this.IsNull(this.tableT7.TransferControlNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTransferControlNumberNull() {
                this[this.tableT7.TransferControlNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsQuarterNull() {
                return this.IsNull(this.tableT7.QuarterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetQuarterNull() {
                this[this.tableT7.QuarterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tableT7.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateNull() {
                this[this.tableT7.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurposeNull() {
                return this.IsNull(this.tableT7.PurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurposeNull() {
                this[this.tableT7.PurposeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Is_From_ToNull() {
                return this.IsNull(this.tableT7._From_ToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Set_From_ToNull() {
                this[this.tableT7._From_ToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectCodeNull() {
                return this.IsNull(this.tableT7.ProgramProjectCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectCodeNull() {
                this[this.tableT7.ProgramProjectCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgramProjectNameNull() {
                return this.IsNull(this.tableT7.ProgramProjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgramProjectNameNull() {
                this[this.tableT7.ProgramProjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNpmCodeNull() {
                return this.IsNull(this.tableT7.NpmCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNpmCodeNull() {
                this[this.tableT7.NpmCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBOCNull() {
                return this.IsNull(this.tableT7.BOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBOCNull() {
                this[this.tableT7.BOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tableT7.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAmountNull() {
                this[this.tableT7.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class A6RowChangeEvent : global::System.EventArgs {
            
            private A6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public A6RowChangeEvent(A6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public A6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class B6RowChangeEvent : global::System.EventArgs {
            
            private B6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public B6RowChangeEvent(B6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public B6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class E1RowChangeEvent : global::System.EventArgs {
            
            private E1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public E1RowChangeEvent(E1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public E1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class F6RowChangeEvent : global::System.EventArgs {
            
            private F6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public F6RowChangeEvent(F6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public F6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class O6RowChangeEvent : global::System.EventArgs {
            
            private O6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O6RowChangeEvent(O6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class O7RowChangeEvent : global::System.EventArgs {
            
            private O7Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O7RowChangeEvent(O7Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O7Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class O8RowChangeEvent : global::System.EventArgs {
            
            private O8Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O8RowChangeEvent(O8Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public O8Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class P6RowChangeEvent : global::System.EventArgs {
            
            private P6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P6RowChangeEvent(P6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class P7RowChangeEvent : global::System.EventArgs {
            
            private P7Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P7RowChangeEvent(P7Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P7Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class P8RowChangeEvent : global::System.EventArgs {
            
            private P8Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P8RowChangeEvent(P8Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public P8Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class S6RowChangeEvent : global::System.EventArgs {
            
            private S6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public S6RowChangeEvent(S6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public S6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class sqlite_sequenceRowChangeEvent : global::System.EventArgs {
            
            private sqlite_sequenceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public sqlite_sequenceRowChangeEvent(sqlite_sequenceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public sqlite_sequenceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class T6RowChangeEvent : global::System.EventArgs {
            
            private T6Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T6RowChangeEvent(T6Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T6Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class T7RowChangeEvent : global::System.EventArgs {
            
            private T7Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T7RowChangeEvent(T7Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public T7Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Ninja.R6TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class A6TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public A6TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "A6";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("BFY", "BFY");
            tableMapping.ColumnMappings.Add("RPIO", "RPIO");
            tableMapping.ColumnMappings.Add("Fund", "Fund");
            tableMapping.ColumnMappings.Add("FundName", "FundName");
            tableMapping.ColumnMappings.Add("NPM", "NPM");
            tableMapping.ColumnMappings.Add("NpmName", "NpmName");
            tableMapping.ColumnMappings.Add("AH", "AH");
            tableMapping.ColumnMappings.Add("AhName", "AhName");
            tableMapping.ColumnMappings.Add("AHRC", "AHRC");
            tableMapping.ColumnMappings.Add("AhrcName", "AhrcName");
            tableMapping.ColumnMappings.Add("Org", "Org");
            tableMapping.ColumnMappings.Add("OrgName", "OrgName");
            tableMapping.ColumnMappings.Add("PrcOrgCode", "PrcOrgCode");
            tableMapping.ColumnMappings.Add("PrcOrgName", "PrcOrgName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("PrgramProjectCode", "PrgramProjectCode");
            tableMapping.ColumnMappings.Add("ProgramProjectName", "ProgramProjectName");
            tableMapping.ColumnMappings.Add("RpioActivityCode", "RpioActivityCode");
            tableMapping.ColumnMappings.Add("ProgramArea", "ProgramArea");
            tableMapping.ColumnMappings.Add("ProgramAreaName", "ProgramAreaName");
            tableMapping.ColumnMappings.Add("BOC", "BOC");
            tableMapping.ColumnMappings.Add("BocName", "BocName");
            tableMapping.ColumnMappings.Add("FOC", "FOC");
            tableMapping.ColumnMappings.Add("FocName", "FocName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"main\".\"A6\" WHERE ((\"Id\" = :Original_Id) AND ((:IsNull_BFY = 1 AND \"B" +
                "FY\" IS NULL) OR (\"BFY\" = :Original_BFY)) AND ((:IsNull_RPIO = 1 AND \"RPIO\" IS NU" +
                "LL) OR (\"RPIO\" = :Original_RPIO)) AND ((:IsNull_Fund = 1 AND \"Fund\" IS NULL) OR " +
                "(\"Fund\" = :Original_Fund)) AND ((:IsNull_FundName = 1 AND \"FundName\" IS NULL) OR" +
                " (\"FundName\" = :Original_FundName)) AND ((:IsNull_NPM = 1 AND \"NPM\" IS NULL) OR " +
                "(\"NPM\" = :Original_NPM)) AND ((:IsNull_NpmName = 1 AND \"NpmName\" IS NULL) OR (\"N" +
                "pmName\" = :Original_NpmName)) AND ((:IsNull_AH = 1 AND \"AH\" IS NULL) OR (\"AH\" = " +
                ":Original_AH)) AND ((:IsNull_AhName = 1 AND \"AhName\" IS NULL) OR (\"AhName\" = :Or" +
                "iginal_AhName)) AND ((:IsNull_AHRC = 1 AND \"AHRC\" IS NULL) OR (\"AHRC\" = :Origina" +
                "l_AHRC)) AND ((:IsNull_AhrcName = 1 AND \"AhrcName\" IS NULL) OR (\"AhrcName\" = :Or" +
                "iginal_AhrcName)) AND ((:IsNull_Org = 1 AND \"Org\" IS NULL) OR (\"Org\" = :Original" +
                "_Org)) AND ((:IsNull_OrgName = 1 AND \"OrgName\" IS NULL) OR (\"OrgName\" = :Origina" +
                "l_OrgName)) AND ((:IsNull_PrcOrgCode = 1 AND \"PrcOrgCode\" IS NULL) OR (\"PrcOrgCo" +
                "de\" = :Original_PrcOrgCode)) AND ((:IsNull_PrcOrgName = 1 AND \"PrcOrgName\" IS NU" +
                "LL) OR (\"PrcOrgName\" = :Original_PrcOrgName)) AND ((:IsNull_Code = 1 AND \"Code\" " +
                "IS NULL) OR (\"Code\" = :Original_Code)) AND ((:IsNull_PrgramProjectCode = 1 AND \"" +
                "PrgramProjectCode\" IS NULL) OR (\"PrgramProjectCode\" = :Original_PrgramProjectCod" +
                "e)) AND ((:IsNull_ProgramProjectName = 1 AND \"ProgramProjectName\" IS NULL) OR (\"" +
                "ProgramProjectName\" = :Original_ProgramProjectName)) AND ((:IsNull_RpioActivityC" +
                "ode = 1 AND \"RpioActivityCode\" IS NULL) OR (\"RpioActivityCode\" = :Original_RpioA" +
                "ctivityCode)) AND ((:IsNull_ProgramArea = 1 AND \"ProgramArea\" IS NULL) OR (\"Prog" +
                "ramArea\" = :Original_ProgramArea)) AND ((:IsNull_ProgramAreaName = 1 AND \"Progra" +
                "mAreaName\" IS NULL) OR (\"ProgramAreaName\" = :Original_ProgramAreaName)) AND ((:I" +
                "sNull_BOC = 1 AND \"BOC\" IS NULL) OR (\"BOC\" = :Original_BOC)) AND ((:IsNull_BocNa" +
                "me = 1 AND \"BocName\" IS NULL) OR (\"BocName\" = :Original_BocName)) AND ((:IsNull_" +
                "FOC = 1 AND \"FOC\" IS NULL) OR (\"FOC\" = :Original_FOC)) AND ((:IsNull_FocName = 1" +
                " AND \"FocName\" IS NULL) OR (\"FocName\" = :Original_FocName)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BFY";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_RPIO";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Fund";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FundName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_NPM";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_NpmName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NpmName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_NpmName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_AH";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_AH";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_AhName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AhName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_AhName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AhName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_AHRC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AHRC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_AHRC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AHRC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_AhrcName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AhrcName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_AhrcName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AhrcName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Org";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_OrgName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "OrgName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_OrgName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OrgName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_PrcOrgCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_PrcOrgCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_PrcOrgName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_PrcOrgName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_PrgramProjectCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PrgramProjectCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_PrgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrgramProjectCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramProjectName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_RpioActivityCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RpioActivityCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_RpioActivityCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RpioActivityCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramArea";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramAreaName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""A6"" (""Id"", ""BFY"", ""RPIO"", ""Fund"", ""FundName"", ""NPM"", ""NpmName"", ""AH"", ""AhName"", ""AHRC"", ""AhrcName"", ""Org"", ""OrgName"", ""PrcOrgCode"", ""PrcOrgName"", ""Code"", ""PrgramProjectCode"", ""ProgramProjectName"", ""RpioActivityCode"", ""ProgramArea"", ""ProgramAreaName"", ""BOC"", ""BocName"", ""FOC"", ""FocName"") VALUES (:Id, :BFY, :RPIO, :Fund, :FundName, :NPM, :NpmName, :AH, :AhName, :AHRC, :AhrcName, :Org, :OrgName, :PrcOrgCode, :PrcOrgName, :Code, :PrgramProjectCode, :ProgramProjectName, :RpioActivityCode, :ProgramArea, :ProgramAreaName, :BOC, :BocName, :FOC, :FocName)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NpmName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "AH";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "AhName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AhName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "AHRC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AHRC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "AhrcName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AhrcName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "OrgName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OrgName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "PrcOrgCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "PrcOrgName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "PrgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrgramProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RpioActivityCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RpioActivityCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"A6\" SET \"Id\" = :Id, \"BFY\" = :BFY, \"RPIO\" = :RPIO, \"Fund\" = :Fund, " +
                "\"FundName\" = :FundName, \"NPM\" = :NPM, \"NpmName\" = :NpmName, \"AH\" = :AH, \"AhName\"" +
                " = :AhName, \"AHRC\" = :AHRC, \"AhrcName\" = :AhrcName, \"Org\" = :Org, \"OrgName\" = :O" +
                "rgName, \"PrcOrgCode\" = :PrcOrgCode, \"PrcOrgName\" = :PrcOrgName, \"Code\" = :Code, " +
                "\"PrgramProjectCode\" = :PrgramProjectCode, \"ProgramProjectName\" = :ProgramProject" +
                "Name, \"RpioActivityCode\" = :RpioActivityCode, \"ProgramArea\" = :ProgramArea, \"Pro" +
                "gramAreaName\" = :ProgramAreaName, \"BOC\" = :BOC, \"BocName\" = :BocName, \"FOC\" = :F" +
                "OC, \"FocName\" = :FocName WHERE ((\"Id\" = :Original_Id) AND ((:IsNull_BFY = 1 AND " +
                "\"BFY\" IS NULL) OR (\"BFY\" = :Original_BFY)) AND ((:IsNull_RPIO = 1 AND \"RPIO\" IS " +
                "NULL) OR (\"RPIO\" = :Original_RPIO)) AND ((:IsNull_Fund = 1 AND \"Fund\" IS NULL) O" +
                "R (\"Fund\" = :Original_Fund)) AND ((:IsNull_FundName = 1 AND \"FundName\" IS NULL) " +
                "OR (\"FundName\" = :Original_FundName)) AND ((:IsNull_NPM = 1 AND \"NPM\" IS NULL) O" +
                "R (\"NPM\" = :Original_NPM)) AND ((:IsNull_NpmName = 1 AND \"NpmName\" IS NULL) OR (" +
                "\"NpmName\" = :Original_NpmName)) AND ((:IsNull_AH = 1 AND \"AH\" IS NULL) OR (\"AH\" " +
                "= :Original_AH)) AND ((:IsNull_AhName = 1 AND \"AhName\" IS NULL) OR (\"AhName\" = :" +
                "Original_AhName)) AND ((:IsNull_AHRC = 1 AND \"AHRC\" IS NULL) OR (\"AHRC\" = :Origi" +
                "nal_AHRC)) AND ((:IsNull_AhrcName = 1 AND \"AhrcName\" IS NULL) OR (\"AhrcName\" = :" +
                "Original_AhrcName)) AND ((:IsNull_Org = 1 AND \"Org\" IS NULL) OR (\"Org\" = :Origin" +
                "al_Org)) AND ((:IsNull_OrgName = 1 AND \"OrgName\" IS NULL) OR (\"OrgName\" = :Origi" +
                "nal_OrgName)) AND ((:IsNull_PrcOrgCode = 1 AND \"PrcOrgCode\" IS NULL) OR (\"PrcOrg" +
                "Code\" = :Original_PrcOrgCode)) AND ((:IsNull_PrcOrgName = 1 AND \"PrcOrgName\" IS " +
                "NULL) OR (\"PrcOrgName\" = :Original_PrcOrgName)) AND ((:IsNull_Code = 1 AND \"Code" +
                "\" IS NULL) OR (\"Code\" = :Original_Code)) AND ((:IsNull_PrgramProjectCode = 1 AND" +
                " \"PrgramProjectCode\" IS NULL) OR (\"PrgramProjectCode\" = :Original_PrgramProjectC" +
                "ode)) AND ((:IsNull_ProgramProjectName = 1 AND \"ProgramProjectName\" IS NULL) OR " +
                "(\"ProgramProjectName\" = :Original_ProgramProjectName)) AND ((:IsNull_RpioActivit" +
                "yCode = 1 AND \"RpioActivityCode\" IS NULL) OR (\"RpioActivityCode\" = :Original_Rpi" +
                "oActivityCode)) AND ((:IsNull_ProgramArea = 1 AND \"ProgramArea\" IS NULL) OR (\"Pr" +
                "ogramArea\" = :Original_ProgramArea)) AND ((:IsNull_ProgramAreaName = 1 AND \"Prog" +
                "ramAreaName\" IS NULL) OR (\"ProgramAreaName\" = :Original_ProgramAreaName)) AND ((" +
                ":IsNull_BOC = 1 AND \"BOC\" IS NULL) OR (\"BOC\" = :Original_BOC)) AND ((:IsNull_Boc" +
                "Name = 1 AND \"BocName\" IS NULL) OR (\"BocName\" = :Original_BocName)) AND ((:IsNul" +
                "l_FOC = 1 AND \"FOC\" IS NULL) OR (\"FOC\" = :Original_FOC)) AND ((:IsNull_FocName =" +
                " 1 AND \"FocName\" IS NULL) OR (\"FocName\" = :Original_FocName)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NpmName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "AH";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AH";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "AhName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AhName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "AHRC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AHRC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "AhrcName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AhrcName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "OrgName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OrgName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "PrcOrgCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "PrcOrgName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "PrgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrgramProjectCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RpioActivityCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RpioActivityCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BFY";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_RPIO";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Fund";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FundName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_NPM";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_NpmName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NpmName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_NpmName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_AH";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_AH";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_AhName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AhName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_AhName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AhName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_AHRC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AHRC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_AHRC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AHRC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_AhrcName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AhrcName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_AhrcName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "AhrcName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Org";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_OrgName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "OrgName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_OrgName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OrgName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_PrcOrgCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_PrcOrgCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_PrcOrgName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_PrcOrgName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrcOrgName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_PrgramProjectCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "PrgramProjectCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_PrgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PrgramProjectCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramProjectName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_RpioActivityCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RpioActivityCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_RpioActivityCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RpioActivityCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramArea";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramAreaName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, BFY, RPIO, Fund, FundName, NPM, NpmName, AH, AhName, AHRC, AhrcName, O" +
                "rg, OrgName, PrcOrgCode, PrcOrgName, Code, PrgramProjectCode, ProgramProjectName" +
                ", RpioActivityCode, ProgramArea, ProgramAreaName, BOC, BocName, FOC, FocName FRO" +
                "M \"main\".A6";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.A6DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.A6DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.A6DataTable dataTable = new R6.A6DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.A6DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "A6");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_Id, 
                    string Original_BFY, 
                    string Original_RPIO, 
                    string Original_Fund, 
                    string Original_FundName, 
                    string Original_NPM, 
                    string Original_NpmName, 
                    string Original_AH, 
                    string Original_AhName, 
                    string Original_AHRC, 
                    string Original_AhrcName, 
                    string Original_Org, 
                    string Original_OrgName, 
                    string Original_PrcOrgCode, 
                    string Original_PrcOrgName, 
                    string Original_Code, 
                    string Original_PrgramProjectCode, 
                    string Original_ProgramProjectName, 
                    string Original_RpioActivityCode, 
                    string Original_ProgramArea, 
                    string Original_ProgramAreaName, 
                    string Original_BOC, 
                    string Original_BocName, 
                    string Original_FOC, 
                    string Original_FocName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Id));
            if ((Original_BFY == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_BFY));
            }
            if ((Original_RPIO == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_RPIO));
            }
            if ((Original_Fund == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Fund));
            }
            if ((Original_FundName == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_FundName));
            }
            if ((Original_NPM == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_NPM));
            }
            if ((Original_NpmName == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_NpmName));
            }
            if ((Original_AH == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_AH));
            }
            if ((Original_AhName == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_AhName));
            }
            if ((Original_AHRC == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_AHRC));
            }
            if ((Original_AhrcName == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_AhrcName));
            }
            if ((Original_Org == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Org));
            }
            if ((Original_OrgName == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_OrgName));
            }
            if ((Original_PrcOrgCode == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_PrcOrgCode));
            }
            if ((Original_PrcOrgName == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_PrcOrgName));
            }
            if ((Original_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_Code));
            }
            if ((Original_PrgramProjectCode == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_PrgramProjectCode));
            }
            if ((Original_ProgramProjectName == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ProgramProjectName));
            }
            if ((Original_RpioActivityCode == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_RpioActivityCode));
            }
            if ((Original_ProgramArea == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_ProgramArea));
            }
            if ((Original_ProgramAreaName == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_ProgramAreaName));
            }
            if ((Original_BOC == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_BOC));
            }
            if ((Original_BocName == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_BocName));
            }
            if ((Original_FOC == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_FOC));
            }
            if ((Original_FocName == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_FocName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long Id, 
                    string BFY, 
                    string RPIO, 
                    string Fund, 
                    string FundName, 
                    string NPM, 
                    string NpmName, 
                    string AH, 
                    string AhName, 
                    string AHRC, 
                    string AhrcName, 
                    string Org, 
                    string OrgName, 
                    string PrcOrgCode, 
                    string PrcOrgName, 
                    string Code, 
                    string PrgramProjectCode, 
                    string ProgramProjectName, 
                    string RpioActivityCode, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string BOC, 
                    string BocName, 
                    string FOC, 
                    string FocName) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Id));
            if ((BFY == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BFY));
            }
            if ((RPIO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RPIO));
            }
            if ((Fund == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Fund));
            }
            if ((FundName == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FundName));
            }
            if ((NPM == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NPM));
            }
            if ((NpmName == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NpmName));
            }
            if ((AH == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(AH));
            }
            if ((AhName == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(AhName));
            }
            if ((AHRC == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(AHRC));
            }
            if ((AhrcName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(AhrcName));
            }
            if ((Org == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Org));
            }
            if ((OrgName == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(OrgName));
            }
            if ((PrcOrgCode == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(PrcOrgCode));
            }
            if ((PrcOrgName == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(PrcOrgName));
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Code));
            }
            if ((PrgramProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PrgramProjectCode));
            }
            if ((ProgramProjectName == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ProgramProjectName));
            }
            if ((RpioActivityCode == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(RpioActivityCode));
            }
            if ((ProgramArea == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(ProgramArea));
            }
            if ((ProgramAreaName == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ProgramAreaName));
            }
            if ((BOC == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(BOC));
            }
            if ((BocName == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(BocName));
            }
            if ((FOC == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(FOC));
            }
            if ((FocName == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(FocName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Id, 
                    string BFY, 
                    string RPIO, 
                    string Fund, 
                    string FundName, 
                    string NPM, 
                    string NpmName, 
                    string AH, 
                    string AhName, 
                    string AHRC, 
                    string AhrcName, 
                    string Org, 
                    string OrgName, 
                    string PrcOrgCode, 
                    string PrcOrgName, 
                    string Code, 
                    string PrgramProjectCode, 
                    string ProgramProjectName, 
                    string RpioActivityCode, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string BOC, 
                    string BocName, 
                    string FOC, 
                    string FocName, 
                    long Original_Id, 
                    string Original_BFY, 
                    string Original_RPIO, 
                    string Original_Fund, 
                    string Original_FundName, 
                    string Original_NPM, 
                    string Original_NpmName, 
                    string Original_AH, 
                    string Original_AhName, 
                    string Original_AHRC, 
                    string Original_AhrcName, 
                    string Original_Org, 
                    string Original_OrgName, 
                    string Original_PrcOrgCode, 
                    string Original_PrcOrgName, 
                    string Original_Code, 
                    string Original_PrgramProjectCode, 
                    string Original_ProgramProjectName, 
                    string Original_RpioActivityCode, 
                    string Original_ProgramArea, 
                    string Original_ProgramAreaName, 
                    string Original_BOC, 
                    string Original_BocName, 
                    string Original_FOC, 
                    string Original_FocName) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Id));
            if ((BFY == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BFY));
            }
            if ((RPIO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(RPIO));
            }
            if ((Fund == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Fund));
            }
            if ((FundName == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FundName));
            }
            if ((NPM == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NPM));
            }
            if ((NpmName == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NpmName));
            }
            if ((AH == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(AH));
            }
            if ((AhName == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(AhName));
            }
            if ((AHRC == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(AHRC));
            }
            if ((AhrcName == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(AhrcName));
            }
            if ((Org == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Org));
            }
            if ((OrgName == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(OrgName));
            }
            if ((PrcOrgCode == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(PrcOrgCode));
            }
            if ((PrcOrgName == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(PrcOrgName));
            }
            if ((Code == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Code));
            }
            if ((PrgramProjectCode == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PrgramProjectCode));
            }
            if ((ProgramProjectName == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ProgramProjectName));
            }
            if ((RpioActivityCode == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(RpioActivityCode));
            }
            if ((ProgramArea == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(ProgramArea));
            }
            if ((ProgramAreaName == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ProgramAreaName));
            }
            if ((BOC == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(BOC));
            }
            if ((BocName == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(BocName));
            }
            if ((FOC == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(FOC));
            }
            if ((FocName == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(FocName));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((long)(Original_Id));
            if ((Original_BFY == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_BFY));
            }
            if ((Original_RPIO == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_RPIO));
            }
            if ((Original_Fund == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Fund));
            }
            if ((Original_FundName == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_FundName));
            }
            if ((Original_NPM == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_NPM));
            }
            if ((Original_NpmName == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_NpmName));
            }
            if ((Original_AH == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_AH));
            }
            if ((Original_AhName == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_AhName));
            }
            if ((Original_AHRC == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_AHRC));
            }
            if ((Original_AhrcName == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_AhrcName));
            }
            if ((Original_Org == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Org));
            }
            if ((Original_OrgName == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_OrgName));
            }
            if ((Original_PrcOrgCode == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_PrcOrgCode));
            }
            if ((Original_PrcOrgName == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_PrcOrgName));
            }
            if ((Original_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_Code));
            }
            if ((Original_PrgramProjectCode == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_PrgramProjectCode));
            }
            if ((Original_ProgramProjectName == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_ProgramProjectName));
            }
            if ((Original_RpioActivityCode == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_RpioActivityCode));
            }
            if ((Original_ProgramArea == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_ProgramArea));
            }
            if ((Original_ProgramAreaName == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_ProgramAreaName));
            }
            if ((Original_BOC == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_BOC));
            }
            if ((Original_BocName == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_BocName));
            }
            if ((Original_FOC == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_FOC));
            }
            if ((Original_FocName == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_FocName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BFY, 
                    string RPIO, 
                    string Fund, 
                    string FundName, 
                    string NPM, 
                    string NpmName, 
                    string AH, 
                    string AhName, 
                    string AHRC, 
                    string AhrcName, 
                    string Org, 
                    string OrgName, 
                    string PrcOrgCode, 
                    string PrcOrgName, 
                    string Code, 
                    string PrgramProjectCode, 
                    string ProgramProjectName, 
                    string RpioActivityCode, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string BOC, 
                    string BocName, 
                    string FOC, 
                    string FocName, 
                    long Original_Id, 
                    string Original_BFY, 
                    string Original_RPIO, 
                    string Original_Fund, 
                    string Original_FundName, 
                    string Original_NPM, 
                    string Original_NpmName, 
                    string Original_AH, 
                    string Original_AhName, 
                    string Original_AHRC, 
                    string Original_AhrcName, 
                    string Original_Org, 
                    string Original_OrgName, 
                    string Original_PrcOrgCode, 
                    string Original_PrcOrgName, 
                    string Original_Code, 
                    string Original_PrgramProjectCode, 
                    string Original_ProgramProjectName, 
                    string Original_RpioActivityCode, 
                    string Original_ProgramArea, 
                    string Original_ProgramAreaName, 
                    string Original_BOC, 
                    string Original_BocName, 
                    string Original_FOC, 
                    string Original_FocName) {
            return this.Update(Original_Id, BFY, RPIO, Fund, FundName, NPM, NpmName, AH, AhName, AHRC, AhrcName, Org, OrgName, PrcOrgCode, PrcOrgName, Code, PrgramProjectCode, ProgramProjectName, RpioActivityCode, ProgramArea, ProgramAreaName, BOC, BocName, FOC, FocName, Original_Id, Original_BFY, Original_RPIO, Original_Fund, Original_FundName, Original_NPM, Original_NpmName, Original_AH, Original_AhName, Original_AHRC, Original_AhrcName, Original_Org, Original_OrgName, Original_PrcOrgCode, Original_PrcOrgName, Original_Code, Original_PrgramProjectCode, Original_ProgramProjectName, Original_RpioActivityCode, Original_ProgramArea, Original_ProgramAreaName, Original_BOC, Original_BocName, Original_FOC, Original_FocName);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class B6TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public B6TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "B6";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("ControlNumber", "ControlNumber");
            tableMapping.ColumnMappings.Add("DivsionName", "DivsionName");
            tableMapping.ColumnMappings.Add("FiscalYear", "FiscalYear");
            tableMapping.ColumnMappings.Add("DivisionId", "DivisionId");
            tableMapping.ColumnMappings.Add("Awards", "Awards");
            tableMapping.ColumnMappings.Add("Org", "Org");
            tableMapping.ColumnMappings.Add("OverTime", "OverTime");
            tableMapping.ColumnMappings.Add("TimeOffAwards", "TimeOffAwards");
            tableMapping.ColumnMappings.Add("Training", "Training");
            tableMapping.ColumnMappings.Add("Purpose", "Purpose");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""B6"" WHERE ((""Id"" = :Original_Id) AND ((:IsNull_ControlNumber = 1 AND ""ControlNumber"" IS NULL) OR (""ControlNumber"" = :Original_ControlNumber)) AND ((:IsNull_DivsionName = 1 AND ""DivsionName"" IS NULL) OR (""DivsionName"" = :Original_DivsionName)) AND ((:IsNull_FiscalYear = 1 AND ""FiscalYear"" IS NULL) OR (""FiscalYear"" = :Original_FiscalYear)) AND ((:IsNull_DivisionId = 1 AND ""DivisionId"" IS NULL) OR (""DivisionId"" = :Original_DivisionId)) AND ((:IsNull_Awards = 1 AND ""Awards"" IS NULL) OR (""Awards"" = :Original_Awards)) AND ((:IsNull_Org = 1 AND ""Org"" IS NULL) OR (""Org"" = :Original_Org)) AND ((:IsNull_OverTime = 1 AND ""OverTime"" IS NULL) OR (""OverTime"" = :Original_OverTime)) AND ((:IsNull_TimeOffAwards = 1 AND ""TimeOffAwards"" IS NULL) OR (""TimeOffAwards"" = :Original_TimeOffAwards)) AND ((:IsNull_Training = 1 AND ""Training"" IS NULL) OR (""Training"" = :Original_Training)) AND ((:IsNull_Purpose = 1 AND ""Purpose"" IS NULL) OR (""Purpose"" = :Original_Purpose)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ControlNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ControlNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ControlNumber";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ControlNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_DivsionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DivsionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_DivsionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivsionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FiscalYear";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FiscalYear";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FiscalYear";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FiscalYear";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_DivisionId";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DivisionId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_DivisionId";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Awards";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Awards";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Awards";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Awards";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Org";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_OverTime";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "OverTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_OverTime";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OverTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_TimeOffAwards";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TimeOffAwards";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_TimeOffAwards";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "TimeOffAwards";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Training";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Training";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Training";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Training";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Purpose";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Purpose";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Purpose";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Purpose";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""B6"" (""Id"", ""ControlNumber"", ""DivsionName"", ""FiscalYear"", ""DivisionId"", ""Awards"", ""Org"", ""OverTime"", ""TimeOffAwards"", ""Training"", ""Purpose"") VALUES (:Id, :ControlNumber, :DivsionName, :FiscalYear, :DivisionId, :Awards, :Org, :OverTime, :TimeOffAwards, :Training, :Purpose)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ControlNumber";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ControlNumber";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DivsionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivsionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FiscalYear";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FiscalYear";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DivisionId";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Awards";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Awards";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "OverTime";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OverTime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "TimeOffAwards";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "TimeOffAwards";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Training";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Training";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Purpose";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Purpose";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""main"".""B6"" SET ""Id"" = :Id, ""ControlNumber"" = :ControlNumber, ""DivsionName"" = :DivsionName, ""FiscalYear"" = :FiscalYear, ""DivisionId"" = :DivisionId, ""Awards"" = :Awards, ""Org"" = :Org, ""OverTime"" = :OverTime, ""TimeOffAwards"" = :TimeOffAwards, ""Training"" = :Training, ""Purpose"" = :Purpose WHERE ((""Id"" = :Original_Id) AND ((:IsNull_ControlNumber = 1 AND ""ControlNumber"" IS NULL) OR (""ControlNumber"" = :Original_ControlNumber)) AND ((:IsNull_DivsionName = 1 AND ""DivsionName"" IS NULL) OR (""DivsionName"" = :Original_DivsionName)) AND ((:IsNull_FiscalYear = 1 AND ""FiscalYear"" IS NULL) OR (""FiscalYear"" = :Original_FiscalYear)) AND ((:IsNull_DivisionId = 1 AND ""DivisionId"" IS NULL) OR (""DivisionId"" = :Original_DivisionId)) AND ((:IsNull_Awards = 1 AND ""Awards"" IS NULL) OR (""Awards"" = :Original_Awards)) AND ((:IsNull_Org = 1 AND ""Org"" IS NULL) OR (""Org"" = :Original_Org)) AND ((:IsNull_OverTime = 1 AND ""OverTime"" IS NULL) OR (""OverTime"" = :Original_OverTime)) AND ((:IsNull_TimeOffAwards = 1 AND ""TimeOffAwards"" IS NULL) OR (""TimeOffAwards"" = :Original_TimeOffAwards)) AND ((:IsNull_Training = 1 AND ""Training"" IS NULL) OR (""Training"" = :Original_Training)) AND ((:IsNull_Purpose = 1 AND ""Purpose"" IS NULL) OR (""Purpose"" = :Original_Purpose)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ControlNumber";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ControlNumber";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DivsionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivsionName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FiscalYear";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FiscalYear";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DivisionId";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionId";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Awards";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Awards";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "OverTime";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OverTime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "TimeOffAwards";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "TimeOffAwards";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Training";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Training";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Purpose";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Purpose";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ControlNumber";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ControlNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ControlNumber";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ControlNumber";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_DivsionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DivsionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_DivsionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivsionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FiscalYear";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FiscalYear";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FiscalYear";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FiscalYear";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_DivisionId";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DivisionId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_DivisionId";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionId";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Awards";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Awards";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Awards";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Awards";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Org";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_OverTime";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "OverTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_OverTime";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OverTime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_TimeOffAwards";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TimeOffAwards";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_TimeOffAwards";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "TimeOffAwards";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Training";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Training";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Training";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Training";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Purpose";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Purpose";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Purpose";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Purpose";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, ControlNumber, DivsionName, FiscalYear, DivisionId, Awards, Org, OverT" +
                "ime, TimeOffAwards, Training, Purpose FROM \"main\".B6";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.B6DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.B6DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.B6DataTable dataTable = new R6.B6DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.B6DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "B6");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_Id, string Original_ControlNumber, string Original_DivsionName, string Original_FiscalYear, string Original_DivisionId, string Original_Awards, string Original_Org, string Original_OverTime, string Original_TimeOffAwards, string Original_Training, string Original_Purpose) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Id));
            if ((Original_ControlNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ControlNumber));
            }
            if ((Original_DivsionName == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DivsionName));
            }
            if ((Original_FiscalYear == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FiscalYear));
            }
            if ((Original_DivisionId == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DivisionId));
            }
            if ((Original_Awards == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Awards));
            }
            if ((Original_Org == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Org));
            }
            if ((Original_OverTime == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_OverTime));
            }
            if ((Original_TimeOffAwards == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TimeOffAwards));
            }
            if ((Original_Training == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Training));
            }
            if ((Original_Purpose == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Purpose));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long Id, string ControlNumber, string DivsionName, string FiscalYear, string DivisionId, string Awards, string Org, string OverTime, string TimeOffAwards, string Training, string Purpose) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Id));
            if ((ControlNumber == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ControlNumber));
            }
            if ((DivsionName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DivsionName));
            }
            if ((FiscalYear == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FiscalYear));
            }
            if ((DivisionId == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DivisionId));
            }
            if ((Awards == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Awards));
            }
            if ((Org == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Org));
            }
            if ((OverTime == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(OverTime));
            }
            if ((TimeOffAwards == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(TimeOffAwards));
            }
            if ((Training == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Training));
            }
            if ((Purpose == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Purpose));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Id, 
                    string ControlNumber, 
                    string DivsionName, 
                    string FiscalYear, 
                    string DivisionId, 
                    string Awards, 
                    string Org, 
                    string OverTime, 
                    string TimeOffAwards, 
                    string Training, 
                    string Purpose, 
                    long Original_Id, 
                    string Original_ControlNumber, 
                    string Original_DivsionName, 
                    string Original_FiscalYear, 
                    string Original_DivisionId, 
                    string Original_Awards, 
                    string Original_Org, 
                    string Original_OverTime, 
                    string Original_TimeOffAwards, 
                    string Original_Training, 
                    string Original_Purpose) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Id));
            if ((ControlNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ControlNumber));
            }
            if ((DivsionName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DivsionName));
            }
            if ((FiscalYear == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FiscalYear));
            }
            if ((DivisionId == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DivisionId));
            }
            if ((Awards == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Awards));
            }
            if ((Org == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Org));
            }
            if ((OverTime == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(OverTime));
            }
            if ((TimeOffAwards == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(TimeOffAwards));
            }
            if ((Training == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Training));
            }
            if ((Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Purpose));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(Original_Id));
            if ((Original_ControlNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ControlNumber));
            }
            if ((Original_DivsionName == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_DivsionName));
            }
            if ((Original_FiscalYear == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_FiscalYear));
            }
            if ((Original_DivisionId == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_DivisionId));
            }
            if ((Original_Awards == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Awards));
            }
            if ((Original_Org == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Org));
            }
            if ((Original_OverTime == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_OverTime));
            }
            if ((Original_TimeOffAwards == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_TimeOffAwards));
            }
            if ((Original_Training == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Training));
            }
            if ((Original_Purpose == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Purpose));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ControlNumber, 
                    string DivsionName, 
                    string FiscalYear, 
                    string DivisionId, 
                    string Awards, 
                    string Org, 
                    string OverTime, 
                    string TimeOffAwards, 
                    string Training, 
                    string Purpose, 
                    long Original_Id, 
                    string Original_ControlNumber, 
                    string Original_DivsionName, 
                    string Original_FiscalYear, 
                    string Original_DivisionId, 
                    string Original_Awards, 
                    string Original_Org, 
                    string Original_OverTime, 
                    string Original_TimeOffAwards, 
                    string Original_Training, 
                    string Original_Purpose) {
            return this.Update(Original_Id, ControlNumber, DivsionName, FiscalYear, DivisionId, Awards, Org, OverTime, TimeOffAwards, Training, Purpose, Original_Id, Original_ControlNumber, Original_DivsionName, Original_FiscalYear, Original_DivisionId, Original_Awards, Original_Org, Original_OverTime, Original_TimeOffAwards, Original_Training, Original_Purpose);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class E1TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public E1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "E1";
            tableMapping.ColumnMappings.Add("EmployId", "EmployId");
            tableMapping.ColumnMappings.Add("HrOrgCode", "HrOrgCode");
            tableMapping.ColumnMappings.Add("HrOrgCodeName", "HrOrgCodeName");
            tableMapping.ColumnMappings.Add("WorkCode", "WorkCode");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("LeaveType", "LeaveType");
            tableMapping.ColumnMappings.Add("HoursCurrent", "HoursCurrent");
            tableMapping.ColumnMappings.Add("HoursTotal", "HoursTotal");
            tableMapping.ColumnMappings.Add("HoursProjected", "HoursProjected");
            tableMapping.ColumnMappings.Add("HoursUseLose", "HoursUseLose");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""E1"" (""EmployId"", ""HrOrgCode"", ""HrOrgCodeName"", ""WorkCode"", ""FirstName"", ""LastName"", ""LeaveType"", ""HoursCurrent"", ""HoursTotal"", ""HoursProjected"", ""HoursUseLose"") VALUES (:EmployId, :HrOrgCode, :HrOrgCodeName, :WorkCode, :FirstName, :LastName, :LeaveType, :HoursCurrent, :HoursTotal, :HoursProjected, :HoursUseLose)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "EmployId";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "EmployId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "HrOrgCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "HrOrgCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "HrOrgCodeName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "HrOrgCodeName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "WorkCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "WorkCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FirstName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FirstName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "LastName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "LastName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "LeaveType";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "LeaveType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "HoursCurrent";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HoursCurrent";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "HoursTotal";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HoursTotal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "HoursProjected";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HoursProjected";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "HoursUseLose";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HoursUseLose";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EmployId, HrOrgCode, HrOrgCodeName, WorkCode, FirstName, LastName, LeaveTy" +
                "pe, HoursCurrent, HoursTotal, HoursProjected, HoursUseLose FROM \"main\".E1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.E1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.E1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.E1DataTable dataTable = new R6.E1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.E1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "E1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EmployId, string HrOrgCode, string HrOrgCodeName, string WorkCode, string FirstName, string LastName, string LeaveType, global::System.Nullable<double> HoursCurrent, global::System.Nullable<double> HoursTotal, global::System.Nullable<double> HoursProjected, global::System.Nullable<double> HoursUseLose) {
            if ((EmployId == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EmployId));
            }
            if ((HrOrgCode == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(HrOrgCode));
            }
            if ((HrOrgCodeName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(HrOrgCodeName));
            }
            if ((WorkCode == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(WorkCode));
            }
            if ((FirstName == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LastName));
            }
            if ((LeaveType == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(LeaveType));
            }
            if ((HoursCurrent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(HoursCurrent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((HoursTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(HoursTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HoursProjected.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(HoursProjected.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((HoursUseLose.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(HoursUseLose.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class F6TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public F6TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "F6";
            tableMapping.ColumnMappings.Add("BOC", "BOC");
            tableMapping.ColumnMappings.Add("BocName", "BocName");
            tableMapping.ColumnMappings.Add("FOC", "FOC");
            tableMapping.ColumnMappings.Add("FocName", "FocName");
            tableMapping.ColumnMappings.Add("Id", "Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""main"".""F6"" WHERE (((:IsNull_BOC = 1 AND ""BOC"" IS NULL) OR (""BOC"" = :Original_BOC)) AND ((:IsNull_BocName = 1 AND ""BocName"" IS NULL) OR (""BocName"" = :Original_BocName)) AND ((:IsNull_FOC = 1 AND ""FOC"" IS NULL) OR (""FOC"" = :Original_FOC)) AND ((:IsNull_FocName = 1 AND ""FocName"" IS NULL) OR (""FocName"" = :Original_FocName)) AND (""Id"" = :Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"F6\" (\"BOC\", \"BocName\", \"FOC\", \"FocName\", \"Id\") VALUES (:BOC, " +
                ":BocName, :FOC, :FocName, :Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""main"".""F6"" SET ""BOC"" = :BOC, ""BocName"" = :BocName, ""FOC"" = :FOC, ""FocName"" = :FocName, ""Id"" = :Id WHERE (((:IsNull_BOC = 1 AND ""BOC"" IS NULL) OR (""BOC"" = :Original_BOC)) AND ((:IsNull_BocName = 1 AND ""BocName"" IS NULL) OR (""BocName"" = :Original_BocName)) AND ((:IsNull_FOC = 1 AND ""FOC"" IS NULL) OR (""FOC"" = :Original_FOC)) AND ((:IsNull_FocName = 1 AND ""FocName"" IS NULL) OR (""FocName"" = :Original_FocName)) AND (""Id"" = :Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BOC, BocName, FOC, FocName, Id FROM \"main\".F6";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.F6DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.F6DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.F6DataTable dataTable = new R6.F6DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.F6DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "F6");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_BOC, string Original_BocName, string Original_FOC, string Original_FocName, long Original_Id) {
            if ((Original_BOC == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_BOC));
            }
            if ((Original_BocName == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_BocName));
            }
            if ((Original_FOC == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_FOC));
            }
            if ((Original_FocName == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_FocName));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((long)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string BOC, string BocName, string FOC, string FocName, long Id) {
            if ((BOC == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BOC));
            }
            if ((BocName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BocName));
            }
            if ((FOC == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FOC));
            }
            if ((FocName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FocName));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string BOC, string BocName, string FOC, string FocName, long Id, string Original_BOC, string Original_BocName, string Original_FOC, string Original_FocName, long Original_Id) {
            if ((BOC == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BOC));
            }
            if ((BocName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BocName));
            }
            if ((FOC == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FOC));
            }
            if ((FocName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FocName));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(Id));
            if ((Original_BOC == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_BOC));
            }
            if ((Original_BocName == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_BocName));
            }
            if ((Original_FOC == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_FOC));
            }
            if ((Original_FocName == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_FocName));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string BOC, string BocName, string FOC, string FocName, string Original_BOC, string Original_BocName, string Original_FOC, string Original_FocName, long Original_Id) {
            return this.Update(BOC, BocName, FOC, FocName, Original_Id, Original_BOC, Original_BocName, Original_FOC, Original_FocName, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class O6TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public O6TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "O6";
            tableMapping.ColumnMappings.Add("BudgetLevel", "BudgetLevel");
            tableMapping.ColumnMappings.Add("RPIO", "RPIO");
            tableMapping.ColumnMappings.Add("BFY", "BFY");
            tableMapping.ColumnMappings.Add("Fund", "Fund");
            tableMapping.ColumnMappings.Add("Org", "Org");
            tableMapping.ColumnMappings.Add("RC", "RC");
            tableMapping.ColumnMappings.Add("NPM", "NPM");
            tableMapping.ColumnMappings.Add("NpmName", "NpmName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("ProgramProjectCode", "ProgramProjectCode");
            tableMapping.ColumnMappings.Add("ProgramProjectName", "ProgramProjectName");
            tableMapping.ColumnMappings.Add("ProgramArea", "ProgramArea");
            tableMapping.ColumnMappings.Add("ProgramAreaName", "ProgramAreaName");
            tableMapping.ColumnMappings.Add("BOC", "BOC");
            tableMapping.ColumnMappings.Add("Authority", "Authority");
            tableMapping.ColumnMappings.Add("CarryOver", "CarryOver");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("OpenCommitment", "OpenCommitment");
            tableMapping.ColumnMappings.Add("Obligation", "Obligation");
            tableMapping.ColumnMappings.Add("Available", "Available");
            tableMapping.ColumnMappings.Add("ULO", "ULO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""O6"" (""BudgetLevel"", ""RPIO"", ""BFY"", ""Fund"", ""Org"", ""RC"", ""NPM"", ""NpmName"", ""Code"", ""ProgramProjectCode"", ""ProgramProjectName"", ""ProgramArea"", ""ProgramAreaName"", ""BOC"", ""Authority"", ""CarryOver"", ""Amount"", ""OpenCommitment"", ""Obligation"", ""Available"", ""ULO"") VALUES (:BudgetLevel, :RPIO, :BFY, :Fund, :Org, :RC, :NPM, :NpmName, :Code, :ProgramProjectCode, :ProgramProjectName, :ProgramArea, :ProgramAreaName, :BOC, :Authority, :CarryOver, :Amount, :OpenCommitment, :Obligation, :Available, :ULO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BudgetLevel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NpmName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Authority";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Authority";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "CarryOver";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "CarryOver";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Amount";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "OpenCommitment";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "OpenCommitment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Obligation";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Obligation";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Available";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Available";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ULO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ULO";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BudgetLevel, RPIO, BFY, Fund, Org, RC, NPM, NpmName, Code, ProgramProjectC" +
                "ode, ProgramProjectName, ProgramArea, ProgramAreaName, BOC, Authority, CarryOver" +
                ", Amount, OpenCommitment, Obligation, Available, ULO FROM \"main\".O6";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.O6DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.O6DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.O6DataTable dataTable = new R6.O6DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.O6DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "O6");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string BudgetLevel, 
                    string RPIO, 
                    string BFY, 
                    string Fund, 
                    string Org, 
                    string RC, 
                    string NPM, 
                    string NpmName, 
                    string Code, 
                    string ProgramProjectCode, 
                    string ProgramProjectName, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string BOC, 
                    string Authority, 
                    string CarryOver, 
                    string Amount, 
                    string OpenCommitment, 
                    string Obligation, 
                    string Available, 
                    string ULO) {
            if ((BudgetLevel == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BudgetLevel));
            }
            if ((RPIO == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RPIO));
            }
            if ((BFY == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BFY));
            }
            if ((Fund == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Fund));
            }
            if ((Org == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Org));
            }
            if ((RC == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(RC));
            }
            if ((NPM == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NPM));
            }
            if ((NpmName == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(NpmName));
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Code));
            }
            if ((ProgramProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ProgramProjectCode));
            }
            if ((ProgramProjectName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ProgramProjectName));
            }
            if ((ProgramArea == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ProgramArea));
            }
            if ((ProgramAreaName == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ProgramAreaName));
            }
            if ((BOC == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(BOC));
            }
            if ((Authority == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Authority));
            }
            if ((CarryOver == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CarryOver));
            }
            if ((Amount == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Amount));
            }
            if ((OpenCommitment == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(OpenCommitment));
            }
            if ((Obligation == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Obligation));
            }
            if ((Available == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Available));
            }
            if ((ULO == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ULO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class O7TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public O7TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "O7";
            tableMapping.ColumnMappings.Add("RPIO", "RPIO");
            tableMapping.ColumnMappings.Add("Fund", "Fund");
            tableMapping.ColumnMappings.Add("NpmCode", "NpmCode");
            tableMapping.ColumnMappings.Add("BFY", "BFY");
            tableMapping.ColumnMappings.Add("System", "System");
            tableMapping.ColumnMappings.Add("RC", "RC");
            tableMapping.ColumnMappings.Add("Division", "Division");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("SubProject", "SubProject");
            tableMapping.ColumnMappings.Add("ProgramProjectCode", "ProgramProjectCode");
            tableMapping.ColumnMappings.Add("BOC", "BOC");
            tableMapping.ColumnMappings.Add("FOC", "FOC");
            tableMapping.ColumnMappings.Add("FocName", "FocName");
            tableMapping.ColumnMappings.Add("PurchaseRequest", "PurchaseRequest");
            tableMapping.ColumnMappings.Add("DocPrefix", "DocPrefix");
            tableMapping.ColumnMappings.Add("DocType", "DocType");
            tableMapping.ColumnMappings.Add("DCN", "DCN");
            tableMapping.ColumnMappings.Add("SiteProjectCode", "SiteProjectCode");
            tableMapping.ColumnMappings.Add("SiteProjectName", "SiteProjectName");
            tableMapping.ColumnMappings.Add("GrantNumber", "GrantNumber");
            tableMapping.ColumnMappings.Add("Commitment", "Commitment");
            tableMapping.ColumnMappings.Add("Obligation", "Obligation");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""O7"" (""RPIO"", ""Fund"", ""NpmCode"", ""BFY"", ""System"", ""RC"", ""Division"", ""Code"", ""SubProject"", ""ProgramProjectCode"", ""BOC"", ""FOC"", ""FocName"", ""PurchaseRequest"", ""DocPrefix"", ""DocType"", ""DCN"", ""SiteProjectCode"", ""SiteProjectName"", ""GrantNumber"", ""Commitment"", ""Obligation"") VALUES (:RPIO, :Fund, :NpmCode, :BFY, :System, :RC, :Division, :Code, :SubProject, :ProgramProjectCode, :BOC, :FOC, :FocName, :PurchaseRequest, :DocPrefix, :DocType, :DCN, :SiteProjectCode, :SiteProjectName, :GrantNumber, :Commitment, :Obligation)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NpmCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "System";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "System";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Division";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Division";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SubProject";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FocName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "PurchaseRequest";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "PurchaseRequest";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DocPrefix";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DocPrefix";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DocType";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DocType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DCN";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DCN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SiteProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SiteProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SiteProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SiteProjectName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "GrantNumber";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "GrantNumber";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Commitment";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Commitment";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Obligation";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "Obligation";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RPIO, Fund, NpmCode, BFY, System, RC, Division, Code, SubProject, ProgramP" +
                "rojectCode, BOC, FOC, FocName, PurchaseRequest, DocPrefix, DocType, DCN, SitePro" +
                "jectCode, SiteProjectName, GrantNumber, Commitment, Obligation FROM \"main\".O7";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.O7DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.O7DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.O7DataTable dataTable = new R6.O7DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.O7DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "O7");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string RPIO, 
                    string Fund, 
                    string NpmCode, 
                    string BFY, 
                    string System, 
                    string RC, 
                    string Division, 
                    string Code, 
                    string SubProject, 
                    string ProgramProjectCode, 
                    string BOC, 
                    string FOC, 
                    string FocName, 
                    string PurchaseRequest, 
                    string DocPrefix, 
                    string DocType, 
                    string DCN, 
                    string SiteProjectCode, 
                    string SiteProjectName, 
                    string GrantNumber, 
                    global::System.Nullable<double> Commitment, 
                    global::System.Nullable<double> Obligation) {
            if ((RPIO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RPIO));
            }
            if ((Fund == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Fund));
            }
            if ((NpmCode == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NpmCode));
            }
            if ((BFY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BFY));
            }
            if ((System == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(System));
            }
            if ((RC == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(RC));
            }
            if ((Division == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Division));
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Code));
            }
            if ((SubProject == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SubProject));
            }
            if ((ProgramProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ProgramProjectCode));
            }
            if ((BOC == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(BOC));
            }
            if ((FOC == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(FOC));
            }
            if ((FocName == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(FocName));
            }
            if ((PurchaseRequest == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(PurchaseRequest));
            }
            if ((DocPrefix == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(DocPrefix));
            }
            if ((DocType == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(DocType));
            }
            if ((DCN == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(DCN));
            }
            if ((SiteProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(SiteProjectCode));
            }
            if ((SiteProjectName == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(SiteProjectName));
            }
            if ((GrantNumber == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(GrantNumber));
            }
            if ((Commitment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(Commitment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Obligation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Obligation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class O8TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public O8TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "O8";
            tableMapping.ColumnMappings.Add("RPIO", "RPIO");
            tableMapping.ColumnMappings.Add("BFY", "BFY");
            tableMapping.ColumnMappings.Add("Fund", "Fund");
            tableMapping.ColumnMappings.Add("Org", "Org");
            tableMapping.ColumnMappings.Add("RC", "RC");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("ProgramProjectCode", "ProgramProjectCode");
            tableMapping.ColumnMappings.Add("ProgramProjectName", "ProgramProjectName");
            tableMapping.ColumnMappings.Add("HrOrgCode", "HrOrgCode");
            tableMapping.ColumnMappings.Add("WorkCode", "WorkCode");
            tableMapping.ColumnMappings.Add("WorkCodeName", "WorkCodeName");
            tableMapping.ColumnMappings.Add("CurrentPay", "CurrentPay");
            tableMapping.ColumnMappings.Add("CurrentHours", "CurrentHours");
            tableMapping.ColumnMappings.Add("TotalPay", "TotalPay");
            tableMapping.ColumnMappings.Add("TotalHours", "TotalHours");
            tableMapping.ColumnMappings.Add("TotalBenefits", "TotalBenefits");
            tableMapping.ColumnMappings.Add("TotalOvertimePay", "TotalOvertimePay");
            tableMapping.ColumnMappings.Add("TotalOvertimeHours", "TotalOvertimeHours");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""O8"" (""RPIO"", ""BFY"", ""Fund"", ""Org"", ""RC"", ""Code"", ""ProgramProjectCode"", ""ProgramProjectName"", ""HrOrgCode"", ""WorkCode"", ""WorkCodeName"", ""CurrentPay"", ""CurrentHours"", ""TotalPay"", ""TotalHours"", ""TotalBenefits"", ""TotalOvertimePay"", ""TotalOvertimeHours"") VALUES (:RPIO, :BFY, :Fund, :Org, :RC, :Code, :ProgramProjectCode, :ProgramProjectName, :HrOrgCode, :WorkCode, :WorkCodeName, :CurrentPay, :CurrentHours, :TotalPay, :TotalHours, :TotalBenefits, :TotalOvertimePay, :TotalOvertimeHours)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "HrOrgCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "HrOrgCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "WorkCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "WorkCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "WorkCodeName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "WorkCodeName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "CurrentPay";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "CurrentPay";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "CurrentHours";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "CurrentHours";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "TotalPay";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalPay";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "TotalHours";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalHours";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "TotalBenefits";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalBenefits";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "TotalOvertimePay";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalOvertimePay";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "TotalOvertimeHours";
            param.DbType = global::System.Data.DbType.Double;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Double;
            param.IsNullable = true;
            param.SourceColumn = "TotalOvertimeHours";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RPIO, BFY, Fund, Org, RC, Code, ProgramProjectCode, ProgramProjectName, Hr" +
                "OrgCode, WorkCode, WorkCodeName, CurrentPay, CurrentHours, TotalPay, TotalHours," +
                " TotalBenefits, TotalOvertimePay, TotalOvertimeHours FROM \"main\".O8";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.O8DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.O8DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.O8DataTable dataTable = new R6.O8DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.O8DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "O8");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string RPIO, 
                    string BFY, 
                    string Fund, 
                    string Org, 
                    string RC, 
                    string Code, 
                    string ProgramProjectCode, 
                    string ProgramProjectName, 
                    string HrOrgCode, 
                    string WorkCode, 
                    string WorkCodeName, 
                    global::System.Nullable<double> CurrentPay, 
                    global::System.Nullable<double> CurrentHours, 
                    global::System.Nullable<double> TotalPay, 
                    global::System.Nullable<double> TotalHours, 
                    global::System.Nullable<double> TotalBenefits, 
                    global::System.Nullable<double> TotalOvertimePay, 
                    global::System.Nullable<double> TotalOvertimeHours) {
            if ((RPIO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RPIO));
            }
            if ((BFY == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BFY));
            }
            if ((Fund == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Fund));
            }
            if ((Org == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Org));
            }
            if ((RC == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(RC));
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Code));
            }
            if ((ProgramProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ProgramProjectCode));
            }
            if ((ProgramProjectName == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ProgramProjectName));
            }
            if ((HrOrgCode == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(HrOrgCode));
            }
            if ((WorkCode == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(WorkCode));
            }
            if ((WorkCodeName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(WorkCodeName));
            }
            if ((CurrentPay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(CurrentPay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CurrentHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(CurrentHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((TotalPay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(TotalPay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TotalHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(TotalHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((TotalBenefits.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(TotalBenefits.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TotalOvertimePay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(TotalOvertimePay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((TotalOvertimeHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(TotalOvertimeHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class P6TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public P6TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "P6";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("BudgetLevel", "BudgetLevel");
            tableMapping.ColumnMappings.Add("RPIO", "RPIO");
            tableMapping.ColumnMappings.Add("BFY", "BFY");
            tableMapping.ColumnMappings.Add("Fund", "Fund");
            tableMapping.ColumnMappings.Add("FundName", "FundName");
            tableMapping.ColumnMappings.Add("Org", "Org");
            tableMapping.ColumnMappings.Add("BOC", "BOC");
            tableMapping.ColumnMappings.Add("BocName", "BocName");
            tableMapping.ColumnMappings.Add("RC", "RC");
            tableMapping.ColumnMappings.Add("DivisionName", "DivisionName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("SubProject", "SubProject");
            tableMapping.ColumnMappings.Add("NPM", "NPM");
            tableMapping.ColumnMappings.Add("NpmCode", "NpmCode");
            tableMapping.ColumnMappings.Add("ProgramProjectName", "ProgramProjectName");
            tableMapping.ColumnMappings.Add("ProgramProjectCode", "ProgramProjectCode");
            tableMapping.ColumnMappings.Add("ProgramArea", "ProgramArea");
            tableMapping.ColumnMappings.Add("ProgramAreaName", "ProgramAreaName");
            tableMapping.ColumnMappings.Add("Goal", "Goal");
            tableMapping.ColumnMappings.Add("GoalName", "GoalName");
            tableMapping.ColumnMappings.Add("Objective", "Objective");
            tableMapping.ColumnMappings.Add("ObjectiveName", "ObjectiveName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"main\".\"P6\" WHERE ((\"Id\" = :Original_Id) AND ((:IsNull_BudgetLevel = " +
                "1 AND \"BudgetLevel\" IS NULL) OR (\"BudgetLevel\" = :Original_BudgetLevel)) AND ((:" +
                "IsNull_RPIO = 1 AND \"RPIO\" IS NULL) OR (\"RPIO\" = :Original_RPIO)) AND ((:IsNull_" +
                "BFY = 1 AND \"BFY\" IS NULL) OR (\"BFY\" = :Original_BFY)) AND ((:IsNull_Fund = 1 AN" +
                "D \"Fund\" IS NULL) OR (\"Fund\" = :Original_Fund)) AND ((:IsNull_FundName = 1 AND \"" +
                "FundName\" IS NULL) OR (\"FundName\" = :Original_FundName)) AND ((:IsNull_Org = 1 A" +
                "ND \"Org\" IS NULL) OR (\"Org\" = :Original_Org)) AND ((:IsNull_BOC = 1 AND \"BOC\" IS" +
                " NULL) OR (\"BOC\" = :Original_BOC)) AND ((:IsNull_BocName = 1 AND \"BocName\" IS NU" +
                "LL) OR (\"BocName\" = :Original_BocName)) AND ((:IsNull_RC = 1 AND \"RC\" IS NULL) O" +
                "R (\"RC\" = :Original_RC)) AND ((:IsNull_DivisionName = 1 AND \"DivisionName\" IS NU" +
                "LL) OR (\"DivisionName\" = :Original_DivisionName)) AND ((:IsNull_Code = 1 AND \"Co" +
                "de\" IS NULL) OR (\"Code\" = :Original_Code)) AND ((:IsNull_SubProject = 1 AND \"Sub" +
                "Project\" IS NULL) OR (\"SubProject\" = :Original_SubProject)) AND ((:IsNull_NPM = " +
                "1 AND \"NPM\" IS NULL) OR (\"NPM\" = :Original_NPM)) AND ((:IsNull_NpmCode = 1 AND \"" +
                "NpmCode\" IS NULL) OR (\"NpmCode\" = :Original_NpmCode)) AND ((:IsNull_ProgramProje" +
                "ctName = 1 AND \"ProgramProjectName\" IS NULL) OR (\"ProgramProjectName\" = :Origina" +
                "l_ProgramProjectName)) AND ((:IsNull_ProgramProjectCode = 1 AND \"ProgramProjectC" +
                "ode\" IS NULL) OR (\"ProgramProjectCode\" = :Original_ProgramProjectCode)) AND ((:I" +
                "sNull_ProgramArea = 1 AND \"ProgramArea\" IS NULL) OR (\"ProgramArea\" = :Original_P" +
                "rogramArea)) AND ((:IsNull_ProgramAreaName = 1 AND \"ProgramAreaName\" IS NULL) OR" +
                " (\"ProgramAreaName\" = :Original_ProgramAreaName)) AND ((:IsNull_Goal = 1 AND \"Go" +
                "al\" IS NULL) OR (\"Goal\" = :Original_Goal)) AND ((:IsNull_GoalName = 1 AND \"GoalN" +
                "ame\" IS NULL) OR (\"GoalName\" = :Original_GoalName)) AND ((:IsNull_Objective = 1 " +
                "AND \"Objective\" IS NULL) OR (\"Objective\" = :Original_Objective)) AND ((:IsNull_O" +
                "bjectiveName = 1 AND \"ObjectiveName\" IS NULL) OR (\"ObjectiveName\" = :Original_Ob" +
                "jectiveName)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BudgetLevel";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BudgetLevel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_RPIO";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BFY";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Fund";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FundName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Org";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_RC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_DivisionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DivisionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_DivisionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_SubProject";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_SubProject";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_NPM";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_NpmCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_NpmCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramProjectName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramProjectCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramArea";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramAreaName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Goal";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Goal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Goal";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Goal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_GoalName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "GoalName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_GoalName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "GoalName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Objective";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Objective";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Objective";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Objective";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ObjectiveName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ObjectiveName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ObjectiveName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ObjectiveName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""P6"" (""Id"", ""BudgetLevel"", ""RPIO"", ""BFY"", ""Fund"", ""FundName"", ""Org"", ""BOC"", ""BocName"", ""RC"", ""DivisionName"", ""Code"", ""SubProject"", ""NPM"", ""NpmCode"", ""ProgramProjectName"", ""ProgramProjectCode"", ""ProgramArea"", ""ProgramAreaName"", ""Goal"", ""GoalName"", ""Objective"", ""ObjectiveName"") VALUES (:Id, :BudgetLevel, :RPIO, :BFY, :Fund, :FundName, :Org, :BOC, :BocName, :RC, :DivisionName, :Code, :SubProject, :NPM, :NpmCode, :ProgramProjectName, :ProgramProjectCode, :ProgramArea, :ProgramAreaName, :Goal, :GoalName, :Objective, :ObjectiveName)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BudgetLevel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DivisionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SubProject";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NpmCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Goal";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Goal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "GoalName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "GoalName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Objective";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Objective";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ObjectiveName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ObjectiveName";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"main\".\"P6\" SET \"Id\" = :Id, \"BudgetLevel\" = :BudgetLevel, \"RPIO\" = :RPIO, " +
                "\"BFY\" = :BFY, \"Fund\" = :Fund, \"FundName\" = :FundName, \"Org\" = :Org, \"BOC\" = :BOC" +
                ", \"BocName\" = :BocName, \"RC\" = :RC, \"DivisionName\" = :DivisionName, \"Code\" = :Co" +
                "de, \"SubProject\" = :SubProject, \"NPM\" = :NPM, \"NpmCode\" = :NpmCode, \"ProgramProj" +
                "ectName\" = :ProgramProjectName, \"ProgramProjectCode\" = :ProgramProjectCode, \"Pro" +
                "gramArea\" = :ProgramArea, \"ProgramAreaName\" = :ProgramAreaName, \"Goal\" = :Goal, " +
                "\"GoalName\" = :GoalName, \"Objective\" = :Objective, \"ObjectiveName\" = :ObjectiveNa" +
                "me WHERE ((\"Id\" = :Original_Id) AND ((:IsNull_BudgetLevel = 1 AND \"BudgetLevel\" " +
                "IS NULL) OR (\"BudgetLevel\" = :Original_BudgetLevel)) AND ((:IsNull_RPIO = 1 AND " +
                "\"RPIO\" IS NULL) OR (\"RPIO\" = :Original_RPIO)) AND ((:IsNull_BFY = 1 AND \"BFY\" IS" +
                " NULL) OR (\"BFY\" = :Original_BFY)) AND ((:IsNull_Fund = 1 AND \"Fund\" IS NULL) OR" +
                " (\"Fund\" = :Original_Fund)) AND ((:IsNull_FundName = 1 AND \"FundName\" IS NULL) O" +
                "R (\"FundName\" = :Original_FundName)) AND ((:IsNull_Org = 1 AND \"Org\" IS NULL) OR" +
                " (\"Org\" = :Original_Org)) AND ((:IsNull_BOC = 1 AND \"BOC\" IS NULL) OR (\"BOC\" = :" +
                "Original_BOC)) AND ((:IsNull_BocName = 1 AND \"BocName\" IS NULL) OR (\"BocName\" = " +
                ":Original_BocName)) AND ((:IsNull_RC = 1 AND \"RC\" IS NULL) OR (\"RC\" = :Original_" +
                "RC)) AND ((:IsNull_DivisionName = 1 AND \"DivisionName\" IS NULL) OR (\"DivisionNam" +
                "e\" = :Original_DivisionName)) AND ((:IsNull_Code = 1 AND \"Code\" IS NULL) OR (\"Co" +
                "de\" = :Original_Code)) AND ((:IsNull_SubProject = 1 AND \"SubProject\" IS NULL) OR" +
                " (\"SubProject\" = :Original_SubProject)) AND ((:IsNull_NPM = 1 AND \"NPM\" IS NULL)" +
                " OR (\"NPM\" = :Original_NPM)) AND ((:IsNull_NpmCode = 1 AND \"NpmCode\" IS NULL) OR" +
                " (\"NpmCode\" = :Original_NpmCode)) AND ((:IsNull_ProgramProjectName = 1 AND \"Prog" +
                "ramProjectName\" IS NULL) OR (\"ProgramProjectName\" = :Original_ProgramProjectName" +
                ")) AND ((:IsNull_ProgramProjectCode = 1 AND \"ProgramProjectCode\" IS NULL) OR (\"P" +
                "rogramProjectCode\" = :Original_ProgramProjectCode)) AND ((:IsNull_ProgramArea = " +
                "1 AND \"ProgramArea\" IS NULL) OR (\"ProgramArea\" = :Original_ProgramArea)) AND ((:" +
                "IsNull_ProgramAreaName = 1 AND \"ProgramAreaName\" IS NULL) OR (\"ProgramAreaName\" " +
                "= :Original_ProgramAreaName)) AND ((:IsNull_Goal = 1 AND \"Goal\" IS NULL) OR (\"Go" +
                "al\" = :Original_Goal)) AND ((:IsNull_GoalName = 1 AND \"GoalName\" IS NULL) OR (\"G" +
                "oalName\" = :Original_GoalName)) AND ((:IsNull_Objective = 1 AND \"Objective\" IS N" +
                "ULL) OR (\"Objective\" = :Original_Objective)) AND ((:IsNull_ObjectiveName = 1 AND" +
                " \"ObjectiveName\" IS NULL) OR (\"ObjectiveName\" = :Original_ObjectiveName)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BudgetLevel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DivisionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SubProject";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NpmCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Goal";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Goal";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "GoalName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "GoalName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Objective";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Objective";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ObjectiveName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ObjectiveName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BudgetLevel";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BudgetLevel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_RPIO";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BFY";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Fund";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_FundName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Org";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_BocName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_RC";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_DivisionName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "DivisionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_DivisionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Code";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_SubProject";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_SubProject";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_NPM";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_NpmCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_NpmCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramProjectName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramProjectCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramArea";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ProgramAreaName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Goal";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Goal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Goal";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Goal";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_GoalName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "GoalName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_GoalName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "GoalName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_Objective";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "Objective";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_Objective";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Objective";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "IsNull_ObjectiveName";
            param.DbType = global::System.Data.DbType.Int32;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ObjectiveName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Original_ObjectiveName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ObjectiveName";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, BudgetLevel, RPIO, BFY, Fund, FundName, Org, BOC, BocName, RC, Divisio" +
                "nName, Code, SubProject, NPM, NpmCode, ProgramProjectName, ProgramProjectCode, P" +
                "rogramArea, ProgramAreaName, Goal, GoalName, Objective, ObjectiveName FROM P6";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.P6DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.P6DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.P6DataTable dataTable = new R6.P6DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.P6DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "P6");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_Id, 
                    string Original_BudgetLevel, 
                    string Original_RPIO, 
                    string Original_BFY, 
                    string Original_Fund, 
                    string Original_FundName, 
                    string Original_Org, 
                    string Original_BOC, 
                    string Original_BocName, 
                    string Original_RC, 
                    string Original_DivisionName, 
                    string Original_Code, 
                    string Original_SubProject, 
                    string Original_NPM, 
                    string Original_NpmCode, 
                    string Original_ProgramProjectName, 
                    string Original_ProgramProjectCode, 
                    string Original_ProgramArea, 
                    string Original_ProgramAreaName, 
                    string Original_Goal, 
                    string Original_GoalName, 
                    string Original_Objective, 
                    string Original_ObjectiveName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_Id));
            if ((Original_BudgetLevel == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_BudgetLevel));
            }
            if ((Original_RPIO == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_RPIO));
            }
            if ((Original_BFY == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_BFY));
            }
            if ((Original_Fund == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Fund));
            }
            if ((Original_FundName == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_FundName));
            }
            if ((Original_Org == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Org));
            }
            if ((Original_BOC == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_BOC));
            }
            if ((Original_BocName == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_BocName));
            }
            if ((Original_RC == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_RC));
            }
            if ((Original_DivisionName == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_DivisionName));
            }
            if ((Original_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Code));
            }
            if ((Original_SubProject == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_SubProject));
            }
            if ((Original_NPM == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_NPM));
            }
            if ((Original_NpmCode == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_NpmCode));
            }
            if ((Original_ProgramProjectName == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_ProgramProjectName));
            }
            if ((Original_ProgramProjectCode == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_ProgramProjectCode));
            }
            if ((Original_ProgramArea == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ProgramArea));
            }
            if ((Original_ProgramAreaName == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_ProgramAreaName));
            }
            if ((Original_Goal == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_Goal));
            }
            if ((Original_GoalName == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_GoalName));
            }
            if ((Original_Objective == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_Objective));
            }
            if ((Original_ObjectiveName == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_ObjectiveName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long Id, 
                    string BudgetLevel, 
                    string RPIO, 
                    string BFY, 
                    string Fund, 
                    string FundName, 
                    string Org, 
                    string BOC, 
                    string BocName, 
                    string RC, 
                    string DivisionName, 
                    string Code, 
                    string SubProject, 
                    string NPM, 
                    string NpmCode, 
                    string ProgramProjectName, 
                    string ProgramProjectCode, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string Goal, 
                    string GoalName, 
                    string Objective, 
                    string ObjectiveName) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Id));
            if ((BudgetLevel == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BudgetLevel));
            }
            if ((RPIO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RPIO));
            }
            if ((BFY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BFY));
            }
            if ((Fund == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Fund));
            }
            if ((FundName == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FundName));
            }
            if ((Org == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Org));
            }
            if ((BOC == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BOC));
            }
            if ((BocName == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(BocName));
            }
            if ((RC == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(RC));
            }
            if ((DivisionName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DivisionName));
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Code));
            }
            if ((SubProject == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SubProject));
            }
            if ((NPM == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(NPM));
            }
            if ((NpmCode == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(NpmCode));
            }
            if ((ProgramProjectName == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ProgramProjectName));
            }
            if ((ProgramProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ProgramProjectCode));
            }
            if ((ProgramArea == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ProgramArea));
            }
            if ((ProgramAreaName == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ProgramAreaName));
            }
            if ((Goal == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Goal));
            }
            if ((GoalName == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(GoalName));
            }
            if ((Objective == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Objective));
            }
            if ((ObjectiveName == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ObjectiveName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long Id, 
                    string BudgetLevel, 
                    string RPIO, 
                    string BFY, 
                    string Fund, 
                    string FundName, 
                    string Org, 
                    string BOC, 
                    string BocName, 
                    string RC, 
                    string DivisionName, 
                    string Code, 
                    string SubProject, 
                    string NPM, 
                    string NpmCode, 
                    string ProgramProjectName, 
                    string ProgramProjectCode, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string Goal, 
                    string GoalName, 
                    string Objective, 
                    string ObjectiveName, 
                    long Original_Id, 
                    string Original_BudgetLevel, 
                    string Original_RPIO, 
                    string Original_BFY, 
                    string Original_Fund, 
                    string Original_FundName, 
                    string Original_Org, 
                    string Original_BOC, 
                    string Original_BocName, 
                    string Original_RC, 
                    string Original_DivisionName, 
                    string Original_Code, 
                    string Original_SubProject, 
                    string Original_NPM, 
                    string Original_NpmCode, 
                    string Original_ProgramProjectName, 
                    string Original_ProgramProjectCode, 
                    string Original_ProgramArea, 
                    string Original_ProgramAreaName, 
                    string Original_Goal, 
                    string Original_GoalName, 
                    string Original_Objective, 
                    string Original_ObjectiveName) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(Id));
            if ((BudgetLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BudgetLevel));
            }
            if ((RPIO == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(RPIO));
            }
            if ((BFY == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BFY));
            }
            if ((Fund == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Fund));
            }
            if ((FundName == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FundName));
            }
            if ((Org == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Org));
            }
            if ((BOC == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BOC));
            }
            if ((BocName == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(BocName));
            }
            if ((RC == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(RC));
            }
            if ((DivisionName == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DivisionName));
            }
            if ((Code == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Code));
            }
            if ((SubProject == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SubProject));
            }
            if ((NPM == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(NPM));
            }
            if ((NpmCode == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(NpmCode));
            }
            if ((ProgramProjectName == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ProgramProjectName));
            }
            if ((ProgramProjectCode == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ProgramProjectCode));
            }
            if ((ProgramArea == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ProgramArea));
            }
            if ((ProgramAreaName == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ProgramAreaName));
            }
            if ((Goal == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Goal));
            }
            if ((GoalName == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(GoalName));
            }
            if ((Objective == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Objective));
            }
            if ((ObjectiveName == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(ObjectiveName));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((long)(Original_Id));
            if ((Original_BudgetLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_BudgetLevel));
            }
            if ((Original_RPIO == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_RPIO));
            }
            if ((Original_BFY == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_BFY));
            }
            if ((Original_Fund == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Fund));
            }
            if ((Original_FundName == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_FundName));
            }
            if ((Original_Org == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Org));
            }
            if ((Original_BOC == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_BOC));
            }
            if ((Original_BocName == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_BocName));
            }
            if ((Original_RC == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_RC));
            }
            if ((Original_DivisionName == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_DivisionName));
            }
            if ((Original_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Code));
            }
            if ((Original_SubProject == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_SubProject));
            }
            if ((Original_NPM == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_NPM));
            }
            if ((Original_NpmCode == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_NpmCode));
            }
            if ((Original_ProgramProjectName == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_ProgramProjectName));
            }
            if ((Original_ProgramProjectCode == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_ProgramProjectCode));
            }
            if ((Original_ProgramArea == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_ProgramArea));
            }
            if ((Original_ProgramAreaName == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_ProgramAreaName));
            }
            if ((Original_Goal == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_Goal));
            }
            if ((Original_GoalName == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_GoalName));
            }
            if ((Original_Objective == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_Objective));
            }
            if ((Original_ObjectiveName == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_ObjectiveName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BudgetLevel, 
                    string RPIO, 
                    string BFY, 
                    string Fund, 
                    string FundName, 
                    string Org, 
                    string BOC, 
                    string BocName, 
                    string RC, 
                    string DivisionName, 
                    string Code, 
                    string SubProject, 
                    string NPM, 
                    string NpmCode, 
                    string ProgramProjectName, 
                    string ProgramProjectCode, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string Goal, 
                    string GoalName, 
                    string Objective, 
                    string ObjectiveName, 
                    long Original_Id, 
                    string Original_BudgetLevel, 
                    string Original_RPIO, 
                    string Original_BFY, 
                    string Original_Fund, 
                    string Original_FundName, 
                    string Original_Org, 
                    string Original_BOC, 
                    string Original_BocName, 
                    string Original_RC, 
                    string Original_DivisionName, 
                    string Original_Code, 
                    string Original_SubProject, 
                    string Original_NPM, 
                    string Original_NpmCode, 
                    string Original_ProgramProjectName, 
                    string Original_ProgramProjectCode, 
                    string Original_ProgramArea, 
                    string Original_ProgramAreaName, 
                    string Original_Goal, 
                    string Original_GoalName, 
                    string Original_Objective, 
                    string Original_ObjectiveName) {
            return this.Update(Original_Id, BudgetLevel, RPIO, BFY, Fund, FundName, Org, BOC, BocName, RC, DivisionName, Code, SubProject, NPM, NpmCode, ProgramProjectName, ProgramProjectCode, ProgramArea, ProgramAreaName, Goal, GoalName, Objective, ObjectiveName, Original_Id, Original_BudgetLevel, Original_RPIO, Original_BFY, Original_Fund, Original_FundName, Original_Org, Original_BOC, Original_BocName, Original_RC, Original_DivisionName, Original_Code, Original_SubProject, Original_NPM, Original_NpmCode, Original_ProgramProjectName, Original_ProgramProjectCode, Original_ProgramArea, Original_ProgramAreaName, Original_Goal, Original_GoalName, Original_Objective, Original_ObjectiveName);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class P7TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public P7TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "P7";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("BudgetLevel", "BudgetLevel");
            tableMapping.ColumnMappings.Add("RPIO", "RPIO");
            tableMapping.ColumnMappings.Add("BFY", "BFY");
            tableMapping.ColumnMappings.Add("Fund", "Fund");
            tableMapping.ColumnMappings.Add("FundName", "FundName");
            tableMapping.ColumnMappings.Add("Org", "Org");
            tableMapping.ColumnMappings.Add("BOC", "BOC");
            tableMapping.ColumnMappings.Add("BocName", "BocName");
            tableMapping.ColumnMappings.Add("RC", "RC");
            tableMapping.ColumnMappings.Add("DivisionName", "DivisionName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("SubProject", "SubProject");
            tableMapping.ColumnMappings.Add("NPM", "NPM");
            tableMapping.ColumnMappings.Add("NpmCode", "NpmCode");
            tableMapping.ColumnMappings.Add("ProgramProjectName", "ProgramProjectName");
            tableMapping.ColumnMappings.Add("ProgramProjectCode", "ProgramProjectCode");
            tableMapping.ColumnMappings.Add("ProgramArea", "ProgramArea");
            tableMapping.ColumnMappings.Add("ProgramAreaName", "ProgramAreaName");
            tableMapping.ColumnMappings.Add("Goal", "Goal");
            tableMapping.ColumnMappings.Add("GoalName", "GoalName");
            tableMapping.ColumnMappings.Add("Objective", "Objective");
            tableMapping.ColumnMappings.Add("ObjectiveName", "ObjectiveName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""P7"" (""Id"", ""BudgetLevel"", ""RPIO"", ""BFY"", ""Fund"", ""FundName"", ""Org"", ""BOC"", ""BocName"", ""RC"", ""DivisionName"", ""Code"", ""SubProject"", ""NPM"", ""NpmCode"", ""ProgramProjectName"", ""ProgramProjectCode"", ""ProgramArea"", ""ProgramAreaName"", ""Goal"", ""GoalName"", ""Objective"", ""ObjectiveName"") VALUES (:Id, :BudgetLevel, :RPIO, :BFY, :Fund, :FundName, :Org, :BOC, :BocName, :RC, :DivisionName, :Code, :SubProject, :NPM, :NpmCode, :ProgramProjectName, :ProgramProjectCode, :ProgramArea, :ProgramAreaName, :Goal, :GoalName, :Objective, :ObjectiveName)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BudgetLevel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DivisionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SubProject";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NpmCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Goal";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Goal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "GoalName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "GoalName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Objective";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Objective";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ObjectiveName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ObjectiveName";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, BudgetLevel, RPIO, BFY, Fund, FundName, Org, BOC, BocName, RC, Divisio" +
                "nName, Code, SubProject, NPM, NpmCode, ProgramProjectName, ProgramProjectCode, P" +
                "rogramArea, ProgramAreaName, Goal, GoalName, Objective, ObjectiveName FROM P7";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.P7DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.P7DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.P7DataTable dataTable = new R6.P7DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.P7DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "P7");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long Id, 
                    string BudgetLevel, 
                    string RPIO, 
                    string BFY, 
                    string Fund, 
                    string FundName, 
                    string Org, 
                    string BOC, 
                    string BocName, 
                    string RC, 
                    string DivisionName, 
                    string Code, 
                    string SubProject, 
                    string NPM, 
                    string NpmCode, 
                    string ProgramProjectName, 
                    string ProgramProjectCode, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string Goal, 
                    string GoalName, 
                    string Objective, 
                    string ObjectiveName) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Id));
            if ((BudgetLevel == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BudgetLevel));
            }
            if ((RPIO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RPIO));
            }
            if ((BFY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BFY));
            }
            if ((Fund == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Fund));
            }
            if ((FundName == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FundName));
            }
            if ((Org == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Org));
            }
            if ((BOC == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BOC));
            }
            if ((BocName == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(BocName));
            }
            if ((RC == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(RC));
            }
            if ((DivisionName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DivisionName));
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Code));
            }
            if ((SubProject == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SubProject));
            }
            if ((NPM == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(NPM));
            }
            if ((NpmCode == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(NpmCode));
            }
            if ((ProgramProjectName == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ProgramProjectName));
            }
            if ((ProgramProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ProgramProjectCode));
            }
            if ((ProgramArea == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ProgramArea));
            }
            if ((ProgramAreaName == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ProgramAreaName));
            }
            if ((Goal == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Goal));
            }
            if ((GoalName == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(GoalName));
            }
            if ((Objective == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Objective));
            }
            if ((ObjectiveName == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ObjectiveName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class P8TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public P8TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "P8";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("BudgetLevel", "BudgetLevel");
            tableMapping.ColumnMappings.Add("RPIO", "RPIO");
            tableMapping.ColumnMappings.Add("BFY", "BFY");
            tableMapping.ColumnMappings.Add("Fund", "Fund");
            tableMapping.ColumnMappings.Add("FundName", "FundName");
            tableMapping.ColumnMappings.Add("Org", "Org");
            tableMapping.ColumnMappings.Add("BOC", "BOC");
            tableMapping.ColumnMappings.Add("BocName", "BocName");
            tableMapping.ColumnMappings.Add("RC", "RC");
            tableMapping.ColumnMappings.Add("DivisionName", "DivisionName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("SubProject", "SubProject");
            tableMapping.ColumnMappings.Add("NPM", "NPM");
            tableMapping.ColumnMappings.Add("NpmCode", "NpmCode");
            tableMapping.ColumnMappings.Add("ProgramProjectName", "ProgramProjectName");
            tableMapping.ColumnMappings.Add("ProgramProjectCode", "ProgramProjectCode");
            tableMapping.ColumnMappings.Add("ProgramArea", "ProgramArea");
            tableMapping.ColumnMappings.Add("ProgramAreaName", "ProgramAreaName");
            tableMapping.ColumnMappings.Add("Goal", "Goal");
            tableMapping.ColumnMappings.Add("GoalName", "GoalName");
            tableMapping.ColumnMappings.Add("Objective", "Objective");
            tableMapping.ColumnMappings.Add("ObjectiveName", "ObjectiveName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""main"".""P8"" (""Id"", ""BudgetLevel"", ""RPIO"", ""BFY"", ""Fund"", ""FundName"", ""Org"", ""BOC"", ""BocName"", ""RC"", ""DivisionName"", ""Code"", ""SubProject"", ""NPM"", ""NpmCode"", ""ProgramProjectName"", ""ProgramProjectCode"", ""ProgramArea"", ""ProgramAreaName"", ""Goal"", ""GoalName"", ""Objective"", ""ObjectiveName"") VALUES (:Id, :BudgetLevel, :RPIO, :BFY, :Fund, :FundName, :Org, :BOC, :BocName, :RC, :DivisionName, :Code, :SubProject, :NPM, :NpmCode, :ProgramProjectName, :ProgramProjectCode, :ProgramArea, :ProgramAreaName, :Goal, :GoalName, :Objective, :ObjectiveName)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "Id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BudgetLevel";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BudgetLevel";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BFY";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BFY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Fund";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Fund";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "FundName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "FundName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Org";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Org";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BOC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "BocName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BocName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RC";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "DivisionName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "DivisionName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Code";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SubProject";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SubProject";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NPM";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NPM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "NpmCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "NpmCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramArea";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramArea";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ProgramAreaName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ProgramAreaName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Goal";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Goal";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "GoalName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "GoalName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "Objective";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Objective";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "ObjectiveName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ObjectiveName";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, BudgetLevel, RPIO, BFY, Fund, FundName, Org, BOC, BocName, RC, Divisio" +
                "nName, Code, SubProject, NPM, NpmCode, ProgramProjectName, ProgramProjectCode, P" +
                "rogramArea, ProgramAreaName, Goal, GoalName, Objective, ObjectiveName FROM P8";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.P8DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.P8DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.P8DataTable dataTable = new R6.P8DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.P8DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "P8");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long Id, 
                    string BudgetLevel, 
                    string RPIO, 
                    string BFY, 
                    string Fund, 
                    string FundName, 
                    string Org, 
                    string BOC, 
                    string BocName, 
                    string RC, 
                    string DivisionName, 
                    string Code, 
                    string SubProject, 
                    string NPM, 
                    string NpmCode, 
                    string ProgramProjectName, 
                    string ProgramProjectCode, 
                    string ProgramArea, 
                    string ProgramAreaName, 
                    string Goal, 
                    string GoalName, 
                    string Objective, 
                    string ObjectiveName) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(Id));
            if ((BudgetLevel == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BudgetLevel));
            }
            if ((RPIO == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RPIO));
            }
            if ((BFY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BFY));
            }
            if ((Fund == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Fund));
            }
            if ((FundName == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FundName));
            }
            if ((Org == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Org));
            }
            if ((BOC == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BOC));
            }
            if ((BocName == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(BocName));
            }
            if ((RC == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(RC));
            }
            if ((DivisionName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DivisionName));
            }
            if ((Code == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Code));
            }
            if ((SubProject == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SubProject));
            }
            if ((NPM == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(NPM));
            }
            if ((NpmCode == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(NpmCode));
            }
            if ((ProgramProjectName == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ProgramProjectName));
            }
            if ((ProgramProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ProgramProjectCode));
            }
            if ((ProgramArea == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ProgramArea));
            }
            if ((ProgramAreaName == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ProgramAreaName));
            }
            if ((Goal == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Goal));
            }
            if ((GoalName == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(GoalName));
            }
            if ((Objective == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Objective));
            }
            if ((ObjectiveName == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ObjectiveName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class S6TableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public S6TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "S6";
            tableMapping.ColumnMappings.Add("RPIO", "RPIO");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("SiteProjectCode", "SiteProjectCode");
            tableMapping.ColumnMappings.Add("SiteProjectName", "SiteProjectName");
            tableMapping.ColumnMappings.Add("SiteId", "SiteId");
            tableMapping.ColumnMappings.Add("SiteName", "SiteName");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("CongressionalDistrict", "CongressionalDistrict");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"S6\" (\"RPIO\", \"State\", \"SiteProjectCode\", \"SiteProjectName\", \"" +
                "SiteId\", \"SiteName\", \"City\", \"CongressionalDistrict\") VALUES (:RPIO, :State, :Si" +
                "teProjectCode, :SiteProjectName, :SiteId, :SiteName, :City, :CongressionalDistri" +
                "ct)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "RPIO";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "RPIO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "State";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "State";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SiteProjectCode";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SiteProjectCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SiteProjectName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SiteProjectName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SiteId";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SiteId";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "SiteName";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "SiteName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "City";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "City";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "CongressionalDistrict";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "CongressionalDistrict";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RPIO, State, SiteProjectCode, SiteProjectName, SiteId, SiteName, City, Con" +
                "gressionalDistrict FROM \"main\".S6";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.S6DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.S6DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.S6DataTable dataTable = new R6.S6DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.S6DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "S6");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string RPIO, string State, string SiteProjectCode, string SiteProjectName, string SiteId, string SiteName, string City, string CongressionalDistrict) {
            if ((RPIO == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RPIO));
            }
            if ((State == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(State));
            }
            if ((SiteProjectCode == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SiteProjectCode));
            }
            if ((SiteProjectName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SiteProjectName));
            }
            if ((SiteId == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SiteId));
            }
            if ((SiteName == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SiteName));
            }
            if ((City == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(City));
            }
            if ((CongressionalDistrict == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(CongressionalDistrict));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sqlite_sequenceTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::Devart.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public sqlite_sequenceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::Devart.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::Devart.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::Devart.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sqlite_sequence";
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("seq", "seq");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Devart.Data.SQLite.SQLiteCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"main\".\"sqlite_sequence\" (\"name\", \"seq\") VALUES (:name, :seq)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.SQLite.SQLiteParameter param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "name";
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Text;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.SQLite.SQLiteParameter();
            param.ParameterName = "seq";
            param.DbType = global::System.Data.DbType.Int64;
            param.SQLiteType = global::Devart.Data.SQLite.SQLiteType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "seq";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::Ninja.Properties.Settings.Default.SQLiteConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::Devart.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT name, seq FROM \"main\".\"sqlite_sequence\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(R6.sqlite_sequenceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual R6.sqlite_sequenceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            R6.sqlite_sequenceDataTable dataTable = new R6.sqlite_sequenceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6.sqlite_sequenceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(R6 dataSet) {
            return this.Adapter.Update(dataSet, "sqlite_sequence");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string name, global::System.Nullable<long> seq) {
            if ((name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name));
            }
            if ((seq.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(seq.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private A6TableAdapter _a6TableAdapter;
        
        private B6TableAdapter _b6TableAdapter;
        
        private E1TableAdapter _e1TableAdapter;
        
        private F6TableAdapter _f6TableAdapter;
        
        private O6TableAdapter _o6TableAdapter;
        
        private O7TableAdapter _o7TableAdapter;
        
        private O8TableAdapter _o8TableAdapter;
        
        private P6TableAdapter _p6TableAdapter;
        
        private P7TableAdapter _p7TableAdapter;
        
        private P8TableAdapter _p8TableAdapter;
        
        private S6TableAdapter _s6TableAdapter;
        
        private sqlite_sequenceTableAdapter _sqlite_sequenceTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public A6TableAdapter A6TableAdapter {
            get {
                return this._a6TableAdapter;
            }
            set {
                this._a6TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public B6TableAdapter B6TableAdapter {
            get {
                return this._b6TableAdapter;
            }
            set {
                this._b6TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public E1TableAdapter E1TableAdapter {
            get {
                return this._e1TableAdapter;
            }
            set {
                this._e1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public F6TableAdapter F6TableAdapter {
            get {
                return this._f6TableAdapter;
            }
            set {
                this._f6TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public O6TableAdapter O6TableAdapter {
            get {
                return this._o6TableAdapter;
            }
            set {
                this._o6TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public O7TableAdapter O7TableAdapter {
            get {
                return this._o7TableAdapter;
            }
            set {
                this._o7TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public O8TableAdapter O8TableAdapter {
            get {
                return this._o8TableAdapter;
            }
            set {
                this._o8TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public P6TableAdapter P6TableAdapter {
            get {
                return this._p6TableAdapter;
            }
            set {
                this._p6TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public P7TableAdapter P7TableAdapter {
            get {
                return this._p7TableAdapter;
            }
            set {
                this._p7TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public P8TableAdapter P8TableAdapter {
            get {
                return this._p8TableAdapter;
            }
            set {
                this._p8TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public S6TableAdapter S6TableAdapter {
            get {
                return this._s6TableAdapter;
            }
            set {
                this._s6TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public sqlite_sequenceTableAdapter sqlite_sequenceTableAdapter {
            get {
                return this._sqlite_sequenceTableAdapter;
            }
            set {
                this._sqlite_sequenceTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._a6TableAdapter != null) 
                            && (this._a6TableAdapter.Connection != null))) {
                    return this._a6TableAdapter.Connection;
                }
                if (((this._b6TableAdapter != null) 
                            && (this._b6TableAdapter.Connection != null))) {
                    return this._b6TableAdapter.Connection;
                }
                if (((this._e1TableAdapter != null) 
                            && (this._e1TableAdapter.Connection != null))) {
                    return this._e1TableAdapter.Connection;
                }
                if (((this._f6TableAdapter != null) 
                            && (this._f6TableAdapter.Connection != null))) {
                    return this._f6TableAdapter.Connection;
                }
                if (((this._o6TableAdapter != null) 
                            && (this._o6TableAdapter.Connection != null))) {
                    return this._o6TableAdapter.Connection;
                }
                if (((this._o7TableAdapter != null) 
                            && (this._o7TableAdapter.Connection != null))) {
                    return this._o7TableAdapter.Connection;
                }
                if (((this._o8TableAdapter != null) 
                            && (this._o8TableAdapter.Connection != null))) {
                    return this._o8TableAdapter.Connection;
                }
                if (((this._p6TableAdapter != null) 
                            && (this._p6TableAdapter.Connection != null))) {
                    return this._p6TableAdapter.Connection;
                }
                if (((this._p7TableAdapter != null) 
                            && (this._p7TableAdapter.Connection != null))) {
                    return this._p7TableAdapter.Connection;
                }
                if (((this._p8TableAdapter != null) 
                            && (this._p8TableAdapter.Connection != null))) {
                    return this._p8TableAdapter.Connection;
                }
                if (((this._s6TableAdapter != null) 
                            && (this._s6TableAdapter.Connection != null))) {
                    return this._s6TableAdapter.Connection;
                }
                if (((this._sqlite_sequenceTableAdapter != null) 
                            && (this._sqlite_sequenceTableAdapter.Connection != null))) {
                    return this._sqlite_sequenceTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._a6TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._b6TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._e1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._f6TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._o6TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._o7TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._o8TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._p6TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._p7TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._p8TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._s6TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sqlite_sequenceTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(R6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._a6TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.A6.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._a6TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._b6TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.B6.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._b6TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._e1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.E1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._e1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._f6TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.F6.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._f6TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._o6TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.O6.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._o6TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._o7TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.O7.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._o7TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._o8TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.O8.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._o8TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._p6TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.P6.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._p6TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._p7TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.P7.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._p7TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._p8TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.P8.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._p8TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._s6TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.S6.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._s6TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sqlite_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.sqlite_sequence.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sqlite_sequenceTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(R6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._a6TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.A6.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._a6TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._b6TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.B6.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._b6TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._e1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.E1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._e1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._f6TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.F6.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._f6TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._o6TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.O6.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._o6TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._o7TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.O7.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._o7TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._o8TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.O8.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._o8TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._p6TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.P6.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._p6TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._p7TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.P7.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._p7TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._p8TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.P8.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._p8TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._s6TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.S6.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._s6TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sqlite_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.sqlite_sequence.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sqlite_sequenceTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(R6 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sqlite_sequenceTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.sqlite_sequence.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sqlite_sequenceTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._s6TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.S6.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._s6TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._p8TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.P8.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._p8TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._p7TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.P7.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._p7TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._p6TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.P6.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._p6TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._o8TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.O8.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._o8TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._o7TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.O7.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._o7TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._o6TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.O6.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._o6TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._f6TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.F6.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._f6TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._e1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.E1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._e1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._b6TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.B6.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._b6TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._a6TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.A6.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._a6TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(R6 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._a6TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._a6TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._b6TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._b6TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._e1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._e1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._f6TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._f6TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._o6TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._o6TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._o7TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._o7TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._o8TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._o8TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._p6TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._p6TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._p7TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._p7TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._p8TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._p8TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._s6TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._s6TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sqlite_sequenceTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sqlite_sequenceTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._a6TableAdapter != null)) {
                    revertConnections.Add(this._a6TableAdapter, this._a6TableAdapter.Connection);
                    this._a6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._a6TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._a6TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._a6TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._a6TableAdapter.Adapter);
                    }
                }
                if ((this._b6TableAdapter != null)) {
                    revertConnections.Add(this._b6TableAdapter, this._b6TableAdapter.Connection);
                    this._b6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._b6TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._b6TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._b6TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._b6TableAdapter.Adapter);
                    }
                }
                if ((this._e1TableAdapter != null)) {
                    revertConnections.Add(this._e1TableAdapter, this._e1TableAdapter.Connection);
                    this._e1TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._e1TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._e1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._e1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._e1TableAdapter.Adapter);
                    }
                }
                if ((this._f6TableAdapter != null)) {
                    revertConnections.Add(this._f6TableAdapter, this._f6TableAdapter.Connection);
                    this._f6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._f6TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._f6TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._f6TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._f6TableAdapter.Adapter);
                    }
                }
                if ((this._o6TableAdapter != null)) {
                    revertConnections.Add(this._o6TableAdapter, this._o6TableAdapter.Connection);
                    this._o6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._o6TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._o6TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._o6TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._o6TableAdapter.Adapter);
                    }
                }
                if ((this._o7TableAdapter != null)) {
                    revertConnections.Add(this._o7TableAdapter, this._o7TableAdapter.Connection);
                    this._o7TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._o7TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._o7TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._o7TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._o7TableAdapter.Adapter);
                    }
                }
                if ((this._o8TableAdapter != null)) {
                    revertConnections.Add(this._o8TableAdapter, this._o8TableAdapter.Connection);
                    this._o8TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._o8TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._o8TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._o8TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._o8TableAdapter.Adapter);
                    }
                }
                if ((this._p6TableAdapter != null)) {
                    revertConnections.Add(this._p6TableAdapter, this._p6TableAdapter.Connection);
                    this._p6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._p6TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._p6TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._p6TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._p6TableAdapter.Adapter);
                    }
                }
                if ((this._p7TableAdapter != null)) {
                    revertConnections.Add(this._p7TableAdapter, this._p7TableAdapter.Connection);
                    this._p7TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._p7TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._p7TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._p7TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._p7TableAdapter.Adapter);
                    }
                }
                if ((this._p8TableAdapter != null)) {
                    revertConnections.Add(this._p8TableAdapter, this._p8TableAdapter.Connection);
                    this._p8TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._p8TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._p8TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._p8TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._p8TableAdapter.Adapter);
                    }
                }
                if ((this._s6TableAdapter != null)) {
                    revertConnections.Add(this._s6TableAdapter, this._s6TableAdapter.Connection);
                    this._s6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._s6TableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._s6TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._s6TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._s6TableAdapter.Adapter);
                    }
                }
                if ((this._sqlite_sequenceTableAdapter != null)) {
                    revertConnections.Add(this._sqlite_sequenceTableAdapter, this._sqlite_sequenceTableAdapter.Connection);
                    this._sqlite_sequenceTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(workConnection));
                    this._sqlite_sequenceTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._sqlite_sequenceTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sqlite_sequenceTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sqlite_sequenceTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._a6TableAdapter != null)) {
                    this._a6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._a6TableAdapter]));
                    this._a6TableAdapter.Transaction = null;
                }
                if ((this._b6TableAdapter != null)) {
                    this._b6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._b6TableAdapter]));
                    this._b6TableAdapter.Transaction = null;
                }
                if ((this._e1TableAdapter != null)) {
                    this._e1TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._e1TableAdapter]));
                    this._e1TableAdapter.Transaction = null;
                }
                if ((this._f6TableAdapter != null)) {
                    this._f6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._f6TableAdapter]));
                    this._f6TableAdapter.Transaction = null;
                }
                if ((this._o6TableAdapter != null)) {
                    this._o6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._o6TableAdapter]));
                    this._o6TableAdapter.Transaction = null;
                }
                if ((this._o7TableAdapter != null)) {
                    this._o7TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._o7TableAdapter]));
                    this._o7TableAdapter.Transaction = null;
                }
                if ((this._o8TableAdapter != null)) {
                    this._o8TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._o8TableAdapter]));
                    this._o8TableAdapter.Transaction = null;
                }
                if ((this._p6TableAdapter != null)) {
                    this._p6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._p6TableAdapter]));
                    this._p6TableAdapter.Transaction = null;
                }
                if ((this._p7TableAdapter != null)) {
                    this._p7TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._p7TableAdapter]));
                    this._p7TableAdapter.Transaction = null;
                }
                if ((this._p8TableAdapter != null)) {
                    this._p8TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._p8TableAdapter]));
                    this._p8TableAdapter.Transaction = null;
                }
                if ((this._s6TableAdapter != null)) {
                    this._s6TableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._s6TableAdapter]));
                    this._s6TableAdapter.Transaction = null;
                }
                if ((this._sqlite_sequenceTableAdapter != null)) {
                    this._sqlite_sequenceTableAdapter.Connection = ((global::Devart.Data.SQLite.SQLiteConnection)(revertConnections[this._sqlite_sequenceTableAdapter]));
                    this._sqlite_sequenceTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591