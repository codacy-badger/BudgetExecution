<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="captionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA2ZJREFUaEPtWS2ME0EUrkAgTiAQCAQCgUAgEIhLQCAQJATobiEh4QTiBAKBQFwC
        CfJI2t02OXHiBAJRgTiBrDhx4sQJLml3tkkF4gQCgUBUHN8383Z2ulx/RGl3kn7JJJ33drvfm3n73pu3
        lRVWWGFxeLk3uBg01GYYq04Qp4MwTg+CKP0Q1JNbckl5Uat3r4HwMcYwjPrNp83ubRhRx/yMsmqUPpBL
        y4fHkboaRuqUZLniIq5g3hYDIO9/FXG5cPd950IQq++GqOpwLqqCAblhpYLxeUOy1kzviVgjaA2u0J2C
        KHn7qD64JOLygKSs6+ClFbE/oFuU3kXGgb4O4j8yAxh1ROUHwji5n6+++uO+vF4AkWc3MwDjQMR+gBkX
        IfOX3QEkLFGVE0Gjt84Yb0eUHjmrf4Z5d0SPUW2l1+X25YNxnGHSDvi8awBkh0UDgtbJmtxePiD2p87q
        //bqBX7+qXfZXX2s9jdR+YFaQz10DUAp8U5UfgDxf8s1AO50R1R+AC/sfk7eM/8nYMDPfAd8839z6rLu
        453/VyNVHTWgty4qPxDG/W1LHsmMJYWo/IDJstkOqI6I/QGjTr4Dnh1gwkb/Zr76/55/WbwhJ7xhZDI1
        k9oVlQWDAHRstRwjALwQ8WIQxMlGRr7o/+Zwo8vrAzfMur0gfcB3TnCsaEW1GLC7YB8+wf9J1KlWd4zs
        ZI2EMV4xczP8LjyCaQJiwDT/t9ka5wSZf1lqzjAnsHRoDZiyeuZdMNfq3830s6iWA3YcLCH4+rT6h83c
        3ID0aOn5ohonrzNCdAcRT4S81OUoN+gCuQHJhogngs1cfX0ZmrpYdfb6jQGIMiKeCOYDfU+kTkW0HDyJ
        ezcs+RlXky7n9o3YfhfV4sGOhBAZ0hgRj4U2OEr3dOyXyMUqVtT/BzpMIskUywMC7nOoDQApEY2F9Evb
        WSsdv/nFBsb3t/UFgG4KoCyR6XzgrPJI1HDC4XCWRhUS3Ece+mVK4/UnJi4C58ZA1Erz/maWRQz9MJAQ
        sc6gmvw5LqDJYFc4uHPcQRIWtQZroex/RY//S7ZEPT+wMsweRLIkp3cF5fN5bkUUj5cY7WKCE5eyBRwN
        ENX8YapNhj4kIIQ+vStTfFVajvthI3lWJJ+BxRvI72CRNkW0wgorzIxK5S+SZDnPIfk3wgAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>